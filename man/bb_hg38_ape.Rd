% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bb_hg38_ape.R
\name{bb_hg38_ape}
\alias{bb_hg38_ape}
\title{Construct an APE Object from the hg38 Reference}
\usage{
bb_hg38_ape(
  query,
  extend_left = 0,
  extend_right = 0,
  include_type = c("ncRNA_gene", "rRNA", "exon", "pseudogene", "pseudogenic_transcript",
    "ncRNA", "gene", "CDS", "lnc_RNA", "mRNA", "three_prime_UTR", "five_prime_UTR",
    "unconfirmed_transcript", "scRNA", "C_gene_segment", "D_gene_segment",
    "J_gene_segment", "V_gene_segment", "miRNA", "tRNA", "snRNA", "snoRNA"),
  additional_granges = NULL
)
}
\arguments{
\item{query}{Either a valid gene name or a named numeric vector of genome coordinates.  This vector should be of the form:  c(chr = 1, start = 1000, end = 2000).  The vector must be numeric an must have those names.  The chromosome number will be converted to "chr1" etc internally.}

\item{extend_left}{Number of bases to extend the query to the left or "upstream" relative to the + strand.}

\item{extend_right}{Number of bases to extend the query to the right or "downstream" relative to the + strand.}

\item{include_type}{The type of features to include from the zfin gene model.}

\item{additional_granges}{A GRanges object with features to add to the Ape Object.  Coordinates should all be relative to the GRCz11 reference, \emph{NOT} the sequence extracted for the ape file.  The Granges object can be constructed with the following syntax:  GenomicRanges::makeGRangesFromDataFrame(data.frame(seqname = "chr6", start = 40523370, end = 40523380, strand = "+", type = "addl_feature", gene_name = "some_gene", label = "feature1"), keep.extra.columns = T).  The gene_name argument here is optional.  If you have defined features based on the extracted sequence, (i.e. relative to position 1 in the ORIGIN section of the Ape object), the best option is to use the feature setting function FEATURES(instance_of_Ape) <- GRanges_Object.}
}
\value{
An Ape object
}
\description{
This function takes either a gene name or sequence coordinates and returns an ape object with DNA sequence from the GRCh38 reference. Features overlapping the query range (gene or sequence) are returned as a GRanges object and as features within the Ape object.  The features included can optionally be filtered using the "include_type" argument to the function.  User-defined features can be added at the point of extracting the sequence and creating the object.  This is useful if features are predefined with GRCh38 sequence coordinates since the coordinates are renamed relative to the query when the Ape object is made.  Using the "additional_granges" argument, you can provide additional features not present in the Zfin gene model which will be added to the Ape object GRanges slot and to the features slot.
}
