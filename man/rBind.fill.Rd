% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Matrix.utils.R
\name{rBind.fill}
\alias{rBind.fill}
\title{Combine matrixes by row, fill in missing columns}
\usage{
rBind.fill(x, ..., fill = NULL, out.class = class(rbind(x, x))[1])
}
\arguments{
\item{x, ...}{Objects to combine.  If the first argument is a list and
\code{..} is unpopulated, the objects in that list will be combined.}

\item{fill}{value with which to fill unmatched columns}

\item{out.class}{the class of the output object.  Defaults to the class of x.
Note that some output classes are not possible due to R coercion
capabilities, such as converting a character matrix to a Matrix.}
}
\value{
a single object of the same class as the first input, or of class
\code{matrix} if the first object is one dimensional
}
\description{
rbinds a list of Matrix or matrix like objects, filling in missing columns.
}
\details{
Similar to \code{\link[plyr]{rbind.fill.matrix}}, but works for
\code{\link{Matrix}} as well as all other R objects.  It is completely
agnostic to class, and will produce an object of the class of the first input
(or of class \code{matrix} if the first object is one dimensional).

The implementation is recursive, so it can handle an arbitrary number of
inputs, albeit inefficiently for large numbers of inputs.

This method is still experimental, but should work in most cases.  If the
data sets consist solely of data frames, \code{\link[plyr]{rbind.fill}} is
preferred.
}
\seealso{
\code{\link[plyr]{rbind.fill}}

\code{\link[plyr]{rbind.fill.matrix}}
}
