[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Brad Blaser Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Ape.html","id":"ape-class","dir":"Articles","previous_headings":"","what":"Ape Class","title":"Reading, Editing and Writing DNA Sequences with Ape","text":"designed data structure refer “Ape”, reference gui-based program mentioned , designed hold genbank-formatted DNA sequence data within R programming environment. motivation behind follows: Let’s say wanted clone gene enhancer genomic DNA, edit specific exon CRISPR, map putative transcription factor binding sites. One way go ensembl, download sequence, manually annotate sequence files desired, work experiment. 100% interactive 0% programmatic. can also use pure R/bioconductor tools get sequence feature information. programmatic, problem learn access genomic sequence data via R use GenomicRanges Biostrings define features. done programmatically require lot hard coding get done. want accomplish task. Ape class associated functions automate tasks . can read write genebank/Ape format files interactive programmatic editing. Ape class objects store sequence internally Biostring features GenomicRanges object can use interfaces data desired. companion blaseRdata package precompiled hg38 danRer11 genome references gene models human zebrafish one-stop shopping sequence data. Mouse data added future version.","code":""},{"path":"/articles/Ape.html","id":"reading-creating-or-writing-genbankape-files","dir":"Articles","previous_headings":"","what":"Reading, Creating, or Writing Genbank/Ape Files","title":"Reading, Editing and Writing DNA Sequences with Ape","text":"Lets say collection genbank/Ape files like read R can extract sequence /feature information programmatic analysis. can show sequence information R console typing name Ape object like : Printing data console may useful thing , shows everything parsed correctly. look like genbank/Ape file. can also create Ape object based hg38 danRer11 reference data like : can select certain feature types include specifying include_type argument. may also add flanking sequences specify genomic regions coordinate rather gene name. Note extension arguments strictly relative top + strand, sense upstream downstream may different relative gene interest gene top bottom strand. notice feature coordinates recalculated relative sequence present object. Let’s say feature knew terms genomic coordinates wanted include making object. : turns useful feature force using GenomicRanges code verbose less familiar. help page function remind create GRanges object. Note can supply number GRanges object generate features. Methods provided saving Ape objects either genbank/Ape files fasta files:","code":"# Read in the data  vignette_CXCL8_ape <- bb_parseape(system.file(\"extdata/hg38_CXCL8.ape\", package = \"blaseRdata\")) # Show the Ape Data   vignette_CXCL8_ape #> LOCUS       CXCL8                   3176 bp ds-DNA     linear        21-JAN-2022   #> DEFINITION      #> ACCESSION      #> VERSION      #> SOURCE      #> COMMENT     Sequence is from Homo sapiens, GRCh38. #> COMMENT     Gene models are from ensembl. #> COMMENT     Gene is CXCL8 #> COMMENT     Extensions 0 bp left and 0 bp right. #> COMMENT     Final genomic coordinates are: #> COMMENT     chr4 73740541-73743716 #> FEATURES             Location/Qualifiers #>  #>      gene            1..3176 #>                      /locus_tag=\"CXCL8_gene\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             119..182 #>                      /locus_tag=\"CXCL8_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             1002..1137 #>                      /locus_tag=\"CXCL8_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             1409..1496 #>                      /locus_tag=\"CXCL8_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             119..182 #>                      /locus_tag=\"CXCL8_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             1002..1137 #>                      /locus_tag=\"CXCL8_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             1409..1492 #>                      /locus_tag=\"CXCL8_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             1909..1924 #>                      /locus_tag=\"CXCL8_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      mRNA            1..1790 #>                      /locus_tag=\"CXCL8_mRNA\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      five_prime_UTR  1..118 #>                      /locus_tag=\"CXCL8_five_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #>      exon            1..182 #>                      /locus_tag=\"CXCL8_exon_1\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            1002..1137 #>                      /locus_tag=\"CXCL8_exon_4\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            1409..1790 #>                      /locus_tag=\"CXCL8_exon_7\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      three_prime_UTR 1497..1790 #>                      /locus_tag=\"CXCL8_three_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #>      lnc_RNA         29..1446 #>                      /locus_tag=\"CXCL8_lnc_RNA\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      exon            29..182 #>                      /locus_tag=\"CXCL8_exon_2\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            1002..1446 #>                      /locus_tag=\"CXCL8_exon_5\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      mRNA            29..3176 #>                      /locus_tag=\"CXCL8_mRNA\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      five_prime_UTR  29..118 #>                      /locus_tag=\"CXCL8_five_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #>      exon            29..182 #>                      /locus_tag=\"CXCL8_exon_3\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            1002..1137 #>                      /locus_tag=\"CXCL8_exon_6\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            1409..1492 #>                      /locus_tag=\"CXCL8_exon_8\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            1909..3176 #>                      /locus_tag=\"CXCL8_exon_9\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      three_prime_UTR 1925..3176 #>                      /locus_tag=\"CXCL8_three_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #> ORIGIN #>         1 AAAAAGCCAC CGGAGCACTC CATAAGGCAC AAACTTTCAG AGACAGCAGA GCACACAAGC #>        61 TTCTAGGACA AGAGCCAGGA AGAAACCACC GGAAGGAACC ATCTCACTGT GTGTAAACAT #>       121 GACTTCCAAG CTGGCCGTGG CTCTCTTGGC AGCCTTCCTG ATTTCTGCAG CTCTGTGTGA #>       181 AGGTAAGCAC ATCTTTCTGA CCTACAGCGT TTTCCTATGT CTAAATGTGA TCCTTAGATA #>       241 GCAAAGCTAT TCTTGATGCT TTGGTAACAA ACATCCTTTT TATTCAGAAA CAGAATATAA #>       301 TCTTAGCAGT CAATTAATGT TAAATTGAAG ATTTAGAAAA AACTATATAT AACACTTAGG #>       361 AAAGTATAAA GTTTGATCAA TATAGATATT CTGCTTTTAT AATTTATACC ATGTAGCATG #>       421 CATATATTTA ACGTAAATAA GTAATTTATA GTATGTCCTA TTGAGAACCA CGGTTACCTA #>       481 TATTATGTAT TAATATTGAG TTGAGCAAGG TAACTCAGAC AATTCCACTC CTTGTAGTAT #>       541 TTCATTGACA AGCCTCAGAT TTGTCATTAA TTCCTGTCTG GTTTAAAGAT ACCCTGATTA #>       601 TAGACCAGGC ATGTATAACT TATTTATATA TTTCTGTTAA TTCTTTCTGA AGGCAATTTC #>       661 TATGCTGGAG AGTCTTAGCT TGCCTACTAT AAATAACACT GTGGTATCAC AGAGGATTAT #>       721 GCAATATTGA CCAGATAAAA ATACCATGAA GATGTTGATA TTGTACAAAA AGAACTCTAA #>       781 CTCTTTATAT AGGAAGTCGT TCAATGTTGT CAGTTATGAC TGTTTTTTAA AACAAAGAAC #>       841 TAACTGAGGT CAAGGGCTAG GAGAATATTC AGGAATGAGT TCACTAGAAA CATGATGCCT #>       901 TCCATAGTCT CCAAATAATC ATATTGGAAT TAGAAAGGAA GTAGCTGGCA GAGCTGTGCC #>       961 TGTTGATAAA ATCAATCCTT AATCACTTTT TCCCCCAACA GGTGCAGTTT TGCCAAGGAG #>      1021 TGCTAAAGAA CTTAGATGTC AGTGCATAAA GACATACTCC AAACCTTTCC ACCCCAAATT #>      1081 TATCAAAGAA CTGAGAGTGA TTGAGAGTGG ACCACACTGC GCCAACACAG AAATTATGTA #>      1141 AGTACTTTAA AAAAGATTAG ATATTTTGTT TTAGCAAACT TAAAATTAAG GAAGGTGGAA #>      1201 ATATTTAGGA AAGTTCCAGG TGTTAGGATT ACAGTAGTAA ATGAAACAAA ACAAAATAAA #>      1261 AATATTTGTC TACATGACAT TTAAATATGG TAGCTTCCAC AACTACTATA AATGTTATTT #>      1321 TGGACTTAGA CTTTATGCCT GACTTAAGGA ATCATGATTT GAATGCAAAA ACTAAATATT #>      1381 AATCTGAACC ATTTCTTTCT TATTTCAGTG TAAAGCTTTC TGATGGAAGA GAGCTCTGTC #>      1441 TGGACCCCAA GGAAAACTGG GTGCAGAGGG TTGTGGAGAA GTTTTTGAAG AGGTAAGTTA #>      1501 TATATTTTTT AATTTAAATT TTTCATTTAT CCTGAGACAT ATAATCCAAA GTCAGCCTAT #>      1561 AAATTTCTTT CTGTTGCTAA AAATCGTCAT TAGGTATCTG CCTTTTTGGT TAAAAAAAAA #>      1621 AGGAATAGCA TCAATAGTGA GTTTGTTGTA CTCATGACCA GAAAGACCAT ACATAGTTTG #>      1681 CCCAGGAAAT TCTGGGTTTA AGCTTGTGTC CTATACTCTT AGTAAAGTTC TTTGTCACTC #>      1741 CCAGTAGTGT CCTATTTTAG ATGATAATTT CTTTGATCTC CCTATTTATA GTTGAGAATA #>      1801 TAGAGCATTT CTAACACATG AATGTCAAAG ACTATATTGA CTTTTCAAGA ACCCTACTTT #>      1861 CCTTCTTATT AAACATAGCT CATCTTTATA TTTTTAATTT TATTTTAGGG CTGAGAATTC #>      1921 ATAAAAAAAT TCATTCTCTG TGGTATCCAA GAATCAGTGA AGATGCCAGT GAAACTTCAA #>      1981 GCAAATCTAC TTCAACACTT CATGTATTGT GTGGGTCTGT TGTAGGGTTG CCAGATGCAA #>      2041 TACAAGATTC CTGGTTAAAT TTGAATTTCA GTAAACAATG AATAGTTTTT CATTGTACCA #>      2101 TGAAATATCC AGAACATACT TATATGTAAA GTATTATTTA TTTGAATCTA CAAAAAACAA #>      2161 CAAATAATTT TTAAATATAA GGATTTTCCT AGATATTGCA CGGGAGAATA TACAAATAGC #>      2221 AAAATTGAGG CCAAGGGCCA AGAGAATATC CGAACTTTAA TTTCAGGAAT TGAATGGGTT #>      2281 TGCTAGAATG TGATATTTGA AGCATCACAT AAAAATGATG GGACAATAAA TTTTGCCATA #>      2341 AAGTCAAATT TAGCTGGAAA TCCTGGATTT TTTTCTGTTA AATCTGGCAA CCCTAGTCTG #>      2401 CTAGCCAGGA TCCACAAGTC CTTGTTCCAC TGTGCCTTGG TTTCTCCTTT ATTTCTAAGT #>      2461 GGAAAAAGTA TTAGCCACCA TCTTACCTCA CAGTGATGTT GTGAGGACAT GTGGAAGCAC #>      2521 TTTAAGTTTT TTCATCATAA CATAAATTAT TTTCAAGTGT AACTTATTAA CCTATTTATT #>      2581 ATTTATGTAT TTATTTAAGC ATCAAATATT TGTGCAAGAA TTTGGAAAAA TAGAAGATGA #>      2641 ATCATTGATT GAATAGTTAT AAAGATGTTA TAGTAAATTT ATTTTATTTT AGATATTAAA #>      2701 TGATGTTTTA TTAGATAAAT TTCAATCAGG GTTTTTAGAT TAAACAAACA AACAATTGGG #>      2761 TACCCAGTTA AATTTTCATT TCAGATAAAC AACAAATAAT TTTTTAGTAT AAGTACATTA #>      2821 TTGTTTATCT GAAATTTTAA TTGAACTAAC AATCCTAGTT TGATACTCCC AGTCTTGTCA #>      2881 TTGCCAGCTG TGTTGGTAGT GCTGTGTTGA ATTACGGAAT AATGAGTTAG AACTATTAAA #>      2941 ACAGCCAAAA CTCCACAGTC AATATTAGTA ATTTCTTGCT GGTTGAAACT TGTTTATTAT #>      3001 GTACAAATAG ATTCTTATAA TATTATTTAA ATGACTGCAT TTTTAAATAC AAGGCTTTAT #>      3061 ATTTTTAACT TTAAGATGTT TTTATGTGCT CTCCAAATTT TTTTTACTGT TTCTGATTGT #>      3121 ATGGAAATAT AAAAGTAAAT ATGAAACATT TAAAATATAA TTTGTTGTCA AAGTAA #>  #> // vignette_CXCL1_ape <- bb_make_ape_genomic(\"CXCL1\", genome = \"hg38\")  vignette_CXCL1_ape #> LOCUS       CXCL1                   1916 bp ds-DNA     linear        12-JAN-2024  #> COMMENT     Sequence is from Homo sapiens hg38. #> COMMENT     Gene models are from ensembl. #> COMMENT     Gene is CXCL1 #> COMMENT     Extensions 0 bp left and 0 bp right. #> COMMENT     Final genomic coordinates are: #> COMMENT     chr4 73869393-73871308 #> FEATURES             Location/Qualifiers #>  #>      gene            1..1916 #>                      /locus_tag=\"CXCL1_gene\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             79..178 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             277..400 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             514..597 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             1129..1144 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      lnc_RNA         1..785 #>                      /locus_tag=\"CXCL1_lnc_RNA\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      exon            1..178 #>                      /locus_tag=\"CXCL1_exon_1\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            277..400 #>                      /locus_tag=\"CXCL1_exon_3\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            514..785 #>                      /locus_tag=\"CXCL1_exon_5\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      mRNA            1..1916 #>                      /locus_tag=\"CXCL1_mRNA\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      five_prime_UTR  1..78 #>                      /locus_tag=\"CXCL1_five_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #>      exon            1..178 #>                      /locus_tag=\"CXCL1_exon_2\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            277..400 #>                      /locus_tag=\"CXCL1_exon_4\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            514..597 #>                      /locus_tag=\"CXCL1_exon_6\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            1129..1916 #>                      /locus_tag=\"CXCL1_exon_7\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      three_prime_UTR 1145..1916 #>                      /locus_tag=\"CXCL1_three_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #> ORIGIN #>         1 ACAGAGCCCG GGCCGCAGGC ACCTCCTCGC CAGCTCTTCC GCTCCTCTCA CAGCCGCCAG #>        61 ACCCGCCTGC TGAGCCCCAT GGCCCGCGCT GCTCTCTCCG CCGCCCCCAG CAATCCCCGG #>       121 CTCCTGCGAG TGGCACTGCT GCTCCTGCTC CTGGTAGCCG CTGGCCGGCG CGCAGCAGGT #>       181 GGGTACCGGC GCCCTGGGGT CCCCGGGCCG GACGCGGCTG GGGTAGGCAC CCAGCGCCGA #>       241 CAGCCTCGCT CAGTCAGTGA GTCTCTTCTT CCCTAGGAGC GTCCGTGGCC ACTGAACTGC #>       301 GCTGCCAGTG CTTGCAGACC CTGCAGGGAA TTCACCCCAA GAACATCCAA AGTGTGAACG #>       361 TGAAGTCCCC CGGACCCCAC TGCGCCCAAA CCGAAGTCAT GTAAGTCCCG CCCCGCGCTG #>       421 CCTCTGCCAC CGCCGGGGTC CCAGACCCTC CTGCTGCCCC AACCCTGTCC CCAGCCCGAC #>       481 CTCCTGCCTC ACGAGATTCC CTTCCCTCTG CAGAGCCACA CTCAAGAATG GGCGGAAAGC #>       541 TTGCCTCAAT CCTGCATCCC CCATAGTTAA GAAAATCATC GAAAAGATGC TGAACAGGTG #>       601 AGTTATGGTT TCCATGTACA CAGGCGACTG GAGCCGTTGG TCAGAAATAC TGGCATGTGC #>       661 CCCCTAAAAA TAAAATCAGG AAAACCCAGG GGTTAGTTGA AGGACTAGAA ATTGGGATTA #>       721 TTGTTTTCAC AATTAAGGTT TCCTTTACGA TAATTACTGC TCTGGTGCCA GAGGATATTC #>       781 CCAATGCCTG GCGTCCCCAC CCTGGTTCTT CCTTCGTTCC AATGAATGTA GGTAAAACTG #>       841 CCTTCATTTG AGGCCCAGTA GGACAAACAG CAACAGGTTC TGGCTGTTTT TAATCCAATA #>       901 GTACAGTGGA GACCACCGCC CCACCCCACC CCCATTCCTA AAAGAGCATC CCAAGCTTAG #>       961 AGGTCCCTGC CACACAGCAC AGCTGTCATA GGCAGTAGCC ACTTGGTTGC CAGGCTGGGG #>      1021 AAACTGCATT CGGAAAACTC TAGAGGCTGG AGGAGCAGGG CAGGAGAAGA GTGTTGTGCA #>      1081 ATCAGCTTTC CCGAGCACCT ACTCAGGGCA CCCATTTTCT CATTGCAGTG ACAAATCCAA #>      1141 CTGACCAGAA GGGAGGAGGA AGCTCACTGG TGGCTGTTCC TGAAGGAGGC CCTGCCCTTA #>      1201 TAGGAACAGA AGAGGAAAGA GAGACACAGC TGCAGAGGCC ACCTGGATTG TGCCTAATGT #>      1261 GTTTGAGCAT CGCTTAGGAG AAGTCTTCTA TTTATTTATT TATTCATTAG TTTTGAAGAT #>      1321 TCTATGTTAA TATTTTAGGT GTAAAATAAT TAAGGGTATG ATTAACTCTA CCTGCACACT #>      1381 GTCCTATTAT ATTCATTCTT TTTGAAATGT CAACCCCAAG TTAGTTCAAT CTGGATTCAT #>      1441 ATTTAATTTG AAGGTAGAAT GTTTTCAAAT GTTCTCCAGT CATTATGTTA ATATTTCTGA #>      1501 GGAGCCTGCA ACATGCCAGC CACTGTGATA GAGGCTGGCG GATCCAAGCA AATGGCCAAT #>      1561 GAGATCATTG TGAAGGCAGG GGAATGTATG TGCACATCTG TTTTGTAACT GTTTAGATGA #>      1621 ATGTCAGTTG TTATTTATTG AAATGATTTC ACAGTGTGTG GTCAACATTT CTCATGTTGA #>      1681 AACTTTAAGA ACTAAAATGT TCTAAATATC CCTTGGACAT TTTATGTCTT TCTTGTAAGG #>      1741 CATACTGCCT TGTTTAATGG TAGTTTTACA GTGTTTCTGG CTTAGAACAA AGGGGCTTAA #>      1801 TTATTGATGT TTTCATAGAG AATATAAAAA TAAAGCACTT ATAGAAAAAA CTCGTTTGAT #>      1861 TTTTGGGGGG AAACAAGGGC TACCTTTACT GGAAAATCTG GTGATTTATA TCAATA #>  #> // # Get genomic sequence and extend 100 bp left and right. vignette_CXCL1_ape <- bb_make_ape_genomic(\"CXCL1\", genome = \"hg38\", extend_left = 100, extend_right = 100)  vignette_CXCL1_ape #> LOCUS       CXCL1                   2116 bp ds-DNA     linear        12-JAN-2024  #> COMMENT     Sequence is from Homo sapiens hg38. #> COMMENT     Gene models are from ensembl. #> COMMENT     Gene is CXCL1 #> COMMENT     Extensions 100 bp left and 100 bp right. #> COMMENT     Final genomic coordinates are: #> COMMENT     chr4 73869293-73871408 #> FEATURES             Location/Qualifiers #>  #>      gene            101..2016 #>                      /locus_tag=\"CXCL1_gene\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             179..278 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             377..500 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             614..697 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             1229..1244 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      lnc_RNA         101..885 #>                      /locus_tag=\"CXCL1_lnc_RNA\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      exon            101..278 #>                      /locus_tag=\"CXCL1_exon_1\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            377..500 #>                      /locus_tag=\"CXCL1_exon_3\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            614..885 #>                      /locus_tag=\"CXCL1_exon_5\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      mRNA            101..2016 #>                      /locus_tag=\"CXCL1_mRNA\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      five_prime_UTR  101..178 #>                      /locus_tag=\"CXCL1_five_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #>      exon            101..278 #>                      /locus_tag=\"CXCL1_exon_2\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            377..500 #>                      /locus_tag=\"CXCL1_exon_4\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            614..697 #>                      /locus_tag=\"CXCL1_exon_6\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            1229..2016 #>                      /locus_tag=\"CXCL1_exon_7\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      three_prime_UTR 1245..2016 #>                      /locus_tag=\"CXCL1_three_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #> ORIGIN #>         1 TCGGGATCGA TCTGGAACTC CGGGAATTTC CCTGGCCCGG GGGCTCCGGG CTTTCCAGCC #>        61 CCAACCATGC ATAAAAGGGG TTCGCGGATC TCGGAGAGCC ACAGAGCCCG GGCCGCAGGC #>       121 ACCTCCTCGC CAGCTCTTCC GCTCCTCTCA CAGCCGCCAG ACCCGCCTGC TGAGCCCCAT #>       181 GGCCCGCGCT GCTCTCTCCG CCGCCCCCAG CAATCCCCGG CTCCTGCGAG TGGCACTGCT #>       241 GCTCCTGCTC CTGGTAGCCG CTGGCCGGCG CGCAGCAGGT GGGTACCGGC GCCCTGGGGT #>       301 CCCCGGGCCG GACGCGGCTG GGGTAGGCAC CCAGCGCCGA CAGCCTCGCT CAGTCAGTGA #>       361 GTCTCTTCTT CCCTAGGAGC GTCCGTGGCC ACTGAACTGC GCTGCCAGTG CTTGCAGACC #>       421 CTGCAGGGAA TTCACCCCAA GAACATCCAA AGTGTGAACG TGAAGTCCCC CGGACCCCAC #>       481 TGCGCCCAAA CCGAAGTCAT GTAAGTCCCG CCCCGCGCTG CCTCTGCCAC CGCCGGGGTC #>       541 CCAGACCCTC CTGCTGCCCC AACCCTGTCC CCAGCCCGAC CTCCTGCCTC ACGAGATTCC #>       601 CTTCCCTCTG CAGAGCCACA CTCAAGAATG GGCGGAAAGC TTGCCTCAAT CCTGCATCCC #>       661 CCATAGTTAA GAAAATCATC GAAAAGATGC TGAACAGGTG AGTTATGGTT TCCATGTACA #>       721 CAGGCGACTG GAGCCGTTGG TCAGAAATAC TGGCATGTGC CCCCTAAAAA TAAAATCAGG #>       781 AAAACCCAGG GGTTAGTTGA AGGACTAGAA ATTGGGATTA TTGTTTTCAC AATTAAGGTT #>       841 TCCTTTACGA TAATTACTGC TCTGGTGCCA GAGGATATTC CCAATGCCTG GCGTCCCCAC #>       901 CCTGGTTCTT CCTTCGTTCC AATGAATGTA GGTAAAACTG CCTTCATTTG AGGCCCAGTA #>       961 GGACAAACAG CAACAGGTTC TGGCTGTTTT TAATCCAATA GTACAGTGGA GACCACCGCC #>      1021 CCACCCCACC CCCATTCCTA AAAGAGCATC CCAAGCTTAG AGGTCCCTGC CACACAGCAC #>      1081 AGCTGTCATA GGCAGTAGCC ACTTGGTTGC CAGGCTGGGG AAACTGCATT CGGAAAACTC #>      1141 TAGAGGCTGG AGGAGCAGGG CAGGAGAAGA GTGTTGTGCA ATCAGCTTTC CCGAGCACCT #>      1201 ACTCAGGGCA CCCATTTTCT CATTGCAGTG ACAAATCCAA CTGACCAGAA GGGAGGAGGA #>      1261 AGCTCACTGG TGGCTGTTCC TGAAGGAGGC CCTGCCCTTA TAGGAACAGA AGAGGAAAGA #>      1321 GAGACACAGC TGCAGAGGCC ACCTGGATTG TGCCTAATGT GTTTGAGCAT CGCTTAGGAG #>      1381 AAGTCTTCTA TTTATTTATT TATTCATTAG TTTTGAAGAT TCTATGTTAA TATTTTAGGT #>      1441 GTAAAATAAT TAAGGGTATG ATTAACTCTA CCTGCACACT GTCCTATTAT ATTCATTCTT #>      1501 TTTGAAATGT CAACCCCAAG TTAGTTCAAT CTGGATTCAT ATTTAATTTG AAGGTAGAAT #>      1561 GTTTTCAAAT GTTCTCCAGT CATTATGTTA ATATTTCTGA GGAGCCTGCA ACATGCCAGC #>      1621 CACTGTGATA GAGGCTGGCG GATCCAAGCA AATGGCCAAT GAGATCATTG TGAAGGCAGG #>      1681 GGAATGTATG TGCACATCTG TTTTGTAACT GTTTAGATGA ATGTCAGTTG TTATTTATTG #>      1741 AAATGATTTC ACAGTGTGTG GTCAACATTT CTCATGTTGA AACTTTAAGA ACTAAAATGT #>      1801 TCTAAATATC CCTTGGACAT TTTATGTCTT TCTTGTAAGG CATACTGCCT TGTTTAATGG #>      1861 TAGTTTTACA GTGTTTCTGG CTTAGAACAA AGGGGCTTAA TTATTGATGT TTTCATAGAG #>      1921 AATATAAAAA TAAAGCACTT ATAGAAAAAA CTCGTTTGAT TTTTGGGGGG AAACAAGGGC #>      1981 TACCTTTACT GGAAAATCTG GTGATTTATA TCAATATTTC TCAATTTTTT AATTGTGTTT #>      2041 ATTTTTCTGG GTGTTCAATT TGCTATACAG ATAAATCAAA CTATGAGTTA TGCTTCATTT #>      2101 CATGCGGTGA TTGCTG #> // # Get genomic sequence and extend 100 bp left and right. # Now add a new custom feature based on original coordinates:  chr4 73869293-73871408 vignette_CXCL1_ape <- bb_make_ape_genomic(   \"CXCL1\",   genome = \"hg38\",   extend_left = 100,   extend_right = 100,   additional_granges = GenomicRanges::makeGRangesFromDataFrame(     data.frame(       seqname = \"chr4\",       start = 73869293,       end = 73871408,       strand = \"+\",       gene_name = \"CXCL1\",       type = \"custom_feature\",       label = \"custom_feature_1\",       fwdcolor = \"red\",       revcolor = \"blue\"     ),     keep.extra.columns = T   ) )  vignette_CXCL1_ape #> LOCUS       CXCL1                   2116 bp ds-DNA     linear        12-JAN-2024  #> COMMENT     Sequence is from Homo sapiens hg38. #> COMMENT     Gene models are from ensembl. #> COMMENT     Gene is CXCL1 #> COMMENT     Extensions 100 bp left and 100 bp right. #> COMMENT     Final genomic coordinates are: #> COMMENT     chr4 73869293-73871408 #> FEATURES             Location/Qualifiers #>  #>      gene            101..2016 #>                      /locus_tag=\"CXCL1_gene\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             179..278 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             377..500 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             614..697 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      CDS             1229..1244 #>                      /locus_tag=\"CXCL1_CDS\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      lnc_RNA         101..885 #>                      /locus_tag=\"CXCL1_lnc_RNA\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      exon            101..278 #>                      /locus_tag=\"CXCL1_exon_1\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            377..500 #>                      /locus_tag=\"CXCL1_exon_3\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            614..885 #>                      /locus_tag=\"CXCL1_exon_5\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      mRNA            101..2016 #>                      /locus_tag=\"CXCL1_mRNA\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #>      five_prime_UTR  101..178 #>                      /locus_tag=\"CXCL1_five_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #>      exon            101..278 #>                      /locus_tag=\"CXCL1_exon_2\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            377..500 #>                      /locus_tag=\"CXCL1_exon_4\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            614..697 #>                      /locus_tag=\"CXCL1_exon_6\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      exon            1229..2016 #>                      /locus_tag=\"CXCL1_exon_7\" #>                      /ApEinfo_fwdcolor=\"#3182bd\" #>                      /ApEinfo_revcolor=\"#31a354 #>  #>      three_prime_UTR 1245..2016 #>                      /locus_tag=\"CXCL1_three_prime_UTR\" #>                      /ApEinfo_fwdcolor=\"#9ecae1\" #>                      /ApEinfo_revcolor=\"#a1d99b #>  #>      custom_feature  1..2116 #>                      /locus_tag=\"CXCL1_custom_feature_1\" #>                      /ApEinfo_fwdcolor=\"red\" #>                      /ApEinfo_revcolor=\"blue #>  #> ORIGIN #>         1 TCGGGATCGA TCTGGAACTC CGGGAATTTC CCTGGCCCGG GGGCTCCGGG CTTTCCAGCC #>        61 CCAACCATGC ATAAAAGGGG TTCGCGGATC TCGGAGAGCC ACAGAGCCCG GGCCGCAGGC #>       121 ACCTCCTCGC CAGCTCTTCC GCTCCTCTCA CAGCCGCCAG ACCCGCCTGC TGAGCCCCAT #>       181 GGCCCGCGCT GCTCTCTCCG CCGCCCCCAG CAATCCCCGG CTCCTGCGAG TGGCACTGCT #>       241 GCTCCTGCTC CTGGTAGCCG CTGGCCGGCG CGCAGCAGGT GGGTACCGGC GCCCTGGGGT #>       301 CCCCGGGCCG GACGCGGCTG GGGTAGGCAC CCAGCGCCGA CAGCCTCGCT CAGTCAGTGA #>       361 GTCTCTTCTT CCCTAGGAGC GTCCGTGGCC ACTGAACTGC GCTGCCAGTG CTTGCAGACC #>       421 CTGCAGGGAA TTCACCCCAA GAACATCCAA AGTGTGAACG TGAAGTCCCC CGGACCCCAC #>       481 TGCGCCCAAA CCGAAGTCAT GTAAGTCCCG CCCCGCGCTG CCTCTGCCAC CGCCGGGGTC #>       541 CCAGACCCTC CTGCTGCCCC AACCCTGTCC CCAGCCCGAC CTCCTGCCTC ACGAGATTCC #>       601 CTTCCCTCTG CAGAGCCACA CTCAAGAATG GGCGGAAAGC TTGCCTCAAT CCTGCATCCC #>       661 CCATAGTTAA GAAAATCATC GAAAAGATGC TGAACAGGTG AGTTATGGTT TCCATGTACA #>       721 CAGGCGACTG GAGCCGTTGG TCAGAAATAC TGGCATGTGC CCCCTAAAAA TAAAATCAGG #>       781 AAAACCCAGG GGTTAGTTGA AGGACTAGAA ATTGGGATTA TTGTTTTCAC AATTAAGGTT #>       841 TCCTTTACGA TAATTACTGC TCTGGTGCCA GAGGATATTC CCAATGCCTG GCGTCCCCAC #>       901 CCTGGTTCTT CCTTCGTTCC AATGAATGTA GGTAAAACTG CCTTCATTTG AGGCCCAGTA #>       961 GGACAAACAG CAACAGGTTC TGGCTGTTTT TAATCCAATA GTACAGTGGA GACCACCGCC #>      1021 CCACCCCACC CCCATTCCTA AAAGAGCATC CCAAGCTTAG AGGTCCCTGC CACACAGCAC #>      1081 AGCTGTCATA GGCAGTAGCC ACTTGGTTGC CAGGCTGGGG AAACTGCATT CGGAAAACTC #>      1141 TAGAGGCTGG AGGAGCAGGG CAGGAGAAGA GTGTTGTGCA ATCAGCTTTC CCGAGCACCT #>      1201 ACTCAGGGCA CCCATTTTCT CATTGCAGTG ACAAATCCAA CTGACCAGAA GGGAGGAGGA #>      1261 AGCTCACTGG TGGCTGTTCC TGAAGGAGGC CCTGCCCTTA TAGGAACAGA AGAGGAAAGA #>      1321 GAGACACAGC TGCAGAGGCC ACCTGGATTG TGCCTAATGT GTTTGAGCAT CGCTTAGGAG #>      1381 AAGTCTTCTA TTTATTTATT TATTCATTAG TTTTGAAGAT TCTATGTTAA TATTTTAGGT #>      1441 GTAAAATAAT TAAGGGTATG ATTAACTCTA CCTGCACACT GTCCTATTAT ATTCATTCTT #>      1501 TTTGAAATGT CAACCCCAAG TTAGTTCAAT CTGGATTCAT ATTTAATTTG AAGGTAGAAT #>      1561 GTTTTCAAAT GTTCTCCAGT CATTATGTTA ATATTTCTGA GGAGCCTGCA ACATGCCAGC #>      1621 CACTGTGATA GAGGCTGGCG GATCCAAGCA AATGGCCAAT GAGATCATTG TGAAGGCAGG #>      1681 GGAATGTATG TGCACATCTG TTTTGTAACT GTTTAGATGA ATGTCAGTTG TTATTTATTG #>      1741 AAATGATTTC ACAGTGTGTG GTCAACATTT CTCATGTTGA AACTTTAAGA ACTAAAATGT #>      1801 TCTAAATATC CCTTGGACAT TTTATGTCTT TCTTGTAAGG CATACTGCCT TGTTTAATGG #>      1861 TAGTTTTACA GTGTTTCTGG CTTAGAACAA AGGGGCTTAA TTATTGATGT TTTCATAGAG #>      1921 AATATAAAAA TAAAGCACTT ATAGAAAAAA CTCGTTTGAT TTTTGGGGGG AAACAAGGGC #>      1981 TACCTTTACT GGAAAATCTG GTGATTTATA TCAATATTTC TCAATTTTTT AATTGTGTTT #>      2041 ATTTTTCTGG GTGTTCAATT TGCTATACAG ATAAATCAAA CTATGAGTTA TGCTTCATTT #>      2101 CATGCGGTGA TTGCTG #> // # Save as a genbank/Ape file Ape.save(vignette_CXCL1_ape, out = \"/path/to/file/filename.ape\")  # Save as fasta Ape.fasta(vignette_CXCL1_ape, out = \"/path/to/file/filename.fa\")"},{"path":"/articles/Ape.html","id":"getting-and-setting-ape-object-slots","dir":"Articles","previous_headings":"","what":"Getting and Setting Ape Object Slots","title":"Reading, Editing and Writing DNA Sequences with Ape","text":"may want programmatically change features Ape object, extract sequences features use elsewhere. need know bit GRanges Biostrings. get sequence features Ape Object: can set features Ape object like : shows subset granges object. want combine two granges objects, run c(object_1, object_2) etc.","code":"# get the sequence Ape.DNA(vignette_CXCL1_ape) #> DNAStringSet object of length 1: #>     width seq                                               names                #> [1]  2116 TCGGGATCGATCTGGAACTCCGG...TTCATTTCATGCGGTGATTGCTG ape_seq  # get the features Ape.granges(vignette_CXCL1_ape) #> GRanges object with 17 ranges and 4 metadata columns: #>                          seqnames    ranges strand |            type #>                             <Rle> <IRanges>  <Rle> |     <character> #>               CXCL1_gene  ape_seq  101-2016      + |            gene #>                CXCL1_CDS  ape_seq   179-278      + |             CDS #>                CXCL1_CDS  ape_seq   377-500      + |             CDS #>                CXCL1_CDS  ape_seq   614-697      + |             CDS #>                CXCL1_CDS  ape_seq 1229-1244      + |             CDS #>                      ...      ...       ...    ... .             ... #>             CXCL1_exon_4  ape_seq   377-500      + |            exon #>             CXCL1_exon_6  ape_seq   614-697      + |            exon #>             CXCL1_exon_7  ape_seq 1229-2016      + |            exon #>    CXCL1_three_prime_UTR  ape_seq 1245-2016      + | three_prime_UTR #>   CXCL1_custom_feature_1  ape_seq    1-2116      + |  custom_feature #>                                       locus_tag    fwdcolor    revcolor #>                                     <character> <character> <character> #>               CXCL1_gene             CXCL1_gene     #deebf7     #e5f5e0 #>                CXCL1_CDS              CXCL1_CDS     #deebf7     #e5f5e0 #>                CXCL1_CDS              CXCL1_CDS     #deebf7     #e5f5e0 #>                CXCL1_CDS              CXCL1_CDS     #deebf7     #e5f5e0 #>                CXCL1_CDS              CXCL1_CDS     #deebf7     #e5f5e0 #>                      ...                    ...         ...         ... #>             CXCL1_exon_4           CXCL1_exon_4     #3182bd     #31a354 #>             CXCL1_exon_6           CXCL1_exon_6     #3182bd     #31a354 #>             CXCL1_exon_7           CXCL1_exon_7     #3182bd     #31a354 #>    CXCL1_three_prime_UTR  CXCL1_three_prime_UTR     #9ecae1     #a1d99b #>   CXCL1_custom_feature_1 CXCL1_custom_feature_1         red        blue #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths # define the new feature set old_features <- Ape.granges(vignette_CXCL1_ape) new_features <- old_features[mcols(old_features)$type == \"gene\"]  new_vignette_CXCL1_ape <- Ape.setFeatures(vignette_CXCL1_ape, gr = new_features) new_vignette_CXCL1_ape #> LOCUS       CXCL1                   2116 bp ds-DNA     linear        12-JAN-2024  #> COMMENT     Sequence is from Homo sapiens hg38. #> COMMENT     Gene models are from ensembl. #> COMMENT     Gene is CXCL1 #> COMMENT     Extensions 100 bp left and 100 bp right. #> COMMENT     Final genomic coordinates are: #> COMMENT     chr4 73869293-73871408 #> FEATURES             Location/Qualifiers #>  #>      gene            101..2016 #>                      /locus_tag=\"CXCL1_gene\" #>                      /ApEinfo_fwdcolor=\"#deebf7\" #>                      /ApEinfo_revcolor=\"#e5f5e0 #>  #> ORIGIN #>         1 TCGGGATCGA TCTGGAACTC CGGGAATTTC CCTGGCCCGG GGGCTCCGGG CTTTCCAGCC #>        61 CCAACCATGC ATAAAAGGGG TTCGCGGATC TCGGAGAGCC ACAGAGCCCG GGCCGCAGGC #>       121 ACCTCCTCGC CAGCTCTTCC GCTCCTCTCA CAGCCGCCAG ACCCGCCTGC TGAGCCCCAT #>       181 GGCCCGCGCT GCTCTCTCCG CCGCCCCCAG CAATCCCCGG CTCCTGCGAG TGGCACTGCT #>       241 GCTCCTGCTC CTGGTAGCCG CTGGCCGGCG CGCAGCAGGT GGGTACCGGC GCCCTGGGGT #>       301 CCCCGGGCCG GACGCGGCTG GGGTAGGCAC CCAGCGCCGA CAGCCTCGCT CAGTCAGTGA #>       361 GTCTCTTCTT CCCTAGGAGC GTCCGTGGCC ACTGAACTGC GCTGCCAGTG CTTGCAGACC #>       421 CTGCAGGGAA TTCACCCCAA GAACATCCAA AGTGTGAACG TGAAGTCCCC CGGACCCCAC #>       481 TGCGCCCAAA CCGAAGTCAT GTAAGTCCCG CCCCGCGCTG CCTCTGCCAC CGCCGGGGTC #>       541 CCAGACCCTC CTGCTGCCCC AACCCTGTCC CCAGCCCGAC CTCCTGCCTC ACGAGATTCC #>       601 CTTCCCTCTG CAGAGCCACA CTCAAGAATG GGCGGAAAGC TTGCCTCAAT CCTGCATCCC #>       661 CCATAGTTAA GAAAATCATC GAAAAGATGC TGAACAGGTG AGTTATGGTT TCCATGTACA #>       721 CAGGCGACTG GAGCCGTTGG TCAGAAATAC TGGCATGTGC CCCCTAAAAA TAAAATCAGG #>       781 AAAACCCAGG GGTTAGTTGA AGGACTAGAA ATTGGGATTA TTGTTTTCAC AATTAAGGTT #>       841 TCCTTTACGA TAATTACTGC TCTGGTGCCA GAGGATATTC CCAATGCCTG GCGTCCCCAC #>       901 CCTGGTTCTT CCTTCGTTCC AATGAATGTA GGTAAAACTG CCTTCATTTG AGGCCCAGTA #>       961 GGACAAACAG CAACAGGTTC TGGCTGTTTT TAATCCAATA GTACAGTGGA GACCACCGCC #>      1021 CCACCCCACC CCCATTCCTA AAAGAGCATC CCAAGCTTAG AGGTCCCTGC CACACAGCAC #>      1081 AGCTGTCATA GGCAGTAGCC ACTTGGTTGC CAGGCTGGGG AAACTGCATT CGGAAAACTC #>      1141 TAGAGGCTGG AGGAGCAGGG CAGGAGAAGA GTGTTGTGCA ATCAGCTTTC CCGAGCACCT #>      1201 ACTCAGGGCA CCCATTTTCT CATTGCAGTG ACAAATCCAA CTGACCAGAA GGGAGGAGGA #>      1261 AGCTCACTGG TGGCTGTTCC TGAAGGAGGC CCTGCCCTTA TAGGAACAGA AGAGGAAAGA #>      1321 GAGACACAGC TGCAGAGGCC ACCTGGATTG TGCCTAATGT GTTTGAGCAT CGCTTAGGAG #>      1381 AAGTCTTCTA TTTATTTATT TATTCATTAG TTTTGAAGAT TCTATGTTAA TATTTTAGGT #>      1441 GTAAAATAAT TAAGGGTATG ATTAACTCTA CCTGCACACT GTCCTATTAT ATTCATTCTT #>      1501 TTTGAAATGT CAACCCCAAG TTAGTTCAAT CTGGATTCAT ATTTAATTTG AAGGTAGAAT #>      1561 GTTTTCAAAT GTTCTCCAGT CATTATGTTA ATATTTCTGA GGAGCCTGCA ACATGCCAGC #>      1621 CACTGTGATA GAGGCTGGCG GATCCAAGCA AATGGCCAAT GAGATCATTG TGAAGGCAGG #>      1681 GGAATGTATG TGCACATCTG TTTTGTAACT GTTTAGATGA ATGTCAGTTG TTATTTATTG #>      1741 AAATGATTTC ACAGTGTGTG GTCAACATTT CTCATGTTGA AACTTTAAGA ACTAAAATGT #>      1801 TCTAAATATC CCTTGGACAT TTTATGTCTT TCTTGTAAGG CATACTGCCT TGTTTAATGG #>      1861 TAGTTTTACA GTGTTTCTGG CTTAGAACAA AGGGGCTTAA TTATTGATGT TTTCATAGAG #>      1921 AATATAAAAA TAAAGCACTT ATAGAAAAAA CTCGTTTGAT TTTTGGGGGG AAACAAGGGC #>      1981 TACCTTTACT GGAAAATCTG GTGATTTATA TCAATATTTC TCAATTTTTT AATTGTGTTT #>      2041 ATTTTTCTGG GTGTTCAATT TGCTATACAG ATAAATCAAA CTATGAGTTA TGCTTCATTT #>      2101 CATGCGGTGA TTGCTG #> //"},{"path":"/articles/Ape.html","id":"annotating-putative-transcription-factor-binding-sites","dir":"Articles","previous_headings":"Getting and Setting Ape Object Slots","what":"Annotating Putative Transcription Factor Binding Sites","title":"Reading, Editing and Writing DNA Sequences with Ape","text":"pretty common function several tools can use , use FIMO MEME suite annotation. prerequisite install FIMO system. Instructions available link provided. find TFBS Ape file use Ape.fimo() function. run properly identify feature name within Ape object want evaluate. name Ape object GRanges element locus_tag genbank/Ape file. installation FIMO can’t found provide instructions . function returns GRanges object results. Optionally (recommended) can specify output directory detailed output data.","code":"Ape.fimo(vignette_CXCL1_ape, fimo_feature = \"CXCL1_gene\")"},{"path":"/articles/Ape.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Reading, Editing and Writing DNA Sequences with Ape","text":"Good luck working DNA sequences!","code":""},{"path":"/articles/blind_images.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Blinding Images","text":"files set imaging data analyzed directory. Information experimental group assignment detectable image scored. example, using green hearts group assignment scoring green cells tail, crop areas files preliminary step blind score separately.","code":""},{"path":"/articles/blind_images.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Blinding Images","text":"Start running bb_blind_images. identify analysis file. one line per sample want blind one column identifying paths images want blind. addition, important identifying information want sample. identify output directory hold blinded images. created timestamp appended directory name. R copy files original location new directory blinding. go directory blinding, matter come . R generate new name file based hash original file location (hash file ). R generate two new files put blinded directory. One “scoresheet.csv” “blinding_key.csv”. score images whatever way makes sense (quantiative, semi-quantitative etc.) add values new column scoresheet. open blinding key. done, run bb_unblind. identify directory scoresheet blinding key (similar provided bb_blind images, timestamp). also supply original analysis file column file paths original images blinded. R join blinding key score sheet generate new csv file unblinded data. Finally, R rejoin unblinded data analysis file return R session. can saved second step using write_csv similar. Importantly, bb_unblind overwrite original analysis file . can wish write_csv.","code":""},{"path":"/articles/scRNAseq.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"scRNA-seq Data Analysis","text":"vignette show load 10X single cell RNA seq data R perform “vanilla” processing. overview steps cover: Pre-processing data using 10X genomics cloud. Loading data list cellDataSet objects. QC Functions Merging single cellDataSet object. Dimension reduction Batch correction Clustering Gene modules Label transfer using Seurat Cell assignments UMAP Plot Types Gene Dotplots Differential Gene Expression use steps almost every scRNA-seq analysis perform. proper configuration, steps 1-9 can run non-interactively. usually make “dry run” interactively build processing script. refresh R session source script run beginning end. last steps require interactive input may customized depending analysis . usually become small standalone scripts.","code":""},{"path":"/articles/scRNAseq.html","id":"an-important-note-about-data-management","dir":"Articles","previous_headings":"Introduction","what":"An important note about data management","title":"scRNA-seq Data Analysis","text":"important fact note way run algorithms (UMAP dimension reduction clustering particular), results subtly non-deterministic. mean subtle, arbitrary changes way clusters defined exact dimensions assigned particular cells. change underlying expression data affect analysis negatively except run script twice, cluster 5 may become cluster 6 UMAP dimensions may look different. bottom line important know steps deterministic . Also, steps computationally intensive . order deal issues, particular data objects want save .rda files go back needed future. Usually final cellDataSet object qc files. Using things can quickly reproducibly generate large number plots. point points want save objects vignette. note practice packaging pre-computed data objects formal R packages. aids portability, prevents unintentional overwriting, lost data, manages versions…basically lot good things rigorous reproducible science. However, building R packages outside scope vignette. may create vignette future, mean time good source: https://kbroman.org/pkg_primer/ learned 90% build R package. Good luck!!","code":""},{"path":"/articles/scRNAseq.html","id":"pre-processing-data-using-10x-genomics-cloud","dir":"Articles","previous_headings":"","what":"Pre-processing data using 10X genomics cloud","title":"scRNA-seq Data Analysis","text":"2021/2022, preferred method going sequence data (FASTQs) cell-barcode matrices using 10X genomics cloud: https://www.10xgenomics.com/products/cloud-analysis. benefits running locally numerous list. drawbacks requires time upload data point click get things configured. anyways, working FASTQs, . Using 10X genomics cloud free part. restricts number downloads can perform given dataset. require basic familiarity unix/linux command-line interface, provide premade commands copy paste terminal. 10X Cloud outputs set files refer “pipestance”. archaic term dating time run analysis local machine. want download whole set files directory one subdirectory biological sample. Including BAM files dimensionality reduction 10X Cloud analysis optional recommend cases. Unless things like RNA velocity spliceoform analysis don’t need BAMs large. dimensionality reduction clustering don’t need files either. downloaded files edit, move rename . recommended approach download pipestance directly high-capacity storage, usually institutional network drive. way don’t worry backup size. data archived read times data transfer time really issue. downstream work compressed R objects small portable. usually keep FASTQs pipestances project together. ’ll want make clear using either README files file structure , FASTQs generated pipestances. isn’t scripted (drawback mentioned ) want know year now, find way make completely obvious .","code":""},{"path":"/articles/scRNAseq.html","id":"loading-data-into-a-list-of-celldataset-objects","dir":"Articles","previous_headings":"","what":"Loading data into a list of cellDataSet objects","title":"scRNA-seq Data Analysis","text":"first thing load 10X Data specimen list cellDataSet objects. use configuration file . First detail topics: 10X Data: important file zipped tar file containing cell barcodes, genes, gene/barcode matrix. Depending specific analysis pipeline run, may named “filtered_feature_bc_matrix.tar.gz”, “sample_feature_bc_matrix.tar.gz”. difference depends whether running “counts” pipeline “multi” pipeline. don’t want raw_feature_bc_matrix contains droplets UMI cutoff (basically empty droplets) un-de-multiplexed data using multiplexing. things likely want won’t cover detail metrics summary file VDJ sequencing . easier just look html metrics summary file want programmatically look sequencing metrics file R can read . VDJ may covered another vignette. cellDataSet: Abbreviated CDS, main data structure holding single cell data. derived Bioconductor SingleCellExperiment class. can thought database holding table cell metadata, table gene metadata, matrix expression data, built pipestance data load . additional “slots” available CDS class reduced dimensions various types cluster assignments. don’t interact directly part. find data structure simple straightforward understand work . scRNA-seq functions package operate data structure. find Seurat data structure less user-friendly. need use Seurat-functions (like label transfer Doubletfinder), Seurat objects generated “behind scenes”, don’t really need know well use blaseRtools functions. understood paragraph already understand CDS data structure half battle. configuration file: Abbreviated config, text file (csv) can edit excel hold sample-level metadata, including file path pipestance stored. can see example used vignette : system.file(\"extdata/vignette_config.csv\", package = \"blaseRdata\"). minimum column named “sample” column named “targz_path” (name latter critical). sample: natural people refer biological specimen produced data “sample”. However term gets rather overloaded analyses, meaning gets used many things many different places. want safer, can call “specimen” something else. want use “sample” , make sure added explicitly cell metadata column. cause error function try create “sample” column automatically. Hopefully clear . One final note: since data processing time-consuming, code listed executed vignette. can copy code blocks, modify use want. included final CDS object can access blaseRdata::vignette_cds. can use make plots differential gene expression like. Getting started : Read analysis configuration file. reading blaseRdata package substitute file path. data using small sample dataset provided 10X. includes 2 PBMC samples run different 10X machines: standard Chromium machine new Chromium X. ’ll notice added couple sample metadata features addition required information. add cds. Also notice format file path. linux reading windows file path. config file, used windows “copy path” feature simply pasted csv. double backslashes stand single backslash basically toxic anything running linux. problem. However, X: stands network drive data located. Linux doesn’t know access . helper function translate . works OSUMC X drive. using another drive translate linux-compatible file path manually. use function. uses pipe notation tidyverse functions, become familiar aren’t already. Now ready read data using bb_load_tenx_targz function. use “apply” functional programming paradigm purrr package map function across sample config file. produce list cds objects us. Note line select(-c(sample, targz_path)) removes sample column file path sample metadata. don’t need file path. mentioned , “sample” cell metadata cause error later. use set_names(nm = vignette_config$sample) name CDS object sample name. get added cell metadata later.","code":"# Attach the packages you will need for the analysis. library(blaseRtools) library(blaseRdata) library(monocle3) library(Seurat) library(tidyverse) library(cowplot) theme_set(theme_cowplot(font_size = 12)) # Read in and inspect the configuration file. vignette_config <- read_csv(system.file(\"extdata/vignette_config.csv\",                                          package = \"blaseRdata\"),                              col_type = list(.default = col_character())) vignette_config #> # A tibble: 2 × 4 #>   sample              date     equipment targz_path                              #>   <chr>               <chr>    <chr>     <chr>                                   #> 1 chromium_controller 20211226 chromium  \"X:\\\\Labs\\\\Blaser\\\\single_cell\\\\vignet… #> 2 chromium_X          20211226 X         \"X:\\\\Labs\\\\Blaser\\\\single_cell\\\\vignet… # Fix the windows-style file path. vignette_config <- vignette_config %>%   mutate(targz_path = bb_fix_file_path(targz_path)) vignette_config #> # A tibble: 2 × 4 #>   sample              date     equipment targz_path                              #>   <chr>               <chr>    <chr>     <chr>                                   #> 1 chromium_controller 20211226 chromium  ~/network/X/Labs/Blaser/single_cell/vi… #> 2 chromium_X          20211226 X         ~/network/X/Labs/Blaser/single_cell/vi… # Generate a list of CDS objects using purrr::map cds_list <- map(   .x = vignette_config$sample,   .f = function(x, conf = vignette_config) {     conf_filtered <- conf %>%       filter(sample == x)     cds <- bb_load_tenx_targz(targz_file = conf_filtered$targz_path,                               sample_metadata_tbl = conf_filtered %>%                                  select(-c(sample, targz_path))                               )     return(cds)   } ) %>%    set_names(nm = vignette_config$sample)"},{"path":"/articles/scRNAseq.html","id":"qc-functions","dir":"Articles","previous_headings":"","what":"QC Functions","title":"scRNA-seq Data Analysis","text":"Next want remove low quality cells analysis. First identify low quality cells based high percentage reads mapped mitochondrial genes low number genes detected. map function bb_qc element cds_list. bb_qc returns list data objects, get list lists. qc calls returned CDS objects later, whole output step worth saving future reference. example: Next want remove potential cell doublets. identify using function Doubletfinder package. generates “pseudodoublets” marks real cells map area pseudodoublets. First figure anticipated doublet rate estimated number cells cds/100000. also supply qc results run prediction high-quality cells. Now join qc data doubletfinder data back onto cds_list","code":"# generate a list of qc results for individual CDS objects vig_qc_res <- pmap(.l = list(cds = cds_list,                              cds_name = names(cds_list),                              genome = rep(\"human\", times = length(cds_list))),                    .f = bb_qc                    ) %>%   set_names(nm = names(cds_list)) vig_qc_res$chromium_controller[3] vig_qc_res$chromium_controller[4] # gets the number of cells in each cds and divides it by 100000 anticipated_doublet_rate <- unlist(map(cds_list, ncol))/100000  # extracts the first element of the qc result list for each cds qc_calls <- map(vig_qc_res,1)  # generates a list of tables with doubletfinder results doubletfinder_list <-   pmap(     .l = list(       cds = cds_list,       doublet_prediction = anticipated_doublet_rate,       qc_table = qc_calls     ),     .f = bb_doubletfinder   ) %>%   set_names(names(cds_list)) # rejoins doubletfinder and qc data onto the list of CDS objects cds_list <- pmap(   .l = list(     cds = cds_list,     qc_data = qc_calls,     doubletfinder_data = doubletfinder_list   ),   .f = bb_rejoin )"},{"path":"/articles/scRNAseq.html","id":"merging-into-a-single-celldataset-object-","dir":"Articles","previous_headings":"","what":"Merging into a single cellDataSet object.","title":"scRNA-seq Data Analysis","text":"can now remove genes going helpful. Since already used mitochondrial genes identify poor-quality cells, since interested looking specifically can remove . Likewise can typically remove ribosomal RNA genes. Pre-calculated lists genes remove human, mouse, zebrafish provided blaseRdata package. Now can remove low quality cells cell doublets. doubletfinder function provides doublet calls two confidence levels. like can previzualize select ones want remove. ususally just remove high confidence doublets.","code":"# Merge the CDS list into a single CDS vignette_cds <- monocle3::combine_cds(cds_list = cds_list) # Remove mitochondrial and ribosomal genes. vignette_cds <-    vignette_cds[rowData(vignette_cds)$gene_short_name %notin% hg38_remove_genes,] # Remove the low-quality cells vignette_cds <- vignette_cds[,colData(vignette_cds)$qc.any == FALSE]  # Remove the high-confidence doublets vignette_cds <-    vignette_cds[,colData(vignette_cds)$doubletfinder_high_conf == \"Singlet\"]  # Now remove the qc and doubletfinder columns from the cell metadata because we are done with them. colData(vignette_cds)$qc.any <- NULL colData(vignette_cds)$doubletfinder_low_conf <- NULL colData(vignette_cds)$doubletfinder_high_conf <- NULL"},{"path":"/articles/scRNAseq.html","id":"dimension-reduction","dir":"Articles","previous_headings":"","what":"Dimension reduction","title":"scRNA-seq Data Analysis","text":"Now ready perform dimensionality reduction. done two steps use unmodified monocle functions. First, calculate PCA components cell reduce number dimensions number genes (thousands) something like 50. Monocle provides option set number PCAs want calculate. people like exploring different PCAs picking exactly many want calculate. don’t find particularly useful exercise usually just run default setting 50. additional variance explained PCAs 51 greater tiny. Now can run UMAP algorithm reduce dimensions 2. several options available . set number cores algorithm use. Running UMAP multiple cores generate slightly different results time run , want get point save data object save(vignette_cds, file = \"<directory>/vignette_cds.rda\", compress = \"gzip\"). point worth exploring cell gene metadata understand things arranged. can use bb_cellmeta bb_rowmeta convenience functions return metadata form tibble. convenient exploring manipulating, want modify add back CDS object, use form colData(CDS)$new_column <- data Note sample names added cell metadata. point want visualize cells determine need perform batch-correction techniques.","code":"# Calculate the PCA dimensions vignette_cds <- preprocess_cds(vignette_cds) # Calculate UMAP dimensions vignette_cds <- reduce_dimension(vignette_cds, cores = 40) # Cell metadata bb_cellmeta(vignette_cds)  #> # A tibble: 1,160 × 16 #>    cell_id          barcode Size_Factor date  equipment sample prealignment_dim1 #>    <chr>            <chr>         <dbl> <chr> <chr>     <chr>              <dbl> #>  1 AATCACGAGGATCAC… AATCAC…       3.20  2021… chromium  chrom…              9.42 #>  2 AATCACGAGTGGCCT… AATCAC…       0.990 2021… chromium  chrom…             -7.10 #>  3 AATCACGCACAGAGA… AATCAC…       0.751 2021… chromium  chrom…             -4.14 #>  4 AATCACGCACCAGCG… AATCAC…       3.08  2021… chromium  chrom…              6.97 #>  5 AATCACGCAGGTTCA… AATCAC…       0.627 2021… chromium  chrom…             -4.12 #>  6 AATCACGCATATCTG… AATCAC…       0.830 2021… chromium  chrom…             -3.56 #>  7 AATCACGGTCAAGCG… AATCAC…       0.931 2021… chromium  chrom…             -4.04 #>  8 AATCACGGTTGGACC… AATCAC…       0.596 2021… chromium  chrom…             -7.70 #>  9 AATCACGTCCCGTTG… AATCAC…       1.16  2021… chromium  chrom…             -3.28 #> 10 AATCACGTCGTTCCT… AATCAC…       0.746 2021… chromium  chrom…             -5.68 #> # ℹ 1,150 more rows #> # ℹ 9 more variables: prealignment_dim2 <dbl>, leiden <fct>, partition <fct>, #> #   louvain <fct>, seurat_dim1 <dbl>, seurat_dim2 <dbl>, #> #   seurat_celltype_l1 <chr>, seurat_celltype_l2 <chr>, leiden_assignment <fct>  # Gene metadata bb_rowmeta(vignette_cds) #> # A tibble: 36,398 × 8 #>    feature_id  id    gene_short_name data_type module module_labeled supermodule #>    <chr>       <chr> <chr>           <chr>     <fct>  <fct>          <fct>       #>  1 ENSG000002… ENSG… MIR1302-2HG     Gene Exp… NA     No Module      NA          #>  2 ENSG000002… ENSG… FAM138A         Gene Exp… NA     No Module      NA          #>  3 ENSG000001… ENSG… OR4F5           Gene Exp… NA     No Module      NA          #>  4 ENSG000002… ENSG… AL627309.1      Gene Exp… NA     No Module      NA          #>  5 ENSG000002… ENSG… AL627309.3      Gene Exp… NA     No Module      NA          #>  6 ENSG000002… ENSG… AL627309.2      Gene Exp… NA     No Module      NA          #>  7 ENSG000002… ENSG… AL627309.5      Gene Exp… 1      Module 1       1           #>  8 ENSG000002… ENSG… AL627309.4      Gene Exp… NA     No Module      NA          #>  9 ENSG000002… ENSG… AP006222.2      Gene Exp… NA     No Module      NA          #> 10 ENSG000002… ENSG… AL732372.1      Gene Exp… NA     No Module      NA          #> # ℹ 36,388 more rows #> # ℹ 1 more variable: supermodule_labeled <fct>"},{"path":"/articles/scRNAseq.html","id":"batch-correction","dir":"Articles","previous_headings":"","what":"Batch correction","title":"scRNA-seq Data Analysis","text":"data samples similar let’s say batch effect wanted reduce two samples. can align number samples selecting cell metadata column align . reduce variability UMAP dimension based column. want align one column, create composite variable columns want align , say date facility. important thing remember alignment/batch correction change underlying expression data. changes PCAs UMAP calculations. also want account variables differential gene expression, need model calculations (see ). batch correction? helps reduce heterogeneity dataset can put similar cells together clusters. important concept finding differences samples. function bb_align performs steps: calculate aligned PCA dimensions, recalculate umap dimensions, add pre-alignment dimensions cell metadata case want use . Usually save temporary object find useful alignment formula. can save original CDS discard temporary object satisfied.  can see pre-alignment dimensions stored cell metadata can plot later want.","code":"# Align samples according to the equipment metadata column vignette_cds_aligned_temp <- bb_align(vignette_cds, align_by = \"sample\")  # Replace the original CDS with the Aligned CDS vignette_cds <- vignette_cds_aligned_temp rm(vignette_cds_aligned_temp) bb_var_umap(vignette_cds, var = \"sample\") bb_cellmeta(vignette_cds) #> # A tibble: 1,160 × 16 #>    cell_id          barcode Size_Factor date  equipment sample prealignment_dim1 #>    <chr>            <chr>         <dbl> <chr> <chr>     <chr>              <dbl> #>  1 AATCACGAGGATCAC… AATCAC…       3.20  2021… chromium  chrom…              9.42 #>  2 AATCACGAGTGGCCT… AATCAC…       0.990 2021… chromium  chrom…             -7.10 #>  3 AATCACGCACAGAGA… AATCAC…       0.751 2021… chromium  chrom…             -4.14 #>  4 AATCACGCACCAGCG… AATCAC…       3.08  2021… chromium  chrom…              6.97 #>  5 AATCACGCAGGTTCA… AATCAC…       0.627 2021… chromium  chrom…             -4.12 #>  6 AATCACGCATATCTG… AATCAC…       0.830 2021… chromium  chrom…             -3.56 #>  7 AATCACGGTCAAGCG… AATCAC…       0.931 2021… chromium  chrom…             -4.04 #>  8 AATCACGGTTGGACC… AATCAC…       0.596 2021… chromium  chrom…             -7.70 #>  9 AATCACGTCCCGTTG… AATCAC…       1.16  2021… chromium  chrom…             -3.28 #> 10 AATCACGTCGTTCCT… AATCAC…       0.746 2021… chromium  chrom…             -5.68 #> # ℹ 1,150 more rows #> # ℹ 9 more variables: prealignment_dim2 <dbl>, leiden <fct>, partition <fct>, #> #   louvain <fct>, seurat_dim1 <dbl>, seurat_dim2 <dbl>, #> #   seurat_celltype_l1 <chr>, seurat_celltype_l2 <chr>, leiden_assignment <fct> bb_var_umap(vignette_cds, var = \"sample\",              alt_dim_x = \"prealignment_dim1\",              alt_dim_y = \"prealignment_dim2\")"},{"path":"/articles/scRNAseq.html","id":"clustering","dir":"Articles","previous_headings":"","what":"Clustering","title":"scRNA-seq Data Analysis","text":"three clustering methods use. Louvain (ref: PMID 30914743) finest/smallest, Leiden (ref: PMID 30914743) medium, Partitions (ref: PMID 30890159) largest/coarsest. function calculate three using default parameters add explicitly CDS cell metadata. addition, function calculate top markers produce csv file can look externally read back R . Usually want read back R identify clusters , can label table. Using function requires using default clustering parameters underlying monocle functions. want modify (usually necessary) need use original monocle functions. Now can plot cells color cluster type","code":"# Identify clusters and calculate top markers marker_file <- tempfile() vignette_cds <- bb_triplecluster(vignette_cds, n_top_markers = 50, outfile = marker_file, n_cores = 8) vignette_top_markers <- read_csv(marker_file) vignette_top_markers #> # A tibble: 1,100 × 11 #>    gene_id         gene_short_name cluster_method cell_group  marker_score #>    <chr>           <chr>           <chr>          <chr>              <dbl> #>  1 ENSG00000265972 TXNIP           partition      partition 1        0.998 #>  2 ENSG00000081237 PTPRC           partition      partition 1        0.997 #>  3 ENSG00000163041 H3F3A           partition      partition 1        0.997 #>  4 ENSG00000034510 TMSB10          partition      partition 1        1     #>  5 ENSG00000114942 EEF1B2          partition      partition 1        0.991 #>  6 ENSG00000187514 PTMA            partition      partition 1        1     #>  7 ENSG00000232112 TMA7            partition      partition 1        0.984 #>  8 ENSG00000269028 MTRNR2L12       partition      partition 1        0.998 #>  9 ENSG00000145741 BTF3            partition      partition 1        0.985 #> 10 ENSG00000127184 COX7C           partition      partition 1        0.991 #> # ℹ 1,090 more rows #> # ℹ 6 more variables: mean_expression <dbl>, fraction_expressing <dbl>, #> #   specificity <dbl>, pseudo_R2 <dbl>, marker_test_p_value <dbl>, #> #   marker_test_q_value <dbl> bb_var_umap(vignette_cds, var = \"partition\") bb_var_umap(vignette_cds, var = \"leiden\") bb_var_umap(vignette_cds, var = \"louvain\")"},{"path":"/articles/scRNAseq.html","id":"gene-modules","dir":"Articles","previous_headings":"","what":"Gene modules","title":"scRNA-seq Data Analysis","text":"Gene modules groups genes similarly co-regulated cell cell data set. use monocle functions identify gene modules store gene metadata. Gene modules sense can defined using single cell data. Essentially algorithm reverses UMAP calculation plots “coordinates” gene according cell expressed . clusters genes according UMAP coordinates just like cells. modules super modules. Gene modules can dozens thousands genes depending dataset. evenly expressed across cells (like housekeeping genes), genes may end module. Note: computationally-intensive operation may overload computer use many cores. also non-deterministic need save CDS object done.","code":"# Identify gene modules and add them to the gene metadata. vignette_cds <- bb_gene_modules(vignette_cds, n_cores = 24) bb_rowmeta(vignette_cds) #> # A tibble: 36,398 × 8 #>    feature_id  id    gene_short_name data_type module module_labeled supermodule #>    <chr>       <chr> <chr>           <chr>     <fct>  <fct>          <fct>       #>  1 ENSG000002… ENSG… MIR1302-2HG     Gene Exp… NA     No Module      NA          #>  2 ENSG000002… ENSG… FAM138A         Gene Exp… NA     No Module      NA          #>  3 ENSG000001… ENSG… OR4F5           Gene Exp… NA     No Module      NA          #>  4 ENSG000002… ENSG… AL627309.1      Gene Exp… NA     No Module      NA          #>  5 ENSG000002… ENSG… AL627309.3      Gene Exp… NA     No Module      NA          #>  6 ENSG000002… ENSG… AL627309.2      Gene Exp… NA     No Module      NA          #>  7 ENSG000002… ENSG… AL627309.5      Gene Exp… 1      Module 1       1           #>  8 ENSG000002… ENSG… AL627309.4      Gene Exp… NA     No Module      NA          #>  9 ENSG000002… ENSG… AP006222.2      Gene Exp… NA     No Module      NA          #> 10 ENSG000002… ENSG… AL732372.1      Gene Exp… NA     No Module      NA          #> # ℹ 36,388 more rows #> # ℹ 1 more variable: supermodule_labeled <fct>"},{"path":"/articles/scRNAseq.html","id":"label-transfer-using-seurat","dir":"Articles","previous_headings":"","what":"Label transfer using Seurat","title":"scRNA-seq Data Analysis","text":"optional step can use generate automatic cell labels. need take results grain salt always explore automated cell labels believing . example looking leukemia cells generate cell labels based normal PBMC dataset, provide normal celltype labels leukemia cells misleading. Another issue many programs claim able Seurat seems useful opinion. However Seurat people put effort area developing web apps significant limitations us. raw reference data difficult find implement available human PBMC. now, can use technique human PBMC. want use , need download file: https://atlas.fredhutch.org/data/nygc/multimodal/pbmc_multimodal.h5seurat. 2GB don’t even distribute blaseRdata. need download put somewhere system running analysis. run , substituting appropriate file path: function added two celltype assignments cell metadata. also added suerat umap dims. cells ’ve landed processed reference dataset. can plot cells using Seurat coordinates:  can plot using dimension reduction coordinates. think method better reflects data accurately.","code":"# Annotate the PBMC data vignette_cds <- bb_seurat_anno(vignette_cds, reference = \"~/workspace_pipelines/sc_refdata/seurat_pbmc_reference_20210506/pbmc_multimodal.h5seurat\") bb_cellmeta(vignette_cds) #> # A tibble: 1,160 × 16 #>    cell_id          barcode Size_Factor date  equipment sample prealignment_dim1 #>    <chr>            <chr>         <dbl> <chr> <chr>     <chr>              <dbl> #>  1 AATCACGAGGATCAC… AATCAC…       3.20  2021… chromium  chrom…              9.42 #>  2 AATCACGAGTGGCCT… AATCAC…       0.990 2021… chromium  chrom…             -7.10 #>  3 AATCACGCACAGAGA… AATCAC…       0.751 2021… chromium  chrom…             -4.14 #>  4 AATCACGCACCAGCG… AATCAC…       3.08  2021… chromium  chrom…              6.97 #>  5 AATCACGCAGGTTCA… AATCAC…       0.627 2021… chromium  chrom…             -4.12 #>  6 AATCACGCATATCTG… AATCAC…       0.830 2021… chromium  chrom…             -3.56 #>  7 AATCACGGTCAAGCG… AATCAC…       0.931 2021… chromium  chrom…             -4.04 #>  8 AATCACGGTTGGACC… AATCAC…       0.596 2021… chromium  chrom…             -7.70 #>  9 AATCACGTCCCGTTG… AATCAC…       1.16  2021… chromium  chrom…             -3.28 #> 10 AATCACGTCGTTCCT… AATCAC…       0.746 2021… chromium  chrom…             -5.68 #> # ℹ 1,150 more rows #> # ℹ 9 more variables: prealignment_dim2 <dbl>, leiden <fct>, partition <fct>, #> #   louvain <fct>, seurat_dim1 <dbl>, seurat_dim2 <dbl>, #> #   seurat_celltype_l1 <chr>, seurat_celltype_l2 <chr>, leiden_assignment <fct> bb_var_umap(vignette_cds,              var = \"seurat_celltype_l1\",              alt_dim_x = \"seurat_dim1\",              alt_dim_y = \"seurat_dim2\",              overwrite_labels = TRUE,              group_label_size = 4) bb_var_umap(vignette_cds, var = \"seurat_celltype_l1\")"},{"path":"/articles/scRNAseq.html","id":"cell-assignments","dir":"Articles","previous_headings":"","what":"Cell Assignments","title":"scRNA-seq Data Analysis","text":"completes basic loading processing single cell data terms can scripted run non-interactively. Usually build script preceeding commands refresh R session source whole script . Even takes hours run (doubletfinder, seurat annotations gene modules computationally intensive), easy enough let run overnight can confident output (final CDS) really derived data code script. done, make new scripts analysis steps, Cell Assignments. Making cell assignments scientifically challenging computationally easy, want put thought . usually resave CDS object cell assignemnts done can edited new cell assignments can made easily need . Usually want pick cluster resolution going useful give cells cluster name.  low-throughput dataset relatively low resolution, illustrates method. resources available make cell assignments: 1. Cluster top markers. 2. Gene modules 3. Seurat assignments. already defined . Gene modules powerful finding clusters takes steps extract data show later. Let’s say case ’ve inspected cluster top markers need help Seurat assignments. said previously, never use Seurat assignments . can explore visually can something quantitative. may enough tell Leiden cluster 1 T/NK, Cluster 2 Mono/DC Cluster 3 B cells. complicated dataset can use detailed seurat_celltype_l2 assignments /can plot like :  add new cell metadata column recoding leiden column designated assignments:","code":"bb_var_umap(vignette_cds, var = \"leiden\", plot_title = \"Leiden Clusters\") leiden_seurat <- bb_cellmeta(vignette_cds) %>%   group_by(leiden, seurat_celltype_l1) %>%   summarise(n = n()) leiden_seurat #> # A tibble: 9 × 3 #> # Groups:   leiden [3] #>   leiden seurat_celltype_l1     n #>   <fct>  <chr>              <int> #> 1 1      CD4 T                307 #> 2 1      CD8 T                207 #> 3 1      NK                    48 #> 4 1      other                  1 #> 5 1      other T               26 #> 6 2      DC                    33 #> 7 2      Mono                 429 #> 8 3      B                    108 #> 9 3      other                  1 ggplot(leiden_seurat,         mapping = aes(x = leiden,                       y = n,                       fill = seurat_celltype_l1)) +   geom_bar(position=\"fill\", stat=\"identity\") +    scale_fill_brewer(palette = \"Set1\") # Recode the leiden clusters with our cell assignments colData(vignette_cds)$leiden_assignment <- recode(colData(vignette_cds)$leiden,                                                    \"1\" = \"T/NK\",                                                   \"2\" = \"DC/Mono\",                                                   \"3\" = \"B\") bb_var_umap(vignette_cds, var = \"leiden_assignment\")"},{"path":"/articles/scRNAseq.html","id":"umap-plot-types","dir":"Articles","previous_headings":"","what":"UMAP Plot Types","title":"scRNA-seq Data Analysis","text":"’ve already used main umap plotting function, bb_var_umap. allows color cells cell metadata variable choose. set variable name “var” argument. can also highlight specific value.  function returns ggplot don’t like colors just add different scale. Color palettes can also set internally function.  important concept overall analysis understanding distribution cell states experimental conditions. use density function calculate local density cells UMAP space faceting plot experimental variable.  can see, basically , expect. Density definition normalized number cells local area. can produce -normalization may useful. case can map color number cells local bins. may also work better log normalization can . also want use option downsample number overall cells plot isn’t biased number cells recovered.   case, usually Density looks better. Since concept distribution cell states important, dedicated function plotting .  function tells class sample enriched cluster. values normalized according number total cells captured class presented log fold change relative one classes (control) designate. Significance determined using Fisher’s exact test. can test number clusters two classes using function. shown , function returns ggplot can modify additional ggplot layers like. doesn’t work , can ask function return data table can plot manually. table shows normalized cell count class sample. can seee normalizing number cells captured, 64.5 B cells chromium sample 42.6 B cells X sample. barely reaches signficance using Fisher exact test. look density log local N UMAPs , can probably appreciate difference cell color. say subtle difference end reader (reviewer) convincing . addition plotting cell metadata variables, can plot gene expression UMAP plots. example:  Now word caution/advice. find plots useful exploratory analysis possibly supplemental figures often main figures. reason convey less information per unit area plot types, gene dotplots. often also difficult visually distinguish differences plots. related mostly problem overplotting. many cells, often points plotted less top . gene expressed cells, buried underneath non-expressing cells. order highlight rare cells, function makes choice plot non-expressing cells first bottom layer plot expressing cells top. ensures can see rare expressing cells may lead overestimation number cases. used caution. can also plot multiple individual genes aggregate gene scores (e.g. modules) using function:  Note plotting aggregate genes, parameter gene_or_genes provided data frame two columns first column ensembl cell id second gene grouping.","code":"bb_var_umap(vignette_cds,              var = \"leiden_assignment\",              value_to_highlight = \"T/NK\",              cell_size = 2,              foreground_alpha = 0.4) bb_var_umap(vignette_cds,              var = \"leiden_assignment\",              value_to_highlight = \"T/NK\",              palette = \"green4\",              cell_size = 2,              foreground_alpha = 0.4) bb_var_umap(vignette_cds,              var = \"density\",              facet_by = \"equipment\",              cell_size = 2,              plot_title = \"Local Cell Density\") bb_var_umap(vignette_cds,              var = \"local_n\",              nbin = 10, sample_equally = T,              facet_by = \"equipment\",              cell_size = 2,              plot_title = \"Local N in 10 Bins\") bb_var_umap(vignette_cds,              var = \"log_local_n\",              nbin = 10,              sample_equally = T,              facet_by = \"equipment\",              cell_size = 2,              plot_title = \"Log Local N in 10 Bins\") bb_cluster_representation(cds = vignette_cds,                            cluster_var = \"leiden_assignment\",                            class_var = \"equipment\",                            experimental_class = \"X\",                            control_class = \"chromium\",                            return_value = \"plot\") bb_cluster_representation(cds = vignette_cds,                            cluster_var = \"leiden_assignment\",                            class_var = \"equipment\",                            experimental_class = \"X\",                            control_class = \"chromium\",                            return_value = \"table\") #> # A tibble: 3 × 10 #> # Groups:   leiden_assignment [3] #>   leiden_assignment     X chromium fold_change_over_con…¹ log2fold_change_over…² #>   <chr>             <dbl>    <dbl>                  <dbl>                  <dbl> #> 1 T/NK              308.     285.                   1.08                 0.112   #> 2 DC/Mono           232.     232.                   0.997               -0.00501 #> 3 B                  43.7     65.5                  0.667               -0.583   #> # ℹ abbreviated names: ¹​fold_change_over_control, ²​log2fold_change_over_control #> # ℹ 5 more variables: enriched <chr>, n <dbl>, fisher_exact_p <dbl>, #> #   p.signif <chr>, texty <dbl> bb_gene_umap(vignette_cds,               gene_or_genes = \"CD3D\") bb_gene_umap(vignette_cds, gene_or_genes = c(\"CD19\", \"CD3D\", \"CD14\")) agg_genes <-    bb_rowmeta(vignette_cds) %>%   select(id, module_labeled) %>%   filter(module_labeled == \"Module 1\")     bb_gene_umap(vignette_cds,               gene_or_genes = agg_genes)"},{"path":"/articles/scRNAseq.html","id":"gene-dotplots","dir":"Articles","previous_headings":"","what":"Gene Dotplots","title":"scRNA-seq Data Analysis","text":"information-dense way plot data gene dotplot, “gene bubbles”. plot less susceptible misleading reader overplotting.  run default settings, order genes cell groups using biclustering algorithm. apparent plot small number groups genes. can also specify order:  can generate composite variables like :  complicated figures, can return tibble make plot :","code":"bb_genebubbles(vignette_cds,                genes = c(\"CD3E\", \"CD14\", \"CD19\"),                 cell_grouping = \"leiden_assignment\") bb_genebubbles(vignette_cds,                  genes = c(\"CD3E\", \"CD14\", \"CD19\"),                  cell_grouping = \"leiden_assignment\",                  gene_ordering = c(\"as_supplied\"),                 group_ordering = c(\"as_supplied\"))#will be alphabetical or by factor level bb_genebubbles(vignette_cds,                  genes = c(\"CD3E\", \"CD14\", \"CD19\"),                  cell_grouping = c(\"leiden_assignment\", \"louvain\")) +   theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) bb_genebubbles(vignette_cds,                 genes = c(\"CD3E\", \"CD14\", \"CD19\"),                 cell_grouping = c(\"leiden_assignment\", \"louvain\"),                return_value = \"data\") #> # A tibble: 54 × 13 #>    group feature_id expression proportion id    gene_short_name data_type module #>    <fct> <chr>           <dbl>      <dbl> <chr> <fct>           <chr>     <fct>  #>  1 B_10  ENSG00000…    -0.806      0.0909 ENSG… CD14            Gene Exp… 1      #>  2 B_10  ENSG00000…    -0.669      0.127  ENSG… CD3E            Gene Exp… 2      #>  3 B_10  ENSG00000…     2.38       0.436  ENSG… CD19            Gene Exp… 3      #>  4 B_14  ENSG00000…    -0.804      0.0741 ENSG… CD14            Gene Exp… 1      #>  5 B_14  ENSG00000…    -0.699      0.0741 ENSG… CD3E            Gene Exp… 2      #>  6 B_14  ENSG00000…     3.08       0.463  ENSG… CD19            Gene Exp… 3      #>  7 DC/M… ENSG00000…    -0.0876     0.619  ENSG… CD14            Gene Exp… 1      #>  8 DC/M… ENSG00000…    -0.764      0.0476 ENSG… CD3E            Gene Exp… 2      #>  9 DC/M… ENSG00000…    -0.355      0      ENSG… CD19            Gene Exp… 3      #> 10 DC/M… ENSG00000…     1.51       1      ENSG… CD14            Gene Exp… 1      #> # ℹ 44 more rows #> # ℹ 5 more variables: module_labeled <fct>, supermodule <fct>, #> #   supermodule_labeled <fct>, leiden_assignment <fct>, louvain <fct>"},{"path":"/articles/scRNAseq.html","id":"differential-gene-expression","dir":"Articles","previous_headings":"","what":"Differential Gene Expression","title":"scRNA-seq Data Analysis","text":"point think example dataset demonstrates outside small difference number B cells captured, high degree similarity samples run chromium chromium_X machines. Therefore plausible can use experimental replicates determine differential gene expression cell clusters. important point experimental design. using sample datasets small happen available. course experiemnts. want design experiment include best possible biological replicates can find: clutchmates littermates possible. working patient samples going able achieve may want try model potential confounding variables like age, sex, treatments etc. analysis. Likewise mice coming different litters processed different batches may want model confounders. functions can handle sort complexity. robust called pseudobulk analysis. extracts counts groups cells, generates aggregate count profile performs differential gene expression according experimental model provide. Alternatively can use function based generalized linear models multivariate regression. latter function require experimental replicates drawbacks terms inflated significance values.","code":""},{"path":"/articles/scRNAseq.html","id":"pseudobulk-analysis","dir":"Articles","previous_headings":"Differential Gene Expression","what":"Pseudobulk Analysis","title":"scRNA-seq Data Analysis","text":"Pseudobulk analysis generally considered robust methods differential gene expression treats biological samples biological replciates rather individual cells biological replicates. order perform , aggregate raw counts groups cells define use bulk RNAseq differential expression program called DESeq2 generate log fold change p/q values cell groups. Setting requires little advance thought. need consider may fixed sample-level covariates confound interpretation comparison want perform. example, let’s say want compare gene expression heterogeneous cluster cells 20 patient samples; 10 patients responders 10 non-responders therapy. goal identify set genes predicted differentially expressed based response variable (responders/non-responders). However, may know things patients age, sex, tumor histology, genotype etc. also explain differences gene expression perhaps explain better response therapy. model variables want understand . working experimental animal models never allow confounders enter experiment. Always use true biological replicates may interpret differential gene expression based single experimental variable. next important feature consider primary comparison (say response therapy) must always biological replicates sort. words want identify effect response gene expression, must minimum 2 responders 2 non-responders. need come table describing variables may wish include experimental design. best place start CDS cell metadata. need unique biological replicate identifier, variable wish compare covariates wish include design. example CDS working , “sample” identifies biological replicates “leiden_assignment” identifies cell groups wish compare. non-redundant sample variables. row table call “pseudosample”. represents group cells either biologically distinct sample cell cluster. simple comparison, now ready run pseudobulk function. Now explore result: genes look expected. tables show pairwise comparisons. Since three levels “leiden_assignment” variable, can select 2 three compare “result_recipe”. first one lised always “experimental” value genes specific condition positive second “reference” value genes specific condition negative. specify “result_recipe” program revert default behavior calculate results based final variable design_formula using first two values alphabetical order. may may want, aware behavior. approach making experimental design based full CDS selecting result recipe want produce (technically called “contrast”) preferred rather filtering CDS include T/NK DC/Mono running default settings. results vary somewhat using full CDS case gives complete picture. However, consider case (discuss demonstrate ) sample-level variable interest response therapy want look effect variable gene expression subset cells. case OK subset CDS include subset cells (say blasts leukemic cells) use design formula “~ age + sex + genotype + response”. give effect response blast cells, accounting age, sex genotype potential confounders.","code":"vignette_exp_design <-    bb_cellmeta(vignette_cds) %>%   group_by(sample, leiden_assignment) %>%   summarise() vignette_exp_design #> # A tibble: 6 × 2 #> # Groups:   sample [2] #>   sample              leiden_assignment #>   <chr>               <fct>             #> 1 chromium_X          T/NK              #> 2 chromium_X          DC/Mono           #> 3 chromium_X          B                 #> 4 chromium_controller T/NK              #> 5 chromium_controller DC/Mono           #> 6 chromium_controller B vignette_pseudobulk_res <-   bb_pseudobulk_mf(cds = vignette_cds,                    pseudosample_table = vignette_exp_design,                     design_formula = \"~ leiden_assignment\",                    result_recipe = c(\"leiden_assignment\", \"T/NK\", \"DC/Mono\")) # Detailed column headers for the results tables. vignette_pseudobulk_res$Header  #> [1] \"mean of normalized counts for all samples\"                 #> [2] \"log2 fold change (MLE): leiden_assignment T_NK vs DC_Mono\" #> [3] \"standard error: leiden_assignment T_NK vs DC_Mono\"         #> [4] \"Wald statistic: leiden_assignment T_NK vs DC_Mono\"         #> [5] \"Wald test p-value: leiden_assignment T_NK vs DC_Mono\"      #> [6] \"BH adjusted p-values\" # Differential expression results.  Positive L2FC indicates up in T/NK vs DC/Mono  vignette_pseudobulk_res$Result %>%   filter(log2FoldChange > 0) %>%   arrange(padj) #> # A tibble: 6,867 × 8 #>    id             gene_short_name baseMean log2FoldChange  lfcSE  stat    pvalue #>    <chr>          <chr>              <dbl>          <dbl>  <dbl> <dbl>     <dbl> #>  1 ENSG000000085… IL32                727.           6.08 0.138   44.0 0         #>  2 ENSG000001672… CD3D                418.           5.81 0.166   35.0 1.23e-268 #>  3 ENSG000001149… EEF1B2             2433.           1.81 0.0578  31.4 3.87e-216 #>  4 ENSG000002477… PCED1B-AS1          320.           4.44 0.146   30.4 2.36e-203 #>  5 ENSG000002117… TRBC2               357.           5.67 0.187   30.3 2.66e-201 #>  6 ENSG000002777… TRAC                276.           5.63 0.187   30.2 5.51e-200 #>  7 ENSG000001271… BCL11B              277.           5.97 0.199   30.1 1.13e-198 #>  8 ENSG000001117… LDHB                368.           2.91 0.0982  29.6 2.80e-192 #>  9 ENSG000001988… CD3E                290.           6.02 0.204   29.6 6.28e-192 #> 10 ENSG000002715… CCL5                295.           5.44 0.188   28.8 6.53e-183 #> # ℹ 6,857 more rows #> # ℹ 1 more variable: padj <dbl>    vignette_pseudobulk_res$Result %>%   filter(log2FoldChange < 0) %>%   arrange(padj) #> # A tibble: 6,967 × 8 #>    id          gene_short_name baseMean log2FoldChange  lfcSE  stat pvalue  padj #>    <chr>       <chr>              <dbl>          <dbl>  <dbl> <dbl>  <dbl> <dbl> #>  1 ENSG000001… CTSS               2502.          -5.11 0.0940 -54.3      0     0 #>  2 ENSG000001… S100A9             6297.          -5.80 0.0835 -69.5      0     0 #>  3 ENSG000001… S100A8             3384.          -5.82 0.115  -50.6      0     0 #>  4 ENSG000000… CD74               3478.          -4.23 0.0759 -55.7      0     0 #>  5 ENSG000002… LST1                633.          -4.48 0.116  -38.6      0     0 #>  6 ENSG000002… AIF1               1030.          -4.36 0.0982 -44.4      0     0 #>  7 ENSG000002… HLA-DRA            3382.          -5.48 0.109  -50.2      0     0 #>  8 ENSG000002… HLA-DPA1           1101.          -4.83 0.128  -37.7      0     0 #>  9 ENSG000001… PSAP                990.          -4.39 0.0970 -45.3      0     0 #> 10 ENSG000000… LYZ                5176.          -6.44 0.132  -48.8      0     0 #> # ℹ 6,957 more rows"},{"path":"/articles/scRNAseq.html","id":"multivariate-regression","dir":"Articles","previous_headings":"Differential Gene Expression","what":"Multivariate Regression","title":"scRNA-seq Data Analysis","text":"type analysis want use biological replicates suitable type comparison want make. way considers cell biological replicate arguable assumption many times. major practical limitations function can consider genes time generate “log fold change” normally expect. Instead generates “estimate” basically slope regression line p q values. regression function based generalized linear regression R default uses negative binomial distribution similar DESeq2 ahve already used. blaseRtools package function wraps multivariate regression function monocle3 add minor functionality. look term column can see comparisons made: “leiden_assignmentDC/Mono” means comparison DC/Mono vs T/NK cells. know T/NK show term column. chosen alphabetically reference condition. case, positive estimate means gene DC/Mono vs T/NK cells.","code":"vignette_regression_res <- bb_monocle_regression(cds = vignette_cds,                        gene_or_genes = c(\"CD19\", \"CD3D\", \"CD14\"),                        form = \"~leiden_assignment\") vignette_regression_res #> # A tibble: 9 × 8 #>   id             gene_short_name stratification formula term  estimate   p_value #>   <chr>          <chr>           <chr>          <chr>   <chr>    <dbl>     <dbl> #> 1 ENSG000001704… CD14            no stratifica… ~leide… leid…    4.69  1.28e-148 #> 2 ENSG000001704… CD14            no stratifica… ~leide… leid…    0.142 7.07e-  1 #> 3 ENSG000001704… CD14            no stratifica… ~leide… stat…    0.265 1.41e-  2 #> 4 ENSG000001672… CD3D            no stratifica… ~leide… leid…   -4.15  8.89e-237 #> 5 ENSG000001672… CD3D            no stratifica… ~leide… leid…   -3.69  4.44e- 49 #> 6 ENSG000001672… CD3D            no stratifica… ~leide… stat…    1.28  3.37e- 46 #> 7 ENSG000001774… CD19            no stratifica… ~leide… leid…    0.590 6.18e-  1 #> 8 ENSG000001774… CD19            no stratifica… ~leide… leid…    5.93  3.46e-  9 #> 9 ENSG000001774… CD19            no stratifica… ~leide… stat…    1.02  4.37e-  3 #> # ℹ 1 more variable: q_value <dbl> vignette_regression_res$term #> [1] \"leiden_assignmentDC/Mono\"        \"leiden_assignmentB\"              #> [3] \"stats::offset(log(Size_Factor))\" \"leiden_assignmentDC/Mono\"        #> [5] \"leiden_assignmentB\"              \"stats::offset(log(Size_Factor))\" #> [7] \"leiden_assignmentDC/Mono\"        \"leiden_assignmentB\"              #> [9] \"stats::offset(log(Size_Factor))\""},{"path":"/articles/scRNAseq.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"scRNA-seq Data Analysis","text":"Using steps able go sequencing data figures, gene lists p values many 10X datasets come across. Please contact email questions, corrections enhancements post github inclined. bradley.blaser@osumc.edu https://github.com/blaserlab/blaseRtools","code":""},{"path":"/articles/trace.html","id":"making-a-trace-object","dir":"Articles","previous_headings":"","what":"Making a Trace Object","title":"Trace:  Representing Track-like Data in R","text":"Trace objects can made either Signac/Seurat object GRanges object. Signac package stores reads single-cell genomic range data (accessibility, peaks, etc) Seurat object. Although Signac/Seurat objects powerful standard community, large, complicated lots hidden slots confusing error prone user. Trace objects can used extract required information visualization structured way store data much smaller footprint. Bulk chromatin analysis outputs data bigwig files can read R using import.bw function rtracklayer. generate GRanges object. extremely large Trace objects much lighter-weight alternative. make Trace object Signac/Seurat object like : Peaks Links, included Seurat/signac object transferred Trace object. make Trace object bulk data like . Filtering full GRange speed processing considerably. import bigwig GRanges object, necessarily group coverage metadata. probably numeric column called score. case, constructor function rename coverage add group variable value “bulk”. can change options bigwig different, leaving default (group coverage) allow plotting functions work defaults, recommended.","code":"# note this code will not run zf_prkcda_trace <- bb_makeTrace(obj = zf,                              genome = \"danRer11\",                              gene_to_plot = \"prkcda\",                              extend_left = 5000,                              extend_right = 5000) # loaded by blaseRtools zf_prkcda_trace #> A Trace object from genome danRer11, sequence chr6. #>  #> The plot range is set to 40518370-40549207 . # note this code will not run e4_PRKCD_trace <- bb_makeTrace(obj = plyranges::filter(e4_huvec_GRange_full.pkc_cxcl8, seqnames == \"chr3\"),                               gene_to_plot = \"PRKCD\",                               peaks = e4_huvec_peaks.pkc_cxcl8,                               genome = \"hg38\",                               extend_left = 5000,                               extend_right = 5000) # loaded by blaseRtools e4_PRKCD_trace #> A Trace object from genome hg38, sequence chr3. #>  #> The plot range is set to 53151009-53197717 ."},{"path":"/articles/trace.html","id":"plotting-component-tracks","dir":"Articles","previous_headings":"","what":"Plotting Component Tracks","title":"Trace:  Representing Track-like Data in R","text":"make plots using set functions describe . track made separately composed single panel using patchwork package. track ggplot object can edited using layers like ggplot. Like plotting functions, first argument always data object.","code":""},{"path":"/articles/trace.html","id":"ploting-trace-data","dir":"Articles","previous_headings":"Plotting Component Tracks","what":"Ploting trace data","title":"Trace:  Representing Track-like Data in R","text":"can plot trace data using bb_plot_trace_data. Without arguments, looks like :  function, default y variable “coverage” facet color variables “group”. default Signac/Seurat objects hold data. set “group” variable values using Idents function operate Signac object making Trace object. variables wish display add group variable  can set color palette:  can stack traces want:  bulk data, may imported values want plot another variable name","code":"library(cowplot) theme_set(theme_cowplot(font_size = 12)) bb_plot_trace_data(zf_prkcda_trace) dat <- Trace.data(zf_prkcda_trace) |>    plyranges::mutate(group_alt = paste0(group, \"_alt\"))   zf_prkcda_trace <- Trace.setData(zf_prkcda_trace, gr = dat) bb_plot_trace_data(zf_prkcda_trace, facet_var = \"group_alt\", color_var = \"group_alt\") dat <- Trace.data(zf_prkcda_trace) |>    plyranges::mutate(group_alt = paste0(group, \"_alt\"))   zf_prkcda_trace <- Trace.setData(zf_prkcda_trace, gr = dat) cols <- RColorBrewer::brewer.pal(n = 5, name = \"Set1\") alt_pal <- c(\"Erythroid_alt\" = cols[1],              \"Neutrophil_alt\" = cols[2],              \"Progenitor 1_alt\" = cols[3],              \"Progenitor 2_alt\" = cols[4],              \"Renal_alt\" = cols[5]              ) bb_plot_trace_data(zf_prkcda_trace,                     facet_var = \"group_alt\",                     color_var = \"group_alt\",                     pal = alt_pal) bb_plot_trace_data(zf_prkcda_trace,                     facet_var = NULL,                     color_var = \"group_alt\",                     pal = alt_pal,                     legend_pos = \"right\") Trace.data(e4_PRKCD_trace) #> GRanges object with 7661 ranges and 2 metadata columns: #>          seqnames            ranges strand |       group  coverage #>             <Rle>         <IRanges>  <Rle> | <character> <numeric> #>      [1]     chr3 53151013-53151026      * |        bulk   0.20260 #>      [2]     chr3 53151027-53151029      * |        bulk   0.20197 #>      [3]     chr3 53151030-53151032      * |        bulk   0.40412 #>      [4]     chr3 53151033-53151036      * |        bulk   0.60609 #>      [5]     chr3 53151037-53151069      * |        bulk   0.60799 #>      ...      ...               ...    ... .         ...       ... #>   [7657]     chr3          53197667      * |        bulk   0.17298 #>   [7658]     chr3 53197668-53197688      * |        bulk   0.08645 #>   [7659]     chr3 53197689-53197692      * |        bulk   0.08634 #>   [7660]     chr3 53197693-53197696      * |        bulk   0.08623 #>   [7661]     chr3 53197697-53197714      * |        bulk   0.08611 #>   ------- #>   seqinfo: 1 sequence from hg38 genome; no seqlengths"},{"path":"/articles/trace.html","id":"plotting-the-gene-model","dir":"Articles","previous_headings":"Plotting Component Tracks","what":"Plotting the Gene Model","title":"Trace:  Representing Track-like Data in R","text":"plots underlying gene model reference genome. default picks APPRIS prinicpal1 transcript gene. UTRs shown half height coding exons.  can show specific transcript. 1 transcript gene.  gene humans multiple transcripts:   want can change fill color exon icons:","code":"bb_plot_trace_model(zf_prkcda_trace) bb_plot_trace_model(zf_prkcda_trace, select_transcript = \"ENSDART00000033819\") # prinicpal1 transcript bb_plot_trace_model(e4_PRKCD_trace) # an alternative transcript bb_plot_trace_model(e4_PRKCD_trace, select_transcript = \"ENST00000651505\") # prinicpal1 transcript bb_plot_trace_model(e4_PRKCD_trace, icon_fill = \"orange\")"},{"path":"/articles/trace.html","id":"plotting-peaks","dir":"Articles","previous_headings":"Plotting Component Tracks","what":"Plotting Peaks","title":"Trace:  Representing Track-like Data in R","text":"relatively straightforward:  want can change fill color :","code":"bb_plot_trace_peaks(zf_prkcda_trace) bb_plot_trace_peaks(zf_prkcda_trace, fill_color = \"blue\")"},{"path":"/articles/trace.html","id":"plotting-links","dir":"Articles","previous_headings":"Plotting Component Tracks","what":"Plotting Links","title":"Trace:  Representing Track-like Data in R","text":"function plots bezier curves center linked peaks. color figure indicates link score. case, color scale scaled differently show differences clearly.  can also change colors. link scores outside range, shown dark grey default ggplot:  can also trim using cutoff parameter (default 0, cutoff)  Note: links extend outside plot range also trimmed.","code":"bb_plot_trace_links(zf_prkcda_trace) bb_plot_trace_links(zf_prkcda_trace, link_range = c(0.4,0.8)) bb_plot_trace_links(zf_prkcda_trace,                      link_range = c(0.4,0.8), link_low_color = \"purple\", link_high_color = \"green\") bb_plot_trace_links(zf_prkcda_trace,                      link_range = c(0.5,0.8),                      link_low_color = \"purple\",                      link_high_color = \"green\") bb_plot_trace_links(zf_prkcda_trace,                      link_range = c(0.5,0.8),                      link_low_color = \"purple\",                      link_high_color = \"green\",                      cutoff = 0.5)"},{"path":"/articles/trace.html","id":"plotting-the-axis","dir":"Articles","previous_headings":"Plotting Component Tracks","what":"Plotting the Axis","title":"Trace:  Representing Track-like Data in R","text":"default shows plot range kb, indicating genome chromosome:  can add custom axis title want. can function separate layer.   see next section, putting modifications within function calls, rather separate layers makes code look cleaner.","code":"bb_plot_trace_axis(zf_prkcda_trace) bb_plot_trace_axis(zf_prkcda_trace, xtitle = \"My Custom Title\") bb_plot_trace_axis(zf_prkcda_trace) + labs(x = \"Another Custom Title\")"},{"path":"/articles/trace.html","id":"putting-the-plot-together","dir":"Articles","previous_headings":"","what":"Putting the Plot Together","title":"Trace:  Representing Track-like Data in R","text":"use patchwork compose tracks full plot:  needs help, add plot layout function call:  looks pretty good, Coverage plot y axes little cramped size:  looks better. Note enclose ggplot layers parentheses keep confusing patchwork. end world. also works bulk data:  good, facet variable weird. “bulk” term placeholder introduced made object. can silence facet variable setting facet_var = NULL make go away.  can put meaningful information facet variable serve helpful title:","code":"library(\"patchwork\") bb_plot_trace_data(zf_prkcda_trace) /  bb_plot_trace_model(zf_prkcda_trace) /  bb_plot_trace_peaks(zf_prkcda_trace) /  bb_plot_trace_links(zf_prkcda_trace) /  bb_plot_trace_axis(zf_prkcda_trace) bb_plot_trace_data(zf_prkcda_trace) /  bb_plot_trace_model(zf_prkcda_trace) /  bb_plot_trace_peaks(zf_prkcda_trace) /  bb_plot_trace_links(zf_prkcda_trace, link_range = c(0.4,0.8)) /  bb_plot_trace_axis(zf_prkcda_trace) +  plot_layout(heights = c(5,1,1,1,0.01), guides = \"collect\") (bb_plot_trace_data(zf_prkcda_trace) + scale_y_continuous(breaks = c(0,20))) /  bb_plot_trace_model(zf_prkcda_trace) /  bb_plot_trace_peaks(zf_prkcda_trace) /  bb_plot_trace_links(zf_prkcda_trace, link_range = c(0.4,0.8)) /  bb_plot_trace_axis(zf_prkcda_trace) +  plot_layout(heights = c(5,1,1,1,0.01), guides = \"collect\") bb_plot_trace_data(e4_PRKCD_trace) /  bb_plot_trace_model(e4_PRKCD_trace) /  bb_plot_trace_peaks(e4_PRKCD_trace) /  bb_plot_trace_axis(e4_PRKCD_trace) +  plot_layout(heights = c(3,1,1,0.01)) bb_plot_trace_data(e4_PRKCD_trace, facet_var = NULL) /  bb_plot_trace_model(e4_PRKCD_trace) /  bb_plot_trace_peaks(e4_PRKCD_trace) /  bb_plot_trace_axis(e4_PRKCD_trace) +  plot_layout(heights = c(3,1,1,0.01)) dat <- Trace.data(e4_PRKCD_trace) |>    mutate(group = \"E4-HUVEC\") e4_PRKCD_trace_alt <- Trace.setData(e4_PRKCD_trace, dat) bb_plot_trace_data(e4_PRKCD_trace_alt) /  bb_plot_trace_model(e4_PRKCD_trace_alt) /  bb_plot_trace_peaks(e4_PRKCD_trace_alt) /  bb_plot_trace_axis(e4_PRKCD_trace_alt) +  plot_layout(heights = c(3,1,1,0.01))"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brad Blaser. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Blaser B (2024). blaseRtools: R Tools Blaser Lab Data Analysis. R package version 0.0.0.9149, https://github.com/blaserlab/blaseRtools.","code":"@Manual{,   title = {blaseRtools: R Tools for Blaser Lab Data Analysis},   author = {Brad Blaser},   year = {2024},   note = {R package version 0.0.0.9149},   url = {https://github.com/blaserlab/blaseRtools}, }"},{"path":"/index.html","id":"blasertools","dir":"","previous_headings":"","what":"R Tools for Blaser Lab Data Analysis ","title":"R Tools for Blaser Lab Data Analysis ","text":"R package includes commonly used functions R analysis Blaser Lab.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Tools for Blaser Lab Data Analysis ","text":"can install latest version blaseRtools :","code":"# using base function install.packages('blaseRtools', repos = c('https://blaserlab.r-universe.dev', 'https://cloud.r-project.org'))  # or if using blaseRtemplates function blaseRtemplates::install_one_package(\"blaseRtools\", \"new\")"},{"path":"/index.html","id":"useage","dir":"","previous_headings":"","what":"Useage","title":"R Tools for Blaser Lab Data Analysis ","text":"commonly used functions end user prefixed “bb_”. load blaseRtools package supporting data run ``library(“blaseRtools”)``` can access functions typing “bb_” autocomplete window selections pop . Functions related “Ape” “Trace” classes prefixed “Ape.” “Trace.”, respectively.","code":""},{"path":"/index.html","id":"function-modules","dir":"","previous_headings":"","what":"Function Modules","title":"R Tools for Blaser Lab Data Analysis ","text":"functions documented help pages can reviewed installation. Tutorials describing typical use-cases module functions linked available. bb_align bb_annotate_npc bb_cellmeta bb_cluster_representation bb_doubletfinder bb_gene_dotplot bb_gene_modules bb_gene_pseudotime bb_gene_umap bb_gene_violinplot bb_goenrichment bb_gosummary bb_load_tenx_targz bb_monocle_regression bb_pseudobulk_mf bb_qc bb_rejoin bb_rowmeta bb_seurat_anno bb_triplecluster bb_var_umap Ape.DNA Ape.fasta Ape.fimo Ape.granges Ape.save Ape.setFeatures bb_parseape bb_make_ape_genomic bb_make_ape_transcript bb_buff_granges bb_makeTrace bb_merge_narrowpeaks bb_metafeature bb_plot_trace_axis bb_plot_trace_data bb_plot_trace_feature bb_plot_trace_links bb_plot_trace_model bb_plot_footprint bb_promoter_overlap bb_read_bam bb_read_narrowpeak Trace.data Trace.features Trace.gene_model Trace.links Trace.plot_range Trace.setFeatures Trace.setLinks Trace.setRange bb_blind_images bb_unblind_images","code":""},{"path":"/reference/Ape-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to hold genebank/APE file data. — Ape-class","title":"An S4 class to hold genebank/APE file data. — Ape-class","text":"instance class best created calling \"bb_parseape()\" genebank APE-formatted file.  function parse file, correctly format sections place slots Ape Object.  Technically \"LOCUS\" required slot Ape object, however point without \"ORIGIN\" (sequence data), bb_parseape() fail without \"ORIGIN\" section.  slots optional.  Additional slots ignored constructor function.  DNA sequence stored DNAStringSet object features GRanges object.  See https://www.ncbi.nlm.nih.gov/Sitemap/samplerecord.html genebank file specification.","code":""},{"path":"/reference/Ape-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to hold genebank/APE file data. — Ape-class","text":"LOCUS LOCUS line genebank formatted character string. DEFINITION DEFINITION line genebank file formatted character string. ACCESSION ACCESSION section genebank file formatted character string. VERSION VERSION section genebank file formatted character string. SOURCE SOURCE section genebank file formatted character string. COMMENT COMMENT section genebank file formatted character string. FEATURES FEATURES section genebank file formatted character string.  Created internally GRanges object.  Caution:  FEATURE attributes may lost conversion. ORIGIN DNA sequence end_of_file end file signal. dna_biostring entire ORIGIN sequence formatted DNAStringSet length 1. granges Genebank features formatted GRanges object.","code":""},{"path":"/reference/Ape.DNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the DNASringSet Slot from an Ape Object — Ape.DNA","title":"Get the DNASringSet Slot from an Ape Object — Ape.DNA","text":"Get DNASringSet Slot Ape Object","code":""},{"path":"/reference/Ape.DNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the DNASringSet Slot from an Ape Object — Ape.DNA","text":"","code":"Ape.DNA(ape)"},{"path":"/reference/Ape.fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an Ape Instance as a Fasta File — Ape.fasta","title":"Save an Ape Instance as a Fasta File — Ape.fasta","text":"Save Ape Instance Fasta File","code":""},{"path":"/reference/Ape.fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an Ape Instance as a Fasta File — Ape.fasta","text":"","code":"Ape.fasta(ape, feature = NULL, out)"},{"path":"/reference/Ape.fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an Ape Instance as a Fasta File — Ape.fasta","text":"feature Name feature select writing FASTA file.  null (default), whole biostring saved fasta. Name FASTA file write","code":""},{"path":"/reference/Ape.fimo.html","id":null,"dir":"Reference","previous_headings":"","what":"Run FIMO on Selected Ape Object Features — Ape.fimo","title":"Run FIMO on Selected Ape Object Features — Ape.fimo","text":"supplied Ape object, run FIMO identify putative transcription factor binding sites DNA subsequence.","code":""},{"path":"/reference/Ape.fimo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run FIMO on Selected Ape Object Features — Ape.fimo","text":"","code":"Ape.fimo(ape, fimo_feature, out = NULL)"},{"path":"/reference/Ape.fimo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run FIMO on Selected Ape Object Features — Ape.fimo","text":"ape Ape instance fimo_feature character vector features Ape object used run fimo. Directory created hold fimo results.  date/time stamp appended.  null, objects saved function return GRanges object","code":""},{"path":"/reference/Ape.granges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the GRanges Slot from an Ape Object — Ape.granges","title":"Get the GRanges Slot from an Ape Object — Ape.granges","text":"Get GRanges Slot Ape Object","code":""},{"path":"/reference/Ape.granges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the GRanges Slot from an Ape Object — Ape.granges","text":"","code":"Ape.granges(ape)"},{"path":"/reference/Ape.save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an Ape Instance as a Genebank Format File — Ape.save","title":"Save an Ape Instance as a Genebank Format File — Ape.save","text":"Save Ape Instance Genebank Format File","code":""},{"path":"/reference/Ape.save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an Ape Instance as a Genebank Format File — Ape.save","text":"","code":"Ape.save(ape, out)"},{"path":"/reference/Ape.save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an Ape Instance as a Genebank Format File — Ape.save","text":"Name genebank/APE file write","code":""},{"path":"/reference/Ape.setFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the FEATURES Slot of a GRanges Object — Ape.setFeatures","title":"Set the FEATURES Slot of a GRanges Object — Ape.setFeatures","text":"Set FEATURES Slot GRanges Object","code":""},{"path":"/reference/Ape.setFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the FEATURES Slot of a GRanges Object — Ape.setFeatures","text":"","code":"Ape.setFeatures(ape, gr)"},{"path":"/reference/Ape.setFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the FEATURES Slot of a GRanges Object — Ape.setFeatures","text":"ape ape object gr GRanges object.  object become new FEATURES granges slots Ape object.  want keep old features, new features need appended using c(old_gr, new_gr) value gr argument.","code":""},{"path":"/reference/COMMENTS.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Comments Slot from an Ape Object — COMMENTS","title":"Get the Comments Slot from an Ape Object — COMMENTS","text":"function gets comments slot Ape object.","code":""},{"path":"/reference/COMMENTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Comments Slot from an Ape Object — COMMENTS","text":"","code":"COMMENTS(ape)"},{"path":"/reference/FEATURES.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Features Slot from an Ape Object — FEATURES","title":"Get the Features Slot from an Ape Object — FEATURES","text":"function cats features slot Ape object.","code":""},{"path":"/reference/FEATURES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Features Slot from an Ape Object — FEATURES","text":"","code":"FEATURES(ape)"},{"path":"/reference/LOCUS.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Locus Slot from an Ape Object — LOCUS","title":"Get the Locus Slot from an Ape Object — LOCUS","text":"function cats Locus slot Ape object.","code":""},{"path":"/reference/LOCUS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Locus Slot from an Ape Object — LOCUS","text":"","code":"LOCUS(ape)"},{"path":"/reference/LearnGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Run link[monocle3]{learn_graph} on a Seurat object — LearnGraph","title":"Run link[monocle3]{learn_graph} on a Seurat object — LearnGraph","text":"Run link[monocle3]{learn_graph} Seurat object","code":""},{"path":"/reference/LearnGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run link[monocle3]{learn_graph} on a Seurat object — LearnGraph","text":"","code":"LearnGraph(object, reduction = DefaultDimReduc(object = object), ...)"},{"path":"/reference/LearnGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run link[monocle3]{learn_graph} on a Seurat object — LearnGraph","text":"object Seurat object reduction Name reduction use learning pseudotime graph ... Arguments passed learn_graph","code":""},{"path":"/reference/LearnGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run link[monocle3]{learn_graph} on a Seurat object — LearnGraph","text":"cell_data_set object pseudotime graph","code":""},{"path":[]},{"path":"/reference/SeuratWrappers-package.html","id":null,"dir":"Reference","previous_headings":"","what":"blaseRtools: R Tools for Blaser Lab Data Analysis — SeuratWrappers-package","title":"blaseRtools: R Tools for Blaser Lab Data Analysis — SeuratWrappers-package","text":"repository R tools Single Cell RNA seq lab data analysis functions.","code":""},{"path":[]},{"path":"/reference/SeuratWrappers-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"blaseRtools: R Tools for Blaser Lab Data Analysis — SeuratWrappers-package","text":"Maintainer: Brad Blaser bradley.blaser@osumc.edu (ORCID)","code":""},{"path":"/reference/Trace-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to Hold Genome Track Data — Trace-class","title":"An S4 class to Hold Genome Track Data — Trace-class","text":"instance class created calling \"bb_makeTrace\".  slots object GRanges objects.  Validation checks make sure data, peaks, links, gene models bound plot range chromosome genome.  different standard GRangesList object slot can metadata columns.  Currently, hg38 danRer11 supported genomes.  Use class plot coverage tracks bulk single cell ATAC, CHIP, similar experiments.  Link plotting available cicero-style links.","code":""},{"path":"/reference/Trace-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to Hold Genome Track Data — Trace-class","text":"trace_data GRanges object metadata column \"score\" \"coverage\" intended plotted y-variable.  Metadata variables may included annotate color facets final plotting.  particularly important single cell data combining bulk tracks different samples.  Whole sample bigwig files can converted GRanges objects using import.bw rtracklayer.  track data trimmed import pre-trimming approximate range desired significantly speed processing.  plyranges package recommended granges manipulations filtering chromosome, adding metadata binding GRanges objects together.  Bulk tracks different samples pre-normalized importing. peaks GRanges object containing peaks plot track-style format. links GRanges object Cicero-style links. gene_model gene model plotting.  automatically generated bb_makeTrace. plot_range master GRange whole object.  Validity checks /constructors ensure ranges contained within.","code":""},{"path":"/reference/Trace.data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Trace Data Slot from a Trace Object — Trace.data","title":"Get the Trace Data Slot from a Trace Object — Trace.data","text":"Get Trace Data Slot Trace Object","code":""},{"path":"/reference/Trace.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Trace Data Slot from a Trace Object — Trace.data","text":"","code":"Trace.data(trace)"},{"path":"/reference/Trace.features.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Features Slot from a Trace Object — Trace.features","title":"Get the Features Slot from a Trace Object — Trace.features","text":"Get Features Slot Trace Object","code":""},{"path":"/reference/Trace.features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Features Slot from a Trace Object — Trace.features","text":"","code":"Trace.features(trace)"},{"path":"/reference/Trace.gene_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the gene_model Slot from a Trace Object — Trace.gene_model","title":"Get the gene_model Slot from a Trace Object — Trace.gene_model","text":"Get gene_model Slot Trace Object","code":""},{"path":"/reference/Trace.gene_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the gene_model Slot from a Trace Object — Trace.gene_model","text":"","code":"Trace.gene_model(trace)"},{"path":"/reference/Trace.links.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Links Slot from a Trace Object — Trace.links","title":"Get the Links Slot from a Trace Object — Trace.links","text":"Get Links Slot Trace Object","code":""},{"path":"/reference/Trace.links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Links Slot from a Trace Object — Trace.links","text":"","code":"Trace.links(trace)"},{"path":"/reference/Trace.peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the peaks Slot from a Trace Object — Trace.peaks","title":"Get the peaks Slot from a Trace Object — Trace.peaks","text":"Get peaks Slot Trace Object","code":""},{"path":"/reference/Trace.peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the peaks Slot from a Trace Object — Trace.peaks","text":"","code":"Trace.peaks(trace)"},{"path":"/reference/Trace.plot_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the plot_range Slot from a Trace Object — Trace.plot_range","title":"Get the plot_range Slot from a Trace Object — Trace.plot_range","text":"Get plot_range Slot Trace Object","code":""},{"path":"/reference/Trace.plot_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the plot_range Slot from a Trace Object — Trace.plot_range","text":"","code":"Trace.plot_range(trace)"},{"path":"/reference/Trace.setData.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Trace Data Slot of a GRanges Object — Trace.setData","title":"Set the Trace Data Slot of a GRanges Object — Trace.setData","text":"Set Trace Data Slot GRanges Object","code":""},{"path":"/reference/Trace.setData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Trace Data Slot of a GRanges Object — Trace.setData","text":"","code":"Trace.setData(trace, gr)"},{"path":"/reference/Trace.setData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Trace Data Slot of a GRanges Object — Trace.setData","text":"trace trace object gr GRanges object.  object become new trace_data.  range smaller, trim slots match.  Usually used change range metadata .","code":""},{"path":"/reference/Trace.setFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Features Slot of a GRanges Object — Trace.setFeatures","title":"Set the Features Slot of a GRanges Object — Trace.setFeatures","text":"Set Features Slot GRanges Object","code":""},{"path":"/reference/Trace.setFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Features Slot of a GRanges Object — Trace.setFeatures","text":"","code":"Trace.setFeatures(trace, gr)"},{"path":"/reference/Trace.setFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Features Slot of a GRanges Object — Trace.setFeatures","text":"trace ape object gr GRanges object.  object become new plot features.","code":""},{"path":"/reference/Trace.setLinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Links Slot of a GRanges Object — Trace.setLinks","title":"Set the Links Slot of a GRanges Object — Trace.setLinks","text":"Set Links Slot GRanges Object","code":""},{"path":"/reference/Trace.setLinks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Links Slot of a GRanges Object — Trace.setLinks","text":"","code":"Trace.setLinks(trace, gr)"},{"path":"/reference/Trace.setLinks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Links Slot of a GRanges Object — Trace.setLinks","text":"trace trace object gr GRanges object.  object become new plot links.","code":""},{"path":"/reference/Trace.setRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Plot Range Slot of a GRanges Object — Trace.setRange","title":"Set the Plot Range Slot of a GRanges Object — Trace.setRange","text":"Set Plot Range Slot GRanges Object","code":""},{"path":"/reference/Trace.setRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Plot Range Slot of a GRanges Object — Trace.setRange","text":"","code":"Trace.setRange(trace, gr)"},{"path":"/reference/Trace.setRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Plot Range Slot of a GRanges Object — Trace.setRange","text":"trace trace object gr GRanges object.  object become new plot range.","code":""},{"path":"/reference/Trace.setpeaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the peaks Slot of a GRanges Object — Trace.setpeaks","title":"Set the peaks Slot of a GRanges Object — Trace.setpeaks","text":"Set peaks Slot GRanges Object","code":""},{"path":"/reference/Trace.setpeaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the peaks Slot of a GRanges Object — Trace.setpeaks","text":"","code":"Trace.setpeaks(trace, gr)"},{"path":"/reference/Trace.setpeaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the peaks Slot of a GRanges Object — Trace.setpeaks","text":"trace trace object gr GRanges object.  object become new plot peaks.","code":""},{"path":"/reference/add_cds_factor_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Add predefined sample-level cell metadata to cell data sets while importing — add_cds_factor_columns","title":"Add predefined sample-level cell metadata to cell data sets while importing — add_cds_factor_columns","text":"Add predefined sample-level cell metadata cell data sets importing","code":""},{"path":"/reference/add_cds_factor_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add predefined sample-level cell metadata to cell data sets while importing — add_cds_factor_columns","text":"","code":"add_cds_factor_columns(cds, columns_to_add)"},{"path":"/reference/add_cds_factor_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add predefined sample-level cell metadata to cell data sets while importing — add_cds_factor_columns","text":"cds cell data set object columns_to_add named vector name element becomes name new colData column value value particular sample.  Best used importing metadata table.","code":""},{"path":"/reference/aggregate.Matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute summary statistics of a Matrix — aggregate.Matrix","title":"Compute summary statistics of a Matrix — aggregate.Matrix","text":"Similar aggregate.  Splits matrix groups specified groupings, can one variables. Aggregation function applied columns data, specified formula. Warning: groupings made dense sparse, though data .","code":""},{"path":"/reference/aggregate.Matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute summary statistics of a Matrix — aggregate.Matrix","text":"","code":"# S3 method for Matrix aggregate(x, groupings = NULL, form = NULL, fun = \"sum\", ...)"},{"path":"/reference/aggregate.Matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute summary statistics of a Matrix — aggregate.Matrix","text":"x Matrix matrix-like object groupings object coercible group factors defining groups form formula fun character string specifying name aggregation function applied columns data.  Currently \"sum\", \"count\", \"mean\" supported. ... arguments passed methods.  Currently ignored","code":""},{"path":"/reference/aggregate.Matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute summary statistics of a Matrix — aggregate.Matrix","text":"sparse Matrix.  rownames correspond values groupings interactions groupings joined _. attribute crosswalk includes groupings data frame.  necessary possible include character data frame groupings sparse Matrix.  needed, one can cbind(attr(x,\"crosswalk\"),x) combine groupings aggregates.","code":""},{"path":"/reference/aggregate.Matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute summary statistics of a Matrix — aggregate.Matrix","text":"aggregate.Matrix uses implementations functions passed string fun argument.","code":""},{"path":[]},{"path":"/reference/as.cell_data_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to Monocle3 cell_data_set objects — as.cell_data_set","title":"Convert objects to Monocle3 cell_data_set objects — as.cell_data_set","text":"Convert objects Monocle3 cell_data_set objects","code":""},{"path":"/reference/as.cell_data_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to Monocle3 cell_data_set objects — as.cell_data_set","text":"","code":"as.cell_data_set(x, ...)  # S3 method for Seurat as.cell_data_set(   x,   assay = DefaultAssay(object = x),   reductions = AssociatedDimReducs(object = x, assay = assay),   default.reduction = DefaultDimReduc(object = x, assay = assay),   graph = paste0(assay, \"_snn\"),   group.by = NULL,   ... )"},{"path":"/reference/as.cell_data_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to Monocle3 cell_data_set objects — as.cell_data_set","text":"x object ... Arguments passed methods assay Assays convert reductions vector dimensional reductions add cell_data_set object; defaults dimensional reductions calculated assay global dimensional reductions default.reduction Name dimensional reduction use clustering name graph Name graph used clustering results group.Name cell-level metadata column use identites; pass","code":""},{"path":"/reference/as.cell_data_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert objects to Monocle3 cell_data_set objects — as.cell_data_set","text":"cell_data_set object","code":""},{"path":"/reference/as.cell_data_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert objects to Monocle3 cell_data_set objects — as.cell_data_set","text":"Seurat method utilizes .SingleCellExperiment transfer expression cell-level metadata. following additional information also transferred : Cell emebeddings transferred reducedDims slot. Dimensional reduction names converted upper-case (eg. “umap” “UMAP”) match Monocle 3 style Feature loadings transfered cds@reduce_dim_aux$gene_loadings present. NOTE: feature loadings last dimensional reduction transferred Standard deviations added cds@reduce_dim_aux$prop_var_expl present. NOTE: standard deviations last dimensional reduction transferred Clustering information transferred following manner: cell-level metadata entries “monocle3_clusters” “monocle3_partitions” exist, set clusters partitions, nearest neighbor graph added object; otherwise, Seurat's nearest-neighbor graph converted igraph object added cell_data_set object along Seurat's clusters. partition information added using Seurat's clsuters","code":""},{"path":[]},{"path":"/reference/bb_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Single Cell Gene Expression — bb_aggregate","title":"Aggregate Single Cell Gene Expression — bb_aggregate","text":"Generates matrix counts aggregated gene /cell group.","code":""},{"path":"/reference/bb_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Single Cell Gene Expression — bb_aggregate","text":"","code":"bb_aggregate(   obj,   assay = \"RNA\",   experiment_type = \"Gene Expression\",   gene_group_df = NULL,   cell_group_df = NULL,   norm_method = c(\"log\", \"binary\", \"size_only\"),   pseudocount = 1,   scale_agg_values = TRUE,   max_agg_value = 3,   min_agg_value = -3,   binary_min = 0,   exclude.na = TRUE )"},{"path":"/reference/bb_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Single Cell Gene Expression — bb_aggregate","text":"obj Seurat cell data set object assay Gene expression assay use aggregation; currently applies Seurat objects, Default: 'RNA' gene_group_df 2-column dataframe gene names ids gene groupings, Default: NULL cell_group_df 2-coumn dataframe cell ids gene groupings, Default: NULL norm_method Gene normalization method, Default: c(\"log\", \"binary\", \"size_only\") pseudocount Pseudocount, Default: 1 scale_agg_values Whether scale aggregated values, Default: TRUE max_agg_value scaling, make maximum aggregated value, Default: 3 min_agg_value scaling, make minimum aggregated value, Default: -3 binary_min Minimum value cell considered express feature, Default: 0 exclude.na Exclude NA?, Default: TRUE","code":""},{"path":"/reference/bb_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Single Cell Gene Expression — bb_aggregate","text":"dense sparse matrix.","code":""},{"path":"/reference/bb_aggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate Single Cell Gene Expression — bb_aggregate","text":"best way group genes cells using bb_*meta select cell_id feature_id plus one metadata column group labels.","code":""},{"path":[]},{"path":"/reference/bb_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a CDS object according to a metadata variable — bb_align","title":"Align a CDS object according to a metadata variable — bb_align","text":"Align CDS object according metadata variable","code":""},{"path":"/reference/bb_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a CDS object according to a metadata variable — bb_align","text":"","code":"bb_align(cds, align_by, n_cores = 8)"},{"path":"/reference/bb_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a CDS object according to a metadata variable — bb_align","text":"cds cell data set object align align_by metadata column align n_cores Number cores reduce dimensions .","code":""},{"path":"/reference/bb_align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a CDS object according to a metadata variable — bb_align","text":"modified cell data set object aligned dimensions new metadata columns holding prealignment umap coordinates.","code":""},{"path":"/reference/bb_annotate_npc.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a Plot using NPC Coordinates — bb_annotate_npc","title":"Annotate a Plot using NPC Coordinates — bb_annotate_npc","text":"Annotate Plot using NPC Coordinates","code":""},{"path":"/reference/bb_annotate_npc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a Plot using NPC Coordinates — bb_annotate_npc","text":"","code":"bb_annotate_npc(label, x, y, ...)"},{"path":"/reference/bb_annotate_npc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a Plot using NPC Coordinates — bb_annotate_npc","text":"label text label apply plot x NPC X coordinate y NPC Y coordinate","code":""},{"path":"/reference/bb_blind_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Copy of Image Files and Rename With File Hashes in Blinded Folder — bb_blind_images","title":"Make a Copy of Image Files and Rename With File Hashes in Blinded Folder — bb_blind_images","text":"copy rename  files generate two files:  \"blinding_key.csv\" original blinded file names, \"scoresheet.csv\" just blinded filenames.  Add columns needed scoresheet, example, runx_count.  run bb_unblind rejoin scoresheet key generate unblinded result file.","code":""},{"path":"/reference/bb_blind_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Copy of Image Files and Rename With File Hashes in Blinded Folder — bb_blind_images","text":"","code":"bb_blind_images(analysis_file, file_column, output_dir)"},{"path":"/reference/bb_blind_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Copy of Image Files and Rename With File Hashes in Blinded Folder — bb_blind_images","text":"analysis_file analysis file experiment.  contain 1 line every biological sample filename every file blinded. file_column column name analysis_file files blinded. output_dir linux-style file path directory hold blinded images.  directory created function.","code":""},{"path":"/reference/bb_blind_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Copy of Image Files and Rename With File Hashes in Blinded Folder — bb_blind_images","text":"nothing","code":""},{"path":"/reference/bb_buff_granges.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Up Your GRanges Object — bb_buff_granges","title":"Clean Up Your GRanges Object — bb_buff_granges","text":"function several things.  removes ranges non-standard chromosomes drops levels.  optionally set genome user-provided value.  Typically use \"hg38\" \"danRer11\". exported version useful.","code":""},{"path":"/reference/bb_buff_granges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Up Your GRanges Object — bb_buff_granges","text":"","code":"bb_buff_granges(x, gen)"},{"path":"/reference/bb_buff_granges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Up Your GRanges Object — bb_buff_granges","text":"x Granges object buff. gen optional genome name provide.  Recommend \"hg38\" \"danRer11\".","code":""},{"path":"/reference/bb_buff_granges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Up Your GRanges Object — bb_buff_granges","text":"GRanges object","code":""},{"path":"/reference/bb_cds_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Heatmap of Aggregated Gene Expressionf from a CDS — bb_cds_heatmap","title":"Make a Heatmap of Aggregated Gene Expressionf from a CDS — bb_cds_heatmap","text":"Supply cds subset aggregation values get heatmap.  Plot return value using cowplot::plot_grid().  function wraps several complicated functions ComplexHeatmap tries apply default values common use case:  plotting top markers cds cells grouped arbitrarily (usually cluster type).  function provides option aggregate genes well order plot gene modules.  cell gene aggregation, provide name (form string) corresponding metadata column aggregation performed.  many aesthetic parameters function even available internal ComplexHeatmap::Heatmap() function.  best way adjust parameters provided scroll popup box appears type ComplexHeatmap::Heatmap() RStudio pass via ellipsis.  default put genes columns cells rows.  can flip behavior setting flip_axis = TRUE.  require adjustment aesthetic parameters.  Complex annotations (beyond labeling cherry-picked genes) currently supported.","code":""},{"path":"/reference/bb_cds_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Heatmap of Aggregated Gene Expressionf from a CDS — bb_cds_heatmap","text":"","code":"bb_cds_heatmap(   cds_subset,   cellmeta_col = NULL,   rowmeta_col = NULL,   heatmap_highlights = NULL,   three_colors = c(\"blue4\", \"ivory\", \"red3\"),   flip_axis = FALSE,   name = NULL,   heatmap_legend_param = list(title_gp = gpar(fontface = \"plain\", fontsize = 9),     grid_width = unit(0.14, \"in\"), labels_gp = gpar(fontsize = 8)),   row_dend_width = unit(5, \"mm\"),   column_dend_height = unit(5, \"mm\"),   column_dend_side = \"bottom\",   show_row_names = T,   row_names_gp = gpar(fontsize = 9),   show_column_names = F,   row_dend_gp = gpar(lwd = 0.5),   column_dend_gp = gpar(lwd = 0.5),   row_title = NULL,   column_title = NULL,   padding = 1.5,   labels_rot = 45,   ... )"},{"path":"/reference/bb_cds_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Heatmap of Aggregated Gene Expressionf from a CDS — bb_cds_heatmap","text":"cds_subset subset cells genes want plot heatmap.  Best approach pipe cds filter_cds() function. cellmeta_col name cell metadata column aggregate cells ; one cellmeta_col rowmeta_col must NULL, Default: NULL rowmeta_col name row metadata column aggregate cells ; one cellmeta_col rowmeta_col must NULL, Default: NULL heatmap_highlights vector gene names highlight using anno_mark(), Default: NULL three_colors vector colors main color scale, Default: c(\"blue4\", \"ivory\", \"red3\") flip_axis Logical; whether plot genes rows (TRUE) columns (FALSE), Default: FALSE name Name main color scale, Default: NULL heatmap_legend_param Graphical parameters main heatmap legend, Default: list(title_gp = gpar(fontface = \"plain\", fontsize = 9), grid_width = unit(0.14, \"\"), labels_gp = gpar(fontsize = 8)) row_dend_width Row dendrogram width, Default: unit(5, \"mm\") column_dend_height Column dendrogram height, Default: unit(5, \"mm\") column_dend_side Side plot column dendrogram, Default: 'bottom' show_row_names Logical; whether show rownames, Default: T row_names_gp Graphical parameters row names, Default: gpar(fontsize = 9) show_column_names Logical; whether show column names, Default: F row_dend_gp Graphical parameters row dendrogram, Default: gpar(lwd = 0.5) column_dend_gp Graphical parameters teh column dendrogram, Default: gpar(lwd = 0.5) row_title Row title text, Default: NULL column_title Column title text, Default: NULL padding Padding gene names heatmap highlights, Default: 1.5 labels_rot Rotation heatmap highlight labels, Default: 45 ... Optional arguments pass ComplexHeatmap::Heatmap()","code":""},{"path":"/reference/bb_cds_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Heatmap of Aggregated Gene Expressionf from a CDS — bb_cds_heatmap","text":"complex heatmap form gtree.","code":""},{"path":"/reference/bb_cellchat.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer Cell-Cell Communication — bb_cellchat","title":"Infer Cell-Cell Communication — bb_cellchat","text":"Use function identify ligand/receptor pairs expressed cell clusters human, mouse zebrafish single cell data.  CellChat object generated can used visualize connections using bb_cellchat_heatmap tools package CellChat.","code":""},{"path":"/reference/bb_cellchat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer Cell-Cell Communication — bb_cellchat","text":"","code":"bb_cellchat(   cds,   group_var,   n_cores = 12,   species = c(\"human\", \"mouse\", \"zebrafish\"),   min_cells = 10,   prob_type = c(\"triMean\", \"truncatedMean\", \"median\"),   prob_trim = NULL,   project = TRUE,   pop_size_arg = TRUE,   ask = TRUE )"},{"path":"/reference/bb_cellchat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer Cell-Cell Communication — bb_cellchat","text":"cds cell data set object.  usually pre-filtered conatin single biological sample. group_var cell metadata column identifying cell groups cell-cell communication inference. n_cores Number cores analysis, Default: 12 species Species assay, Default: c(\"human\", \"mouse\", \"zebrafish\") min_cells Cell clusters smaller value ignored., Default: 10 prob_type Methods computing average gene expression per cell group. default = \"triMean\", producing fewer stronger interactions; setting ‘type = \"truncatedMean\"', value assigned ’trim', producing interactions, Default: c(\"triMean\", \"truncatedMean\", \"median\") prob_trim fraction (0 0.25) observations trimmed end x mean computed using truncatedMean, Default: NULL project Whether smooth gene expression, Default: TRUE pop_size_arg Whether consider proportion cells group across sequenced cells. Set population.size = FALSE analyzing sorting-enriched single cells, remove potential artifact population size. Set population.size = TRUE analyzing unsorted single-cell transcriptomes, reason abundant cell populations tend send collectively stronger signals rare cell populations., Default: TRUE","code":""},{"path":"/reference/bb_cellchat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer Cell-Cell Communication — bb_cellchat","text":"CellChat object","code":""},{"path":"/reference/bb_cellchat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Infer Cell-Cell Communication — bb_cellchat","text":"see github::sqjin/CellChat","code":""},{"path":[]},{"path":"/reference/bb_cellchat_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Complex Heatmap From a CellChat Object With Sensible Defaults — bb_cellchat_heatmap","title":"Make a Complex Heatmap From a CellChat Object With Sensible Defaults — bb_cellchat_heatmap","text":"generate heatmap CellChat object using ComplexHeatmap::Heatmap.  Options provided filter sender receiver cells, generate simple marginal annotations aesthetic control.","code":""},{"path":"/reference/bb_cellchat_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Complex Heatmap From a CellChat Object With Sensible Defaults — bb_cellchat_heatmap","text":"","code":"bb_cellchat_heatmap(   object,   source_filter = NULL,   target_filter = NULL,   interaction_filter = NULL,   interaction_threshold = 0,   colors = c(\"transparent\", \"red3\"),   rowanno = c(NULL, \"Annotation\", \"Pathway\"),   rowanno_colors = NULL,   colanno = c(NULL, \"Source\", \"Target\"),   colanno_colors = NULL,   pval_filter = 0.05,   heatmap_name = \"Interaction\\nScore\",   heatmap_show_row_dend = TRUE,   heatmap_row_dend_width = unit(5, \"mm\"),   heatmap_show_column_dend = TRUE,   heatmap_column_dend_height = unit(5, \"mm\"),   heatmap_row_names_gp = gpar(fontsize = 10),   heatmap_column_names_gp = gpar(fontsize = 10),   heatmap_column_names_rot = 90,   heatmap_column_title = NULL,   heatmap_column_title_gp = gpar(fontsize = 12, fontface = \"bold\"),   col_anno_name_gp = gpar(fontsize = 10, fontface = \"bold\"),   row_anno_name_gp = gpar(fontsize = 10, fontface = \"bold\"),   return_value = c(\"heatmap\", \"plot\", \"matrix\") )"},{"path":"/reference/bb_cellchat_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Complex Heatmap From a CellChat Object With Sensible Defaults — bb_cellchat_heatmap","text":"object CellChat object plot source_filter Optional filter source cell clusters object metadata.  Accepts single string vector cell groups., Default: NULL target_filter Optional filter target cell clusters object metadata.  Accepts single string vector cell groups., Default: NULL interaction_filter Optional filter include certain interactions figure. interaction_threshold Optional filter include interactions certain threshold. colors Color scale endpoints, Default: c(\"transparent\", \"red3\") rowanno Options simple row annotation; must one c(NULL, \"Annotation\", \"Pathway\") rowanno_colors Optional colors replace poor color selections Complex heatmap.  Must supplied named list one element \"Annotation\" \"Pathway\".  required showing annotations.  list form:  list(Annotation = c(\"name1\" = \"color value1\", \"name2\" = \"color_value2\")), Default: NULL colanno Options simple column annotation; must one c(NULL, \"Source\", \"Target\") colanno_colors See rowanno_colors, Default: NULL pval_filter Filter significance associations.  CellChat returns pvalues 0, 0.01, 0.05; function filter retain values less equal provided value. Default: 0.05 heatmap_name Name main color scale heatmap, Default: 'InteractionScore' heatmap_show_row_dend Show row dendrograms? Default: TRUE heatmap_row_dend_width Width row dendrograms Default: unit(5, \"mm\") heatmap_show_column_dend Show column dendrograms?' Default: TRUE heatmap_column_dend_height Height column dendrograms. Default: unit(5, \"mm\") heatmap_row_names_gp Row name graphical params, Default: gpar(fontsize = 10) heatmap_column_names_gp Column name graphical params, Default: gpar(fontsize = 10) heatmap_column_names_rot Column name rotation, Default: 90 heatmap_column_title Column title, Default: NULL heatmap_column_title_gp Column title graphical params, Default: gpar(fontsize = 12, fontface = \"bold\") col_anno_name_gp Column annotation name graphical params, Default: gpar(fonmtsize = 10, fontface = \"bold\") row_anno_name_gp Row annotation name graphical params, Default: gpar(fontsize = 10, fontface = \"bold\") return_value Return heatmap plot matrix.","code":""},{"path":"/reference/bb_cellchat_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Complex Heatmap From a CellChat Object With Sensible Defaults — bb_cellchat_heatmap","text":"heatmap grid object; plot using cowplot::plot_grid","code":""},{"path":"/reference/bb_cellchat_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a Complex Heatmap From a CellChat Object With Sensible Defaults — bb_cellchat_heatmap","text":"see github::sqjin/CellChat","code":""},{"path":[]},{"path":"/reference/bb_cellmeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Cell Metadata — bb_cellmeta","title":"Get Cell Metadata — bb_cellmeta","text":"Take cell_data_set object Seurat object return cell metadata form tibble.  unique cell identifier column labeled cell_id default.  Prior versions function accept cell_data_set.  input argument changed cds obj reflect fact Seurat objects now also accepted.","code":""},{"path":"/reference/bb_cellmeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Cell Metadata — bb_cellmeta","text":"","code":"bb_cellmeta(obj, row_name = \"cell_id\", cds = NULL)"},{"path":"/reference/bb_cellmeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Cell Metadata — bb_cellmeta","text":"obj cell_data_set Seurat object. row_name Optional name provide cell unique identifier, Default: 'cell_id' cds Provided compatibility prior versions, Default: NULL","code":""},{"path":"/reference/bb_cellmeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Cell Metadata — bb_cellmeta","text":"tibble","code":""},{"path":"/reference/bb_cellmeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Cell Metadata — bb_cellmeta","text":"value supplied cds, warning issued function pass value cds obj.","code":""},{"path":"/reference/bb_cite_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a UMAP Showing Cite-Seq Antibody Binding — bb_cite_umap","title":"Plot a UMAP Showing Cite-Seq Antibody Binding — bb_cite_umap","text":"Requires cds alt experiment established.  Use bb_split_citeseq generate normalize binding data using CLR method.  Returns ggplot.","code":""},{"path":"/reference/bb_cite_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a UMAP Showing Cite-Seq Antibody Binding — bb_cite_umap","text":"","code":"bb_cite_umap(   cds,   antibody,   assay = \"CLR_counts\",   cell_size = 1,   alpha = 1,   alt_dim_x = NULL,   alt_dim_y = NULL,   plot_title = NULL,   color_legend_title = NULL,   order = TRUE,   rescale = NULL,   ncol = NULL )"},{"path":"/reference/bb_cite_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a UMAP Showing Cite-Seq Antibody Binding — bb_cite_umap","text":"cds cds \"Antibody Capture\" alt experiment plot. antibody name antibody plot. Equivalent gene_short_name.  Accepts character vector. assay binding assay use, Default: \"CLR_counts\" cell_size Size points plot, Default: 1 alpha Alpha plotted points, Default: 1 alt_dim_x Alternate/reference dimensions plot . alt_dim_y Alternate/reference dimensions plot . plot_title Optional title plot, Default: NULL color_legend_title Optional title color scale., Default: NULL order Whether order cells gene expression.  ordered, non-expressing cells plotted first, .e. bottom. Default: TRUE rescale Optional redefinition color scale, Default: NULL ncol specified, number columns facet_wrap, Default: NULL","code":""},{"path":"/reference/bb_cite_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a UMAP Showing Cite-Seq Antibody Binding — bb_cite_umap","text":"ggplot","code":""},{"path":[]},{"path":"/reference/bb_cluster_representation.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster Representation By Fisher Exact Test Per Cell — bb_cluster_representation","title":"Cluster Representation By Fisher Exact Test Per Cell — bb_cluster_representation","text":"Use function determine differential representation cells clusters.  determine fold change single experimental class single control reference class.  value normalized number cells captured clusters class.  Significance determined using Fisher's exact test.  test may overestimate significance large data sets.  case, bb_cluster_representation2 may robust.","code":""},{"path":"/reference/bb_cluster_representation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster Representation By Fisher Exact Test Per Cell — bb_cluster_representation","text":"","code":"bb_cluster_representation(   cds,   cluster_var,   class_var,   experimental_class,   control_class,   pseudocount = 1,   return_value = c(\"table\", \"plot\") )"},{"path":"/reference/bb_cluster_representation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster Representation By Fisher Exact Test Per Cell — bb_cluster_representation","text":"cds cell data set object cluster_var CDS cell metadata column holding cluster data.  can number clusters column. class_var CDS cell metadata column holding sample class data.  can 2 classes column.  may need subset reclass samples achieve . experimental_class value class column indicating experimental group. control_class value class column indicating control reference class. return_value Option return either plot data table plotting separate step.  Must either \"plot\" \"table\".","code":""},{"path":"/reference/bb_cluster_representation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster Representation By Fisher Exact Test Per Cell — bb_cluster_representation","text":"ggplot table data plotting","code":""},{"path":"/reference/bb_cluster_representation2.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster Representation By Regression Per Sample — bb_cluster_representation2","title":"Cluster Representation By Regression Per Sample — bb_cluster_representation2","text":"Use function determine differential representation cells clusters. uses regression method determine fold change groups biological samples.  can compare two sample groups, e.g. control vs experimental point.  See parameter descriptions identify properly.","code":""},{"path":"/reference/bb_cluster_representation2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster Representation By Regression Per Sample — bb_cluster_representation2","text":"","code":"bb_cluster_representation2(   obj,   sample_var,   cluster_var,   comparison_var,   comparison_levels = NULL,   color_pal = c(\"red3\", \"blue4\"),   sig_val = c(\"FDR\", \"PValue\"),   return_val = c(\"plot\", \"data\") )"},{"path":"/reference/bb_cluster_representation2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cluster Representation By Regression Per Sample — bb_cluster_representation2","text":"http://bioconductor.org/books/3.13/OSCA.multisample/differential-abundance.html","code":""},{"path":"/reference/bb_cluster_representation2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster Representation By Regression Per Sample — bb_cluster_representation2","text":"obj (possibly filtered) single cell object operate .  Can either Seurat monocle/CDS object. sample_var metadata column holding biological sample information. cluster_var metadata column holding clustering cell classification information. comparison_var metadata column holding comparison group information.  can two levels column.  Character data converted factors. comparison_levels character vector identifying order levels compare. first value shown negative log2Fold Change second positive.  NULL (default), R pick . color_pal Color palette comparison levels, Default: c(\"red3\", \"blue4\") sig_val Report PValue FDR, Default:  \"FDR\" return_val Value return, Default: c(\"plot\", \"table)","code":""},{"path":"/reference/bb_cluster_representation2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster Representation By Regression Per Sample — bb_cluster_representation2","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/bb_cluster_representation2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster Representation By Regression Per Sample — bb_cluster_representation2","text":"DETAILS","code":""},{"path":"/reference/bb_doubletfinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Use doubletfinder to model and mark doublets — bb_doubletfinder","title":"Use doubletfinder to model and mark doublets — bb_doubletfinder","text":"Use doubletfinder model mark doublets","code":""},{"path":"/reference/bb_doubletfinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use doubletfinder to model and mark doublets — bb_doubletfinder","text":"","code":"bb_doubletfinder(cds, doublet_prediction, qc_table, ncores = 1)"},{"path":"/reference/bb_doubletfinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use doubletfinder to model and mark doublets — bb_doubletfinder","text":"cds cell data set object doublet_prediction Predicted proportion doublets fom 0 1 qc_table table qc calls blaseRtools qc function","code":""},{"path":"/reference/bb_doubletfinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use doubletfinder to model and mark doublets — bb_doubletfinder","text":"tibble low- high-confidence doublet calls barcode","code":""},{"path":"/reference/bb_extract_msig.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract MSIGDB Gene Sets — bb_extract_msig","title":"Extract MSIGDB Gene Sets — bb_extract_msig","text":"Use extract gene sets MSIGDB.  gene sets known \"STANDARD_NAME\".  can filter gene set list supplying named filter list bb_extract_msig function.  name list element one metadata column names list element contents values filter .  Filtering works additive way, meaning supply filter list two elements extract gene sets passing filters 1 2.","code":""},{"path":"/reference/bb_extract_msig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract MSIGDB Gene Sets — bb_extract_msig","text":"","code":"bb_extract_msig(   filter_list = NULL,   return_form = c(\"id_list\", \"name_list\", \"tibble\") )"},{"path":"/reference/bb_extract_msig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract MSIGDB Gene Sets — bb_extract_msig","text":"filter_list named list filter MSIGDB .  Defaults NULL return whole MSIGDB return_form Select list gene ids list gene names gene set.  useful format fgsea package.  Alternatively \"tibble\" can select filtered gene sets bound long-form (tidy) tibble.","code":""},{"path":"/reference/bb_extract_msig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract MSIGDB Gene Sets — bb_extract_msig","text":"Gene set list tibble.","code":""},{"path":"/reference/bb_fix_file_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert windows filepath to linux-compatible. — bb_fix_file_path","title":"Convert windows filepath to linux-compatible. — bb_fix_file_path","text":"work backslashes already escaped double backslashes.  example, readr automatically reading windows file paths csv files. using standalone function, run terminal:  scan(= \"character, n = 1), paste unmodified filepath blank line, copy modified file path argument, x.","code":""},{"path":"/reference/bb_fix_file_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert windows filepath to linux-compatible. — bb_fix_file_path","text":"","code":"bb_fix_file_path(x)"},{"path":"/reference/bb_fix_file_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert windows filepath to linux-compatible. — bb_fix_file_path","text":"x character string filepath copied Windows escaped backslashes.","code":""},{"path":"/reference/bb_fix_file_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert windows filepath to linux-compatible. — bb_fix_file_path","text":"linux-compatible filepath","code":""},{"path":"/reference/bb_gene_dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a dotplot of gene expression by cell population — bb_gene_dotplot","title":"Make a dotplot of gene expression by cell population — bb_gene_dotplot","text":"Make dotplot gene expression cell population","code":""},{"path":"/reference/bb_gene_dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a dotplot of gene expression by cell population — bb_gene_dotplot","text":"","code":"bb_gene_dotplot(   cds,   markers,   group_cells_by,   reduction_method = \"UMAP\",   norm_method = c(\"size_log\", \"log_only\"),   scale_expression_by_gene = FALSE,   lower_threshold = 0,   max.size = 10,   group_ordering = \"bicluster\",   gene_ordering = NULL,   pseudocount = 1,   scale_max = 3,   scale_min = -3,   colorscale_name = NULL,   sizescale_name = NULL,   ... )"},{"path":"/reference/bb_gene_dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a dotplot of gene expression by cell population — bb_gene_dotplot","text":"cds cell data set object markers character vector genes plot group_cells_by cds colData column.  Use \"multifactorial\" pick 2 categorical variables put X axis facet .  See ordering . norm_method normalize gene expression. Size_factor log normalized log normalized. scale_expression_by_gene Whether scale expression values according gene.  Defaults FALSE. lower_threshold Lower cutoff gene expression max.size maximum size dotplot group_ordering Defaults \"biclustering\" method pheatmap.  Optionally take vector group values set axis order explicitly.  using group_cells_by = \"multifactorial\" need df define facet axis levels.  See example. gene_ordering Optional vector gene names order plot. pseudocount Add zero expressors.  Default = 1 scale_max Expression scale max scale_min Expression scale min colorscale_name Label color scale sizescale_name Label size scale ... Additional parameters pass facet_wrap.","code":""},{"path":"/reference/bb_gene_dotplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a dotplot of gene expression by cell population — bb_gene_dotplot","text":"ggplot","code":""},{"path":"/reference/bb_gene_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate gene modules and add them to the Gene Metadata — bb_gene_modules","title":"A function to generate gene modules and add them to the Gene Metadata — bb_gene_modules","text":"Based Monocle3's gene module functions.  Implemented default values.  convert Seurat object cell data set using SeuratWrappers calculate modules.  function returns object type.","code":""},{"path":"/reference/bb_gene_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate gene modules and add them to the Gene Metadata — bb_gene_modules","text":"","code":"bb_gene_modules(obj, n_cores = 8, cds = NULL)"},{"path":"/reference/bb_gene_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate gene modules and add them to the Gene Metadata — bb_gene_modules","text":"obj single cell object type Seurat cell_data_set. n_cores Number processor cores use analysis, Default: 8 cds Provided backward compatibility.  value supplied, return warning transfer obj argument., Default: NULL","code":""},{"path":"/reference/bb_gene_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate gene modules and add them to the Gene Metadata — bb_gene_modules","text":"object type:  Seurat cell_data_set","code":""},{"path":"/reference/bb_gene_modules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to generate gene modules and add them to the Gene Metadata — bb_gene_modules","text":"see https://cole-trapnell-lab.github.io/monocle3/docs/differential/#gene-modules","code":""},{"path":[]},{"path":"/reference/bb_gene_pseudotime.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression of a gene or genes in pseudotime. — bb_gene_pseudotime","title":"Plot expression of a gene or genes in pseudotime. — bb_gene_pseudotime","text":"Plot expression gene genes pseudotime.","code":""},{"path":"/reference/bb_gene_pseudotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression of a gene or genes in pseudotime. — bb_gene_pseudotime","text":"","code":"bb_gene_pseudotime(   cds_subset,   min_expr = NULL,   cell_size = 0.75,   nrow = NULL,   ncol = 1,   panel_order = NULL,   color_cells_by = \"pseudotime\",   trend_formula = \"~ splines::ns(pseudotime, df=3)\",   label_by_short_name = TRUE,   vertical_jitter = NULL,   horizontal_jitter = NULL )"},{"path":"/reference/bb_gene_pseudotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression of a gene or genes in pseudotime. — bb_gene_pseudotime","text":"cds_subset cell data set object subset cells genes interest min_expr Lower threshold expression plotting cell_size Size point plotting nrow Number rows facetting ncol Number columns facetting panel_order Character string order genes plot color_cells_by cds colData column trend_formula Formula trend line label_by_short_name Boolean label gene name ID vertical_jitter Adjustment vertical jitter.  Optional horizontal_jitter Adjustment horizontal jitter.  Optional","code":""},{"path":"/reference/bb_gene_pseudotime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression of a gene or genes in pseudotime. — bb_gene_pseudotime","text":"ggplot","code":""},{"path":"/reference/bb_gene_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Plot of Gene Expression in UMAP Form — bb_gene_umap","title":"Make a Plot of Gene Expression in UMAP Form — bb_gene_umap","text":"Takes Seurat cell_dat_set object, extracts UMAP dimensions gene expression values.  Seurat, default assay \"RNA\"; can changed necessary.  cell_data_set, assay parameter nothing; function extracts log size-factor normalized counts similar identical Seurat \"RNA\" assay.  vector genes supplied gene_or_genes, faceted plot generated.  dataframe supplied, aggregated plot generated facet gene group.  dataframe must 2 colums: first containing feature ids second containing grouping information.  best generated using bb_rowmeta.","code":""},{"path":"/reference/bb_gene_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Plot of Gene Expression in UMAP Form — bb_gene_umap","text":"","code":"bb_gene_umap(   obj,   gene_or_genes,   assay = \"RNA\",   order = TRUE,   cell_size = 1,   alpha = 1,   ncol = NULL,   plot_title = NULL,   color_legend_title = \"Expression\",   max_expr_val = NULL,   alt_dim_x = NULL,   alt_dim_y = NULL,   rasterize = FALSE,   raster_dpi = 300,   cds = NULL )"},{"path":"/reference/bb_gene_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Plot of Gene Expression in UMAP Form — bb_gene_umap","text":"obj Seurat cell_data_set object. gene_or_genes Individual gene genes aggregated genes plot.  Supply character string single gene, vector multiple genes dataframe aggregated genes.  See description. assay Seurat objects :  gene expression assay get expression data , Default: 'RNA' order Whether order cells gene expression.  ordered, non-expressing cells plotted first, .e. bottom.  Caution:  many cells overplotted may lead misleading presentation.  Generally bb_genebubbles better way present, Default: TRUE cell_size Size points, Default: 1 alpha Transparency points, Default: 1 ncol Specify number columns faceting, Default: NULL plot_title Optional title plot, Default: NULL color_legend_title Option change color scale title, Default: 'Expression' max_expr_val Maximum expression value cap color scale, Default: NULL alt_dim_x Alternate/reference dimensions plot . alt_dim_y Alternate/reference dimensions plot . rasterize Whether render graphical layer raster image.  Default FALSE. raster_dpi rasterize DPI used.  Default = 300. cds Provided backward compatibility.  value supplied warning emitted., Default: NULL","code":""},{"path":"/reference/bb_gene_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Plot of Gene Expression in UMAP Form — bb_gene_umap","text":"ggplot","code":""},{"path":[]},{"path":"/reference/bb_gene_violinplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a plot of gene expression in UMAP form — bb_gene_violinplot","title":"Make a plot of gene expression in UMAP form — bb_gene_violinplot","text":"Make plot gene expression UMAP form","code":""},{"path":"/reference/bb_gene_violinplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a plot of gene expression in UMAP form — bb_gene_violinplot","text":"","code":"bb_gene_violinplot(   cds,   variable,   genes_to_plot,   experiment_type = \"Gene Expression\",   pseudocount = 1,   include_jitter = FALSE,   ytitle = \"Expression\",   plot_title = NULL,   rows = 1,   show_x_label = TRUE,   legend_pos = \"none\",   comparison_list = NULL,   palette = NULL,   violin_alpha = 1,   jitter_alpha = 1,   jitter_color = \"black\",   jitter_fill = \"transparent\",   jitter_size = 0.5,   facet_scales = \"fixed\",   order_genes = TRUE,   jitter_match = FALSE,   rasterize = FALSE,   raster_dpi = 300 )"},{"path":"/reference/bb_gene_violinplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a plot of gene expression in UMAP form — bb_gene_violinplot","text":"cds cell data set object variable Stratification variable x-axis genes_to_plot Either character vector gene short names tbl/df first column gene short name second gene grouping. pseudocount Value add zero-cells include_jitter Include jitter points ytitle Title y axis plot_title Main title plot rows Number rows facetting show_x_label Option show x label legend_pos Position label comparison_list Optional list comparisons ggpubr palette Color palette use.  Viridis default. violin_alpha Alpha value violin plot jitter_alpha Alpha value jitter plot jitter_color Color jitter plot.  Defaults black ignored jitter_match == TRUE jitter_fill Fill jitter plot jitter_size Size jitter points facet_scales Scale option facetting.  \"Fixed\" default order_genes true, put genes order variable parameter jitter_match true, match jitter color violin fill. rasterize Whether render graphical layer raster image.  Default FALSE. raster_dpi rasterize DPI used.  Default = 300.","code":""},{"path":"/reference/bb_gene_violinplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a plot of gene expression in UMAP form — bb_gene_violinplot","text":"ggplot","code":""},{"path":"/reference/bb_genebubbles.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Gene Bubble/Dot Plot — bb_genebubbles","title":"Create a Gene Bubble/Dot Plot — bb_genebubbles","text":"data-dense plot recommended way showing expression single markers/genes cell group.  default, function return unfaceted ggplot cell groups X axis genes Y axis dot size representing proportion cells cell group expressing gene color scale representing per-cell expression. also may interest add aesthetic variables facets additional color scales.  two ways function facilitate .  First, can supply vector cell groups cell_grouping argument cells grouped composite value factors.  Usually , also want access components composite variable facet .  can supply \"data\" return_value argument get tibble.  can modify necessary generate ggplot assigning aesthetics scales desired using geom_point. function also supports visualizing citeseq data.  data allocated alternative experiment cds object.  show data, set experiment_type \"Antibody Capture\" name alternate experiment citeseq data.  genes parameter name assigned antibody derived tag.  Expression threshold particularly useful case background binding observed antibodies.   default 0 default cell 0 counts considered expressor marker.  threshold applied scaling across markers.  best way set threshold visualize markers interest isotypes expression_threshold = 0 scale_expr = FALSE.  pick threshold value based color scale rerun scale_expr either TRUE FALSE.","code":""},{"path":"/reference/bb_genebubbles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Gene Bubble/Dot Plot — bb_genebubbles","text":"","code":"bb_genebubbles(   obj,   genes,   cell_grouping,   experiment_type = \"Gene Expression\",   scale_expr = TRUE,   expression_threshold = 0,   gene_ordering = c(\"bicluster\", \"as_supplied\"),   group_ordering = c(\"bicluster\", \"as_supplied\"),   return_value = c(\"plot\", \"data\") )"},{"path":"/reference/bb_genebubbles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Gene Bubble/Dot Plot — bb_genebubbles","text":"obj Seurat cell_data_set object. genes Gene genes plot. cell_grouping Cell metadata column group cells .  Supply one vector generate composite variable. experiment_type Experiment data plot.  Usually either \"Gene Expression\" \"Antibody Capture\", Default: 'Gene Expression' scale_expr Whether scale expression gene, Default: TRUE expression_threshold Pre-scaling expression value cell considered express marker.  value fed binary_min parameter bb_aggregate, Default = 0 gene_ordering default, genes ordered clustering algorithm.  Supply \"as_supplied\" plot genes order supplied \"genes\" argument , Default: c(\"bicluster\", \"as_supplied\") group_ordering default, cell groups ordered clustering algorithm.  Supply \"as_supplied\" plot cell groups order supplied \"cell_grouping\", Default: c(\"bicluster\", \"as_supplied\") return_value Whether return plot data tibble form, Default: c(\"plot\", \"data\")","code":""},{"path":"/reference/bb_genebubbles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Gene Bubble/Dot Plot — bb_genebubbles","text":"ggplot tibble","code":""},{"path":"/reference/bb_goenrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Go Term Enrichment — bb_goenrichment","title":"Go Term Enrichment — bb_goenrichment","text":"function find enriched go terms query list gene names relative reference list gene names.","code":""},{"path":"/reference/bb_goenrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Go Term Enrichment — bb_goenrichment","text":"","code":"bb_goenrichment(   query,   reference,   group_pval = 0.01,   go_db = c(\"org.Hs.eg.db\", \"org.Dr.eg.db\", \"org.Mm.eg.db\") )"},{"path":"/reference/bb_goenrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Go Term Enrichment — bb_goenrichment","text":"query vector gene names reference background gene list.  Usually as_tibble(rowData(cds_main)). group_pval P value determine enrichment.  Default: 0.01. go_db GO term database Default: c(\"org.Hs.eg.db\", \"org.Dr.eg.db\", \"org.Mm.eg.db\")","code":""},{"path":"/reference/bb_goenrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Go Term Enrichment — bb_goenrichment","text":"list items including enrichment results.","code":""},{"path":"/reference/bb_goscatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a scatter plot of GO term associations — bb_goscatter","title":"Make a scatter plot of GO term associations — bb_goscatter","text":"Make scatter plot GO term associations","code":""},{"path":"/reference/bb_goscatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a scatter plot of GO term associations — bb_goscatter","text":"","code":"bb_goscatter(   simMatrix,   reducedTerms,   size = \"score\",   addLabel = TRUE,   labelSize = 4 )"},{"path":"/reference/bb_goscatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a scatter plot of GO term associations — bb_goscatter","text":"simMatrix Take output bb_gosummary reducedTerms Also take output bb_gosummary size Variable map point size.  Defaults \"score\". addLabel Boolean; whether add text labels labelSize Optional label size","code":""},{"path":"/reference/bb_goscatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a scatter plot of GO term associations — bb_goscatter","text":"ggplot","code":""},{"path":"/reference/bb_gosummary.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to reduce go terms by semantic similarity — bb_gosummary","title":"A function to reduce go terms by semantic similarity — bb_gosummary","text":"function reduce go terms semantic similarity","code":""},{"path":"/reference/bb_gosummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to reduce go terms by semantic similarity — bb_gosummary","text":"","code":"bb_gosummary(   x,   reduce_threshold = 0.8,   go_db = c(\"org.Hs.eg.db\", \"org.Dr.eg.db\", \"org.Mm.eg.db\") )"},{"path":"/reference/bb_gosummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to reduce go terms by semantic similarity — bb_gosummary","text":"x list go term enrichment results produced bb_goenrichment. reduce_threshold degree term reduction. 0 1.  Higher reduction. go_db database query.  Choose c(\"org.Hs.eg.db\", \"org.Dr.eg.db\", \"org.Mm.eg.db\", ...).","code":""},{"path":"/reference/bb_gosummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to reduce go terms by semantic similarity — bb_gosummary","text":"list items downstream plotting","code":""},{"path":"/reference/bb_load_tenx_h5.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a 10X Genomics H5 File and Return a CDS — bb_load_tenx_h5","title":"Load a 10X Genomics H5 File and Return a CDS — bb_load_tenx_h5","text":"function reads 10X Genomics H5 file returns cell_data_set CDS.  Important notes:  tested work single-genome citeseq data sets.  multigenome data, long features contained matrix identified composite reference/gene identifier, also work.  case, CDS filtered post-hoc using sample_barcodes.csv data get appropriate species cell.  Also:  function takes specific H5 file unique biological sample.  wrapped another function map across samples dataset.  wrapper needs find appropriate H5 file, e.g. filtered_feature_bc_matrix.h5 files processed cellranger count sample_filtered_feature_bc_matrix.h5 files processed using cellranger multi. may change based cellranger version used.","code":""},{"path":"/reference/bb_load_tenx_h5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a 10X Genomics H5 File and Return a CDS — bb_load_tenx_h5","text":"","code":"bb_load_tenx_h5(filename, sample_metadata_tbl = NULL)"},{"path":"/reference/bb_load_tenx_h5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a 10X Genomics H5 File and Return a CDS — bb_load_tenx_h5","text":"filename Path h5 file.","code":""},{"path":"/reference/bb_load_tenx_h5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a 10X Genomics H5 File and Return a CDS — bb_load_tenx_h5","text":"cell data set.","code":""},{"path":"/reference/bb_load_tenx_targz.html","id":null,"dir":"Reference","previous_headings":"","what":"Load 10X Data Into CDS — bb_load_tenx_targz","title":"Load 10X Data Into CDS — bb_load_tenx_targz","text":"Load 10X Data CDS","code":""},{"path":"/reference/bb_load_tenx_targz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load 10X Data Into CDS — bb_load_tenx_targz","text":"","code":"bb_load_tenx_targz(targz_file, umi_cutoff = 100, sample_metadata_tbl = NULL)"},{"path":"/reference/bb_load_tenx_targz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load 10X Data Into CDS — bb_load_tenx_targz","text":"targz_file character string file path multi pipestance directory umi_cutoff import cells fewer UMIs value.  Defaults 100. sample_metadata_tbl tibble wide format one line.  Col names indicate metadata variables add.","code":""},{"path":"/reference/bb_load_tenx_targz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load 10X Data Into CDS — bb_load_tenx_targz","text":"cell data set object.","code":""},{"path":"/reference/bb_makeTrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Trace object from a Signac Object or Granges object — bb_makeTrace","title":"Construct a Trace object from a Signac Object or Granges object — bb_makeTrace","text":"Problem 1:  Signac objects GRanges made bigwigs large computationally expensive get data tweaking plots.  Problem 2:  part like Signac plots genomic coverage track-like data like show bulk data similar way similar compuatational interface.  trace object small intermediate object holds minimal amount data need make coverage plot showing accessibility binding specific genomic region.  can use trace object quickly easily generate tracks needed plot.  tracks ggplots easy configure legible graphics.  options displaying groups color facet built good graphical defaults.  suitable, can changed post hoc like ggplot.","code":""},{"path":"/reference/bb_makeTrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Trace object from a Signac Object or Granges object — bb_makeTrace","text":"","code":"bb_makeTrace(   obj,   gene_to_plot,   genome = c(\"hg38\", \"danRer11\"),   extend_left = 0,   extend_right = 0,   peaks = NULL,   bulk_group_col = NULL,   bulk_group_id = \"bulk\",   bulk_coverage_col = \"score\" )"},{"path":"/reference/bb_makeTrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Trace object from a Signac Object or Granges object — bb_makeTrace","text":"obj Signac/Seurat object GRanges object.  Import bigwig file GRanges object using import.bw rtracklayer.  Use plyranges functions easily pre-filter GRanges objec e.g. chr reduce processing time.  precise range defined gene_to_plot extend arguments.  may wish add grouping metadata columns merge several bulk tracks importing. gene_to_plot gene want display.  Must valid gene genome assembly used. genome genome assembly.  Required.  Must either \"hg38\" \"danRer11\". extend_left Bases extend plot_range left, upstream relative top strand. extend_right Bases extend plot_range right, downstream relative top strand. peaks optional GRanges object holding peak data.  Ignored Signac/Seurat objects carry internally. bulk_group_col parameter allows identification grouping variable bigwig/Granges object added one.  One example adding multiple bulk tracks:  can use plot data different colors facets.  new metadata column called \"group\" added hold .  added grouping data upstream processing, leave NULL (default).  case new group column filled single string (see bulk_group_id).  ignored Signac/Seurat objects. bulk_group_id value want display track data faceted plots added grouping information making object.  Defaults \"bulk\" great choice.  ignored Signac/Seurat objects. bulk_coverage_col making object bigwig/GRanges, need identify column bigwig/GRanges object holds coverage data plot y axis.  Defaults \"score\".  ignored Signac/Seurat objects.","code":""},{"path":"/reference/bb_make_ape_genomic.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an Ape Genome Object — bb_make_ape_genomic","title":"Make an Ape Genome Object — bb_make_ape_genomic","text":"function takes either gene name sequence coordinates returns ape object DNA sequence selected genome reference.  can choose hg38 GRCz11.  Features generated ensembl GFF files.  Features overlapping query range (gene sequence) returned GRanges object features within Ape object.  features included can optionally filtered using \"include_type\" argument function. Using \"additional_granges\" argument, can provide additional features present standard gene model added Ape object GRanges slot features slot.","code":""},{"path":"/reference/bb_make_ape_genomic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an Ape Genome Object — bb_make_ape_genomic","text":"","code":"bb_make_ape_genomic(   query,   genome = c(\"hg38\", \"GRCz11\"),   extend_left = 0,   extend_right = 0,   include_type = c(\"ncRNA_gene\", \"rRNA\", \"exon\", \"pseudogene\", \"pseudogenic_transcript\",     \"ncRNA\", \"gene\", \"CDS\", \"lnc_RNA\", \"mRNA\", \"three_prime_UTR\", \"five_prime_UTR\",     \"unconfirmed_transcript\", \"scRNA\", \"C_gene_segment\", \"D_gene_segment\",     \"J_gene_segment\", \"V_gene_segment\", \"miRNA\", \"tRNA\", \"snRNA\", \"snoRNA\",     \"lincRNA_gene\", \"lncRNA_gene\", \"unconfirmed_transcript\"),   additional_granges = NULL )"},{"path":"/reference/bb_make_ape_genomic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an Ape Genome Object — bb_make_ape_genomic","text":"query Either valid gene name named numeric vector genome coordinates.  vector form:  c(chr = 1, start = 1000, end = 2000).  vector must numeric must names.  chromosome number converted \"chr1\" etc internally. genome genome pull , Default: c(\"hg38\", \"GRCz11\") extend_left Number bases extend query left \"upstream\" relative + strand. extend_right Number bases extend query right \"downstream\" relative + strand. include_type type features include standard gene model. Default: c(\"ncRNA_gene\", \"rRNA\", \"exon\", \"pseudogene\", \"pseudogenic_transcript\", \"ncRNA\", \"gene\", \"CDS\", \"lnc_RNA\", \"mRNA\", \"three_prime_UTR\", \"five_prime_UTR\", \"unconfirmed_transcript\", \"scRNA\", \"C_gene_segment\", \"D_gene_segment\", \"J_gene_segment\", \"V_gene_segment\", \"miRNA\", \"tRNA\", \"snRNA\", \"snoRNA\", \"lincRNA_gene\", \"lncRNA_gene\", \"unconfirmed_transcript\") additional_granges GRanges object features add Ape Object.  Coordinates relative reference, sequence extracted ape file.  Granges object can constructed following syntax:  GenomicRanges::makeGRangesFromDataFrame(data.frame(seqname = \"chr6\", start = 40523370, end = 40523380, strand = \"+\", type = \"addl_feature\", gene_name = \"prkcda\", label = \"feature1\"), keep.extra.columns = T).  gene_name argument optional.  defined features based extracted sequence, (.e. relative position 1 ORIGIN section Ape object), best option use feature setting function FEATURES(instance_of_Ape) <- GRanges_Object.","code":""},{"path":"/reference/bb_make_ape_genomic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an Ape Genome Object — bb_make_ape_genomic","text":"APE object","code":""},{"path":"/reference/bb_make_ape_transcript.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an Ape Transcriptome Object — bb_make_ape_transcript","title":"Make an Ape Transcriptome Object — bb_make_ape_transcript","text":"function takes specific ensembl transcript identifier, ENST00000348343.11, gets cDNA sequence corresponding transcriptomic reference.  returned Ape object UTR's CDS annotated features.","code":""},{"path":"/reference/bb_make_ape_transcript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an Ape Transcriptome Object — bb_make_ape_transcript","text":"","code":"bb_make_ape_transcript(query, transcriptome = c(\"hg38\", \"GRCz11\"))"},{"path":"/reference/bb_make_ape_transcript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an Ape Transcriptome Object — bb_make_ape_transcript","text":"query specific ensembl transcript identifier. transcriptome Genome/transcriptome reference use, Default: c(\"hg38\", \"GRCz11\")","code":""},{"path":"/reference/bb_make_ape_transcript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an Ape Transcriptome Object — bb_make_ape_transcript","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/bb_make_ape_transcript.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make an Ape Transcriptome Object — bb_make_ape_transcript","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/bb_make_ape_transcript.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make an Ape Transcriptome Object — bb_make_ape_transcript","text":"","code":"if (FALSE) { if(interactive()){  #EXAMPLE1  } }"},{"path":"/reference/bb_merge_narrowpeaks.html","id":null,"dir":"Reference","previous_headings":"","what":"A Function To Merge Replicate Narrow Peaks GRanges — bb_merge_narrowpeaks","title":"A Function To Merge Replicate Narrow Peaks GRanges — bb_merge_narrowpeaks","text":"@description function merges replicate peaks GRanges objects 1. @param peaks_gr regular list GRanges objects (GRangesList). @return GRanges object @export @import IRanges GenomicRanges","code":""},{"path":"/reference/bb_merge_narrowpeaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Function To Merge Replicate Narrow Peaks GRanges — bb_merge_narrowpeaks","text":"","code":"bb_merge_narrowpeaks(peaks_gr)"},{"path":"/reference/bb_metafeature.html","id":null,"dir":"Reference","previous_headings":"","what":"A Function to Generate Data For Making MetaPlots — bb_metafeature","title":"A Function to Generate Data For Making MetaPlots — bb_metafeature","text":"Use function generate data making TSS enrichment plots metafeature plots centered single genomic locus.  function returns data need plot.  Use tibble element returned plot enrichment plot matrix heatmap.  problem currently binwidths enrichment plot need smaller binwidths heatmap look good.  use good binwidths enrichment plot, heatmap crash.  either reduce size heatmap matrix plotting rerun function different bin size.  function allows sample names added, several samples can column-bound together comparison.  gene normalized outer flanks account differences sequencing depth degree.  also option include possible TSS plot (.e. including zeros) may want comparing several samples.  , set select_hits FALSE.","code":""},{"path":"/reference/bb_metafeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Function to Generate Data For Making MetaPlots — bb_metafeature","text":"","code":"bb_metafeature(   query,   targets,   select_hits = TRUE,   width = 2000,   binwidth = 10,   sample_id = NULL )"},{"path":"/reference/bb_metafeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Function to Generate Data For Making MetaPlots — bb_metafeature","text":"query GRanges object.  bam file can plot read coverage across metagene. targets GRanges object.  targets want plot around. select_hits want plot targets overlappign query reads?  Defaults true. width width analysis bp. binwidth binwidth bp.  Width must evenly divided binwidth. sample_id optional sample id want join matrix another one.","code":""},{"path":"/reference/bb_metafeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Function to Generate Data For Making MetaPlots — bb_metafeature","text":"list including matrix tibble.","code":""},{"path":"/reference/bb_monocle_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to perform regression on single cell data. — bb_monocle_regression","title":"A function to perform regression on single cell data. — bb_monocle_regression","text":"Note:  function deprecated favor bb_monocle_regression_better returns log2FoldChange instead estimates.  log2FoldChange value normalized_effect value returned monocle regression functions.","code":""},{"path":"/reference/bb_monocle_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to perform regression on single cell data. — bb_monocle_regression","text":"","code":"bb_monocle_regression(   cds,   gene_or_genes,   stratification_variable = NULL,   stratification_value = NULL,   form,   linking_function = \"negbinomial\" )"},{"path":"/reference/bb_monocle_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to perform regression on single cell data. — bb_monocle_regression","text":"cds cell data set object. gene_or_genes Genes regress . stratification_variable Optional colData column subset cds internal function. stratification_value Optional value stratify . form regression formula form \"~var1+var2+...\" linking_function generalized linear model.","code":""},{"path":"/reference/bb_monocle_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to perform regression on single cell data. — bb_monocle_regression","text":"tibble containing regression results.","code":""},{"path":"/reference/bb_monocle_regression_better.html","id":null,"dir":"Reference","previous_headings":"","what":"An Improved Function to Perform Regression on Single Cell Data. — bb_monocle_regression_better","title":"An Improved Function to Perform Regression on Single Cell Data. — bb_monocle_regression_better","text":"function replaces bb_monocle_regression.  returns log2FoldChange instead estimates.  log2FoldChange value normalized_effect value returned monocle regression functions.","code":""},{"path":"/reference/bb_monocle_regression_better.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An Improved Function to Perform Regression on Single Cell Data. — bb_monocle_regression_better","text":"","code":"bb_monocle_regression_better(   cds,   gene_or_genes,   stratification_variable = NULL,   stratification_value = NULL,   form,   linking_function = \"negbinomial\" )"},{"path":"/reference/bb_monocle_regression_better.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An Improved Function to Perform Regression on Single Cell Data. — bb_monocle_regression_better","text":"cds cell data set object. gene_or_genes Genes regress . stratification_variable Optional colData column subset cds internal function. stratification_value Optional value stratify . form regression formula form \"~var1+var2+...\" linking_function generalized linear model.","code":""},{"path":"/reference/bb_monocle_regression_better.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An Improved Function to Perform Regression on Single Cell Data. — bb_monocle_regression_better","text":"tibble containing regression results.","code":""},{"path":"/reference/bb_parseape.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a Genebank File and Construct an APE Object — bb_parseape","title":"Parse a Genebank File and Construct an APE Object — bb_parseape","text":"main function reading file genebank/ape/equivalent format generating instance Ape class.  String manipulations used parse input ape file.  Biostrings GRanges functions called generate DNAStringSet GRanges objects store sequence feature data, respectively.  Ape constructor function called internally end.","code":""},{"path":"/reference/bb_parseape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a Genebank File and Construct an APE Object — bb_parseape","text":"","code":"bb_parseape(input_file)"},{"path":"/reference/bb_parseape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a Genebank File and Construct an APE Object — bb_parseape","text":"input_file genebank/ape file parse construct instance Ape class.","code":""},{"path":"/reference/bb_parseape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a Genebank File and Construct an APE Object — bb_parseape","text":"Ape object","code":""},{"path":"/reference/bb_plot_genes_in_pseudotime.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots expression for one or more genes as a function of pseudotime — bb_plot_genes_in_pseudotime","title":"Plots expression for one or more genes as a function of pseudotime — bb_plot_genes_in_pseudotime","text":"Plots expression one genes function pseudotime","code":""},{"path":"/reference/bb_plot_genes_in_pseudotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots expression for one or more genes as a function of pseudotime — bb_plot_genes_in_pseudotime","text":"","code":"bb_plot_genes_in_pseudotime(   cds,   gene_or_genes,   pseudotime_dim,   min_expr = NULL,   cell_size = 0.75,   nrow = NULL,   ncol = 1,   panel_order = NULL,   color_cells_by = pseudotime_dim,   trend_formula_df = 3,   label_by_short_name = TRUE,   vertical_jitter = NULL,   horizontal_jitter = NULL,   legend_title = NULL )"},{"path":"/reference/bb_plot_genes_in_pseudotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots expression for one or more genes as a function of pseudotime — bb_plot_genes_in_pseudotime","text":"cds Cell data set plot. gene_or_genes Gene genes plot pseudotime. pseudotime_dim column holding pseudotime dimension plot along. min_expr minimum (untransformed) expression level plot. cell_size size (points) cell used plot. nrow number rows used laying panels gene's expression. ncol number columns used laying panels gene's expression panel_order vector gene names indicating order genes laid (left--right, top--bottom). label_by_short_name = TRUE, use gene_short_name values, otherwise use feature IDs. color_cells_by cell attribute (e.g. column colData(cds)) used color cell.  Defaults value provided pseudotime_dim. trend_formula_df degrees freedom model formula used fit expression trend pseudotime.  formulat takes form \"~ splines::ns(pseudotime_dim, df = trend_formula_df)\". label_by_short_name label figure panels gene_short_name (TRUE) feature ID (FALSE). vertical_jitter value passed ggplot jitter points vertical dimension. Prevents overplotting, particularly helpful rounded transcript count data. horizontal_jitter value passed ggplot jitter points horizontal dimension. Prevents overplotting, particularly helpful rounded transcript count data.","code":""},{"path":"/reference/bb_plot_genes_in_pseudotime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots expression for one or more genes as a function of pseudotime — bb_plot_genes_in_pseudotime","text":"ggplot2 plot object","code":""},{"path":"/reference/bb_plot_rowData_col.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to generate a data frame in the proper form for aggregate expression plotting with bb_gene_umap. — bb_plot_rowData_col","title":"A helper function to generate a data frame in the proper form for aggregate expression plotting with bb_gene_umap. — bb_plot_rowData_col","text":"Use argument \"gene_or_genes\" parameter bb_gene_umap.","code":""},{"path":"/reference/bb_plot_rowData_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to generate a data frame in the proper form for aggregate expression plotting with bb_gene_umap. — bb_plot_rowData_col","text":"","code":"bb_plot_rowData_col(cds, rowData_col, filter_in = NULL, filter_out = NULL)"},{"path":"/reference/bb_plot_rowData_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to generate a data frame in the proper form for aggregate expression plotting with bb_gene_umap. — bb_plot_rowData_col","text":"cds CDS extract gene metadata.  cds enclosing function. rowData_col Gene metadata column aggregate . filter_in Subset values focus .  become facet final plot. Default keep everything except NA values. filter_out Option filter unwanted values. Default filter anything.","code":""},{"path":"/reference/bb_plot_rowData_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function to generate a data frame in the proper form for aggregate expression plotting with bb_gene_umap. — bb_plot_rowData_col","text":"data frame format needed pass bb_gene_umap.","code":""},{"path":"/reference/bb_plot_trace_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot The X Axis From A Trace Object — bb_plot_trace_axis","title":"Plot The X Axis From A Trace Object — bb_plot_trace_axis","text":"Generates X axis stacking track plots top .","code":""},{"path":"/reference/bb_plot_trace_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot The X Axis From A Trace Object — bb_plot_trace_axis","text":"","code":"bb_plot_trace_axis(trace, xtitle = NULL)"},{"path":"/reference/bb_plot_trace_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot The X Axis From A Trace Object — bb_plot_trace_axis","text":"trace Trace object. xtitle optional title X axis.  Defaults  genome chromosome.","code":""},{"path":"/reference/bb_plot_trace_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot The Trace Data From A Trace Object — bb_plot_trace_data","title":"Plot The Trace Data From A Trace Object — bb_plot_trace_data","text":"function generate line plot tracklike genomic data.  pulls data Trace object trace_data slot.  Check numeric categorical variables available plotting using Trace.data.","code":""},{"path":"/reference/bb_plot_trace_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot The Trace Data From A Trace Object — bb_plot_trace_data","text":"","code":"bb_plot_trace_data(   trace,   yvar = \"coverage\",   yvar_label = \"Coverage\",   facet_var = \"group\",   color_var = \"group\",   pal = NULL,   legend_pos = \"none\",   group_filter = NULL,   group_variable = \"group\" )"},{"path":"/reference/bb_plot_trace_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot The Trace Data From A Trace Object — bb_plot_trace_data","text":"trace Trace object yvar trace_data metadata variable become y axis.  Defaults \"coverage\".  Must numeric. yvar_label y-axis label coverage track.  Defaults \"Coverage\". facet_var trace_data metadata variable describing data facets.  placed separate horizontal track value printed left. Optional recommended.  Defaults \"group\". color_var variable color groups traces .  Optional recommended.  Defaults \"group\". pal color palette.  Can also added fact. legend_pos Color legend position. Can also added fact.  Defaults \"none\". group_filter Optional metadatavariable filter trace data .  imported signac/seurat objects, value defaults \"group\", default .  However constructed manually, may wish apply filtering another variable.  , apply parameter.","code":""},{"path":"/reference/bb_plot_trace_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot The Feature Data From A Trace Object — bb_plot_trace_feature","title":"Plot The Feature Data From A Trace Object — bb_plot_trace_feature","text":"function generate feature plot tracklike genomic data.","code":""},{"path":"/reference/bb_plot_trace_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot The Feature Data From A Trace Object — bb_plot_trace_feature","text":"","code":"bb_plot_trace_feature(trace, type_to_plot)"},{"path":"/reference/bb_plot_trace_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot The Feature Data From A Trace Object — bb_plot_trace_feature","text":"trace Trace object.  metadata column features slot named \"type\". type_to_plot Value type variable plot.  come Y-axis label.","code":""},{"path":"/reference/bb_plot_trace_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot The Link Data From A Trace Object — bb_plot_trace_links","title":"Plot The Link Data From A Trace Object — bb_plot_trace_links","text":"function generate link plot tracklike genomic data.  Links automatically trimmed lie entirely within plot range.  additional, optional score cutoff can provided.","code":""},{"path":"/reference/bb_plot_trace_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot The Link Data From A Trace Object — bb_plot_trace_links","text":"","code":"bb_plot_trace_links(   trace,   cutoff = 0,   link_low_color = \"grey80\",   link_high_color = \"red3\",   link_range = c(0, 1) )"},{"path":"/reference/bb_plot_trace_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot The Link Data From A Trace Object — bb_plot_trace_links","text":"trace Trace object containing valid links slot. cutoff Score cutoff link plotting.  Defaults 0. link_low_color color link value 0, default = grey80 link_high_color color link value 1, default = red3 link_range range color scale terms link values, default = c(0,1)","code":""},{"path":"/reference/bb_plot_trace_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot The Gene Model From A Trace Object — bb_plot_trace_model","title":"Plot The Gene Model From A Trace Object — bb_plot_trace_model","text":"function generate plot underlying gene model.  genes plotted automatically selected according genome build plot range. function automatically picks longest principle transcript show.  Optionally, alternative transcripts can shown specifying select_transcript argument.  must ensembl transcript identifier lying within plot range.","code":""},{"path":"/reference/bb_plot_trace_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot The Gene Model From A Trace Object — bb_plot_trace_model","text":"","code":"bb_plot_trace_model(   trace,   font_face = \"italic\",   select_transcript = NULL,   icon_fill = \"cornsilk\" )"},{"path":"/reference/bb_plot_trace_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot The Gene Model From A Trace Object — bb_plot_trace_model","text":"trace Trace object. font_face Font face option use.  Default = \"italic\". select_transcript Optional selected transcript(s) plot.","code":""},{"path":"/reference/bb_plot_trace_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot The peak Data From A Trace Object — bb_plot_trace_peaks","title":"Plot The peak Data From A Trace Object — bb_plot_trace_peaks","text":"function generate peak plot tracklike genomic data.","code":""},{"path":"/reference/bb_plot_trace_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot The peak Data From A Trace Object — bb_plot_trace_peaks","text":"","code":"bb_plot_trace_peaks(trace, fill_color = \"grey60\")"},{"path":"/reference/bb_plot_trace_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot The peak Data From A Trace Object — bb_plot_trace_peaks","text":"trace Trace object. fill_color color fill peak graphics .  Defaults grey60.","code":""},{"path":"/reference/bb_plotfootprint.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot motif footprinting results — bb_plotfootprint","title":"Plot motif footprinting results — bb_plotfootprint","text":"Plot motif footprinting results","code":""},{"path":"/reference/bb_plotfootprint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot motif footprinting results — bb_plotfootprint","text":"","code":"bb_plotfootprint(   object,   features,   alt_main_title = NULL,   alt_color_title = NULL,   legend_pos = \"right\",   colorscale = NULL,   assay = NULL,   group.by = NULL,   idents = NULL,   label = TRUE,   repel = TRUE,   show.expected = TRUE,   normalization = \"subtract\",   label.top = 3,   label.idents = NULL,   fontsize = 14,   linesize = 0.2 )"},{"path":"/reference/bb_plotfootprint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot motif footprinting results — bb_plotfootprint","text":"object Seurat object features vector features plot alt_main_title Alternative title main plot.  Accepts markdown. alt_color_title Alternative title color scale legend_pos Position place legend colorscale Named vector colors apply top plot. assay Name assay use group.grouping variable idents Set identities include plot label TRUE/FALSE value control whether groups labeled. repel Repel labels show.expected Plot expected Tn5 integration frequency main footprint plot normalization Method normalize Tn5 DNA sequence bias. Options \"subtract\", \"divide\", NULL perform bias correction. label.top Number groups label based highest accessibility motif flanking region. label.idents Vector identities label. supplied, fontsize Theme font size linesize Size draw footprint lines label.top ignored.","code":""},{"path":"/reference/bb_print_full_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Print out a stats report — bb_print_full_stats","title":"Print out a stats report — bb_print_full_stats","text":"Print stats report","code":""},{"path":"/reference/bb_print_full_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print out a stats report — bb_print_full_stats","text":"","code":"bb_print_full_stats(   data,   classification_variable,   numeric_variable,   test_type = c(\"Student\", \"Welch\", \"Wilcox\"),   output = NULL )"},{"path":"/reference/bb_print_full_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print out a stats report — bb_print_full_stats","text":"data Tibble tidy data format.  Must contain filtered contain 2 levels \"classification_variable\" comparisons. classification_variable Column containing class variable numeric_variable column containing numeric values summarize compare test_type Must one \"Student\", \"Welch\", \"Wilcox\" output Output file; null prints screen.","code":""},{"path":"/reference/bb_print_full_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print out a stats report — bb_print_full_stats","text":"text file","code":""},{"path":"/reference/bb_promoter_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate The Overlap Between Peaks and Promoters — bb_promoter_overlap","title":"Calculate The Overlap Between Peaks and Promoters — bb_promoter_overlap","text":"given GRanges object containing peaks, determine many peaks overlap promoters, many promoters overlapped peaks significance enrichment query peaks relative promoters.","code":""},{"path":"/reference/bb_promoter_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate The Overlap Between Peaks and Promoters — bb_promoter_overlap","text":"","code":"bb_promoter_overlap(query, tss = c(\"hg38_tss\", \"dr11_tss\"), width = 200)"},{"path":"/reference/bb_promoter_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate The Overlap Between Peaks and Promoters — bb_promoter_overlap","text":"query GRanges object containing peaks tss tss data base use.  Must one \"hg38_tss\" \"dr11_tss\" width width around tss evaluate.  Defaults 200 bp.","code":""},{"path":"/reference/bb_promoter_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate The Overlap Between Peaks and Promoters — bb_promoter_overlap","text":"list including overlap information binomal test results.","code":""},{"path":"/reference/bb_pseudobulk_mf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Multifactor Pseudobulk Analysis using Deseq2 — bb_pseudobulk_mf","title":"Run Multifactor Pseudobulk Analysis using Deseq2 — bb_pseudobulk_mf","text":"Use function perform Pseudbulk DGE analysis.","code":""},{"path":"/reference/bb_pseudobulk_mf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Multifactor Pseudobulk Analysis using Deseq2 — bb_pseudobulk_mf","text":"","code":"bb_pseudobulk_mf(   cds,   pseudosample_table,   design_formula,   count_filter = 10,   result_recipe = \"default\",   test = \"Wald\",   reduced = NULL )"},{"path":"/reference/bb_pseudobulk_mf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Multifactor Pseudobulk Analysis using Deseq2 — bb_pseudobulk_mf","text":"cds cell data set object subset analyze pseudosample_table tibble indicating sample groupings analysis.  include 1.) Unique sample identifiers 2.) sample-level cell metadata wish include regression model 3.) Cell-level metadata may wish include clusters partitions.  Values coerced factors. design_formula regression-style formula analysis.  form \"~ variable1 + variable2 + ... final_variable\". default behavior calculate results according final_variable design_formula preceding variables co-variates.  reference class chosen according alphabetical order.  behavior can modified specifying result_recipe argument. count_filter minimum number counts required across pseudosamples order keep gene analysis. result_recipe See default recipe.  Alternatively, supply 3-element vector form c(\"variable\", \"experimental_level\",\"reference_or_control_level\")","code":""},{"path":"/reference/bb_pseudobulk_mf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Multifactor Pseudobulk Analysis using Deseq2 — bb_pseudobulk_mf","text":"list results pseudobulk analysis","code":""},{"path":"/reference/bb_pseudotime.html","id":null,"dir":"Reference","previous_headings":"","what":"Learn Graph and Calculate Pseudotime — bb_pseudotime","title":"Learn Graph and Calculate Pseudotime — bb_pseudotime","text":"function determines gene expression trajectory using learn_graph monocle3 calculates pseudotime dimensions along trajectory using order_cells.  2 functions wrapped 1.  Usually adjust parameters learn_graph possible exception close_loop use_partition also available function defaults.  need fine-tune trajectory, use monocle3::learn_graph cds object first run function calculate pseudotime.  graph learning repeated object unless force_graph set TRUE. just want look trajectory graph calculate pseudotime, change calculate_pseudotime FALSE, run monocle3::learn_graph. pseudotime values calculated, handled differently monocle3.  function, copied hidden CDS slot made explicit cell metadata column.  Pseudotime needs starting point anchor.  interactive option monocle3.  identify starting point, identify cell metadata variable provide cluster_variable.  identify cohesive group cells UMAP space leiden cluster, louvain cluster partition.  provide value corresponding cluster interest cluster_value.  function start pseudotime cell closest graph node cluster.  pseudotime value column named automatically composite cluster_variable cluster_value parameters.","code":""},{"path":"/reference/bb_pseudotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learn Graph and Calculate Pseudotime — bb_pseudotime","text":"","code":"bb_pseudotime(   cds,   calculate_pseudotime = TRUE,   cluster_variable,   cluster_value,   use_partition = TRUE,   close_loop = TRUE,   force_graph = FALSE )"},{"path":"/reference/bb_pseudotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learn Graph and Calculate Pseudotime — bb_pseudotime","text":"cds cell data set object calculate pseudotime upon.  yet accept seurat objects. calculate_pseudotime Logical, whether calculate pseudotime dimension.  false, run learn_graph, Default: TRUE cluster_variable cell metadata column pseudotime = 0 cell selected. cluster_value value cluster_variable identifies cluster.  cell closest root node closest center cluster pseudotime 0. use_partition Logical; TRUE, learn_graph construct trajectories within partitions.  FALSE, connect partitions, Default: TRUE close_loop Logical; Whether learn_graph close looping trajectories, Default: TRUE force_graph Logical; TRUE, function recalculate graph., Default: FALSE","code":""},{"path":"/reference/bb_pseudotime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Learn Graph and Calculate Pseudotime — bb_pseudotime","text":"cell data set","code":""},{"path":[]},{"path":"/reference/bb_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to run qc tests on cds objects. — bb_qc","title":"A function to run qc tests on cds objects. — bb_qc","text":"function run qc tests cds objects.","code":""},{"path":"/reference/bb_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to run qc tests on cds objects. — bb_qc","text":"","code":"bb_qc(   cds,   cds_name,   genome = c(\"human\", \"mouse\", \"zfish\"),   max_mito = NULL,   min_log_detected = NULL )"},{"path":"/reference/bb_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to run qc tests on cds objects. — bb_qc","text":"cds cell data set object run qc functions cds_name name cds genome species use identifying mitochondrial genes. Choose \"human\", \"mouse\", \"zfish\", \"human_mouse\" pdx. max_mito Manual cutoff mitochondrial percentage.  May strict, .e. lower, automated cutoff less strict,  Default: NULL min_log_detected Manual cutoff log detected features.  May strict, .e. higher, automated cutoff less strict, Default: NULL","code":""},{"path":"/reference/bb_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to run qc tests on cds objects. — bb_qc","text":"list qc objects","code":""},{"path":"/reference/bb_read_bam.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Bam Files — bb_read_bam","title":"Read Bam Files — bb_read_bam","text":"function reads single sorted, dedupliated paired end bam file returns either GRanges object GenomicAlignmentPairs object.  former requires much less memory cost retaining outer boundaries read.  read 1 start S1 end E1 read 2 start S2 end S2, Granges object spans S1-E2.","code":""},{"path":"/reference/bb_read_bam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Bam Files — bb_read_bam","text":"","code":"bb_read_bam(   sortedBam,   genome = c(\"hg38\", \"danRer11\"),   return_type = c(\"GenomicAlignmentPairs\", \"GRanges\") )"},{"path":"/reference/bb_read_bam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Bam Files — bb_read_bam","text":"sortedBam File path bam file load. genome One \"hg38\" \"danRer11\".  used clean granges object necessary. return_type Type object return.  GRanges smaller.  GenomicAlignmentPairs retains read pair data.","code":""},{"path":"/reference/bb_read_bam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Bam Files — bb_read_bam","text":"object according return_type.","code":""},{"path":"/reference/bb_read_narrowpeak.html","id":null,"dir":"Reference","previous_headings":"","what":"A Function to Read In Narrow Peaks Files — bb_read_narrowpeak","title":"A Function to Read In Narrow Peaks Files — bb_read_narrowpeak","text":"function reads narrow peaks file (BED6 + 4 format) turns GRanges object.","code":""},{"path":"/reference/bb_read_narrowpeak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Function to Read In Narrow Peaks Files — bb_read_narrowpeak","text":"","code":"bb_read_narrowpeak(file)"},{"path":"/reference/bb_read_narrowpeak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Function to Read In Narrow Peaks Files — bb_read_narrowpeak","text":"file file path narrow peaks file.","code":""},{"path":"/reference/bb_read_narrowpeak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Function to Read In Narrow Peaks Files — bb_read_narrowpeak","text":"GRanges object","code":""},{"path":"/reference/bb_rejoin.html","id":null,"dir":"Reference","previous_headings":"","what":"Rejoin qc and doubletfinder data to a cds object — bb_rejoin","title":"Rejoin qc and doubletfinder data to a cds object — bb_rejoin","text":"Rejoin qc doubletfinder data cds object","code":""},{"path":"/reference/bb_rejoin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rejoin qc and doubletfinder data to a cds object — bb_rejoin","text":"","code":"bb_rejoin(cds, qc_data, doubletfinder_data)"},{"path":"/reference/bb_rejoin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rejoin qc and doubletfinder data to a cds object — bb_rejoin","text":"cds cell data set object rejoin qc_data table cell barcodes qc data.  Can extracted bb_qc purrr::map(qc_result, 1) doubletfinder_data doubletfinder result tbl","code":""},{"path":"/reference/bb_rejoin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rejoin qc and doubletfinder data to a cds object — bb_rejoin","text":"cell data set object qc doubletfinder data","code":""},{"path":"/reference/bb_remove_dupes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove rows that have duplicates in a given column — bb_remove_dupes","title":"Remove rows that have duplicates in a given column — bb_remove_dupes","text":"Remove rows duplicates given column","code":""},{"path":"/reference/bb_remove_dupes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove rows that have duplicates in a given column — bb_remove_dupes","text":"","code":"bb_remove_dupes(data, column)"},{"path":"/reference/bb_remove_dupes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove rows that have duplicates in a given column — bb_remove_dupes","text":"data tibble. column column deduplicate","code":""},{"path":"/reference/bb_remove_dupes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove rows that have duplicates in a given column — bb_remove_dupes","text":"deduplicated tibble","code":""},{"path":"/reference/bb_rowmeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Feature/Gene Metadata — bb_rowmeta","title":"Get Feature/Gene Metadata — bb_rowmeta","text":"Take cell_data_set Seurat object return gene/feature metadata form tibble.  RNA used default assay.","code":""},{"path":"/reference/bb_rowmeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Feature/Gene Metadata — bb_rowmeta","text":"","code":"bb_rowmeta(   obj,   row_name = \"feature_id\",   experiment_type = \"Gene Expression\",   assay = \"RNA\",   cds = NULL )"},{"path":"/reference/bb_rowmeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Feature/Gene Metadata — bb_rowmeta","text":"obj cell_data_set Seurat object row_name Optional name provide feature unique identifier, Default: 'feature_id' experiment_type experiment type display.  Applies cds objects.  Commonly either \"Gene Expression\" \"Antibody Capture\", Default: 'Gene Expression' assay Seurat object, th feature assay return.  CDS objects alternative experiments supported, Default: 'RNA' cds Provided compatibility prior versions, Default: NULL","code":""},{"path":"/reference/bb_rowmeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Feature/Gene Metadata — bb_rowmeta","text":"tibble.","code":""},{"path":"/reference/bb_rowmeta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Feature/Gene Metadata — bb_rowmeta","text":"value supplied cds, warning issued function pass value cds obj.","code":""},{"path":"/reference/bb_seurat_anno.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate automated cell labelings with Seurat — bb_seurat_anno","title":"A function to generate automated cell labelings with Seurat — bb_seurat_anno","text":"function generate automated cell labelings Seurat","code":""},{"path":"/reference/bb_seurat_anno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate automated cell labelings with Seurat — bb_seurat_anno","text":"","code":"bb_seurat_anno(cds, reference)"},{"path":"/reference/bb_seurat_anno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate automated cell labelings with Seurat — bb_seurat_anno","text":"cds cell data set object reference Seurat reference data.","code":""},{"path":"/reference/bb_seurat_anno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate automated cell labelings with Seurat — bb_seurat_anno","text":"modified cds Seurat cell assignments.","code":""},{"path":"/reference/bb_singlecell_anno.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a CDS by Label Transfer — bb_cds_anno","title":"Annotate a CDS by Label Transfer — bb_cds_anno","text":"Use function transfer cell labels one single cell dataset another.  cds provided either reference query, converted seurat object labels transferred query anchor finding.  assignments form new cds column name predicted.\"column name reference\".  unique first application function query dataset.  However, running queries 1 reference data set possible unintentionally generate column name overwrite first assignment column.  function checks aborts recommendation supply unique id unique_id parameter.","code":""},{"path":"/reference/bb_singlecell_anno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a CDS by Label Transfer — bb_cds_anno","text":"","code":"bb_cds_anno(query_cds, ref, transfer_col, unique_id = NULL)"},{"path":"/reference/bb_singlecell_anno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a CDS by Label Transfer — bb_cds_anno","text":"query_cds single cell data set wish annotate.  Must CDS. ref reference single cell data set.  May either CDS Seurat object. transfer_col column reference data set provides labels. unique_id unique identifier add column transferred labels. Default NULL recommended provide informative label annotating one reference.  Default NULL.","code":""},{"path":"/reference/bb_singlecell_anno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate a CDS by Label Transfer — bb_cds_anno","text":"CDS two new cell metadata columns","code":""},{"path":"/reference/bb_split_atac.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Out Peaks Data — bb_split_atac","title":"Split Out Peaks Data — bb_split_atac","text":"Extracts Peaks data 10X counts matrix feature metadata saves alternate experiment assigned CDS.","code":""},{"path":"/reference/bb_split_atac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Out Peaks Data — bb_split_atac","text":"","code":"bb_split_atac(cds)"},{"path":"/reference/bb_split_atac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Out Peaks Data — bb_split_atac","text":"cds CDS split Peaks data ","code":""},{"path":"/reference/bb_split_atac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Out Peaks Data — bb_split_atac","text":"cell data set","code":""},{"path":"/reference/bb_split_citeseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Antibody Capture Data into Alt Experiment — bb_split_citeseq","title":"Split Antibody Capture Data into Alt Experiment — bb_split_citeseq","text":"cite-seq data together gene expression data, function move cite seq data new separate experiment.  use Seurat normalize data using CLR method store new assay.","code":""},{"path":"/reference/bb_split_citeseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Antibody Capture Data into Alt Experiment — bb_split_citeseq","text":"","code":"bb_split_citeseq(cds)"},{"path":"/reference/bb_split_citeseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Antibody Capture Data into Alt Experiment — bb_split_citeseq","text":"cds cell data set split","code":""},{"path":"/reference/bb_split_citeseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Antibody Capture Data into Alt Experiment — bb_split_citeseq","text":"new CDS","code":""},{"path":[]},{"path":"/reference/bb_tbl_to_coldata.html","id":null,"dir":"Reference","previous_headings":"","what":"A Function To Add Tibble Columns To Cell Metadata — bb_tbl_to_coldata","title":"A Function To Add Tibble Columns To Cell Metadata — bb_tbl_to_coldata","text":"Function Add Tibble Columns Cell Metadata","code":""},{"path":"/reference/bb_tbl_to_coldata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Function To Add Tibble Columns To Cell Metadata — bb_tbl_to_coldata","text":"","code":"bb_tbl_to_coldata(obj, min_tbl, join_col = \"cell_id\", cds = NULL)"},{"path":"/reference/bb_tbl_to_coldata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Function To Add Tibble Columns To Cell Metadata — bb_tbl_to_coldata","text":"obj Seurat cell data set object min_tbl tibble containing columns want add plus one column joining.  Cell IDs may duplicated missing cells ok; values replaced NA. join_col column min_tbl containing join information cds rowData. Defaults \"cell_id\". cds Retained backwards compatibility.  supplied, generate warning pass argument obj.  Default = NULL","code":""},{"path":"/reference/bb_tbl_to_coldata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Function To Add Tibble Columns To Cell Metadata — bb_tbl_to_coldata","text":"object class","code":""},{"path":"/reference/bb_tbl_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a wide-form tibble a matrix — bb_tbl_to_matrix","title":"Convert a wide-form tibble a matrix — bb_tbl_to_matrix","text":"Convert wide-form tibble matrix","code":""},{"path":"/reference/bb_tbl_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a wide-form tibble a matrix — bb_tbl_to_matrix","text":"","code":"bb_tbl_to_matrix(data)"},{"path":"/reference/bb_tbl_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a wide-form tibble a matrix — bb_tbl_to_matrix","text":"data wide form tibble convert matrix.  first column become rownames.","code":""},{"path":"/reference/bb_tbl_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a wide-form tibble a matrix — bb_tbl_to_matrix","text":"matrix","code":""},{"path":"/reference/bb_tbl_to_rowdata.html","id":null,"dir":"Reference","previous_headings":"","what":"A Function To Add Tibble Columns To Feature Metadata — bb_tbl_to_rowdata","title":"A Function To Add Tibble Columns To Feature Metadata — bb_tbl_to_rowdata","text":"Function Add Tibble Columns Feature Metadata","code":""},{"path":"/reference/bb_tbl_to_rowdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Function To Add Tibble Columns To Feature Metadata — bb_tbl_to_rowdata","text":"","code":"bb_tbl_to_rowdata(   obj,   assay = \"RNA\",   min_tbl,   join_col = \"feature_id\",   cds = NULL )"},{"path":"/reference/bb_tbl_to_rowdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Function To Add Tibble Columns To Feature Metadata — bb_tbl_to_rowdata","text":"obj Seurat cell data set object assay assay add metadata column, Default = RNA min_tbl tibble containing columns want add plus one column joining.  Features duplicated missing features ok replaced NA. join_col column min_tbl containing join information cds rowData. Defaults \"feature_id\". cds Retained backwards compatibility.  supplied, generate warning pass argument obj.  Default = NULL","code":""},{"path":"/reference/bb_tbl_to_rowdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Function To Add Tibble Columns To Feature Metadata — bb_tbl_to_rowdata","text":"object class","code":""},{"path":"/reference/bb_triplecluster.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate clusters from scRNA-seq data — bb_triplecluster","title":"A function to generate clusters from scRNA-seq data — bb_triplecluster","text":"Based Monocle3's Partitions, Leiden, Louvain clustering methods.  Implemented mostly default values.  Seurat objects converted cell_data_set objects clustering.  function produces list top markers cluster type returns assignments original object new cell metadata columnts.","code":""},{"path":"/reference/bb_triplecluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate clusters from scRNA-seq data — bb_triplecluster","text":"","code":"bb_triplecluster(   obj,   n_top_markers = 50,   outfile = NULL,   n_cores = 8,   cds = NULL )"},{"path":"/reference/bb_triplecluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate clusters from scRNA-seq data — bb_triplecluster","text":"obj Seurat cell_data_set object n_top_markers Number top markers identify per cell group, Default: 50 outfile Name csv file hold top marker results.  null, place \"top_markers.csv\" working directory, Default: NULL n_cores Number processor cores use, Default: 8 cds Provided backwards compatibility existing code.  value supplied transferred obj warning message emitted, Default: NULL","code":""},{"path":"/reference/bb_triplecluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate clusters from scRNA-seq data — bb_triplecluster","text":"modified Seurat cell_data_set object","code":""},{"path":"/reference/bb_unblind_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Rejoin Blinded Scores to Original File Names — bb_unblind_images","title":"Rejoin Blinded Scores to Original File Names — bb_unblind_images","text":"rejoin scoresheet blinded key produce unblinded results.  change names either files, provided arguments function.  Otherwise keyfile scorefile optional.","code":""},{"path":"/reference/bb_unblind_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rejoin Blinded Scores to Original File Names — bb_unblind_images","text":"","code":"bb_unblind_images(   directory,   keyfile = \"blinding_key.csv\",   scorefile = \"scoresheet.csv\",   analysis_file,   file_column )"},{"path":"/reference/bb_unblind_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rejoin Blinded Scores to Original File Names — bb_unblind_images","text":"directory linux-style filepath folder containing scoresheet blinded key. keyfile Optional:  filename key file.  Defaults \"blinding_key.csv\". scorefile Optional:  filename score file.  Defaults \"scoresheet.csv\". analysis_file Complete file path unblinded main analysis sheet.  function left_join analysis_file unblinded results.  process, necessarily convert windows file paths linux-style file paths.  Samples included blinding return NA values added columns.  New data columns added scoresheet unique relative analysis_file. file_column column analysis_file containing file paths files blinded.","code":""},{"path":"/reference/bb_unblind_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rejoin Blinded Scores to Original File Names — bb_unblind_images","text":"nothing","code":""},{"path":"/reference/bb_var_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to generate a UMAP with colors mapped to colData variables — bb_var_umap","title":"A function to generate a UMAP with colors mapped to colData variables — bb_var_umap","text":"function generate UMAP colors mapped colData variables","code":""},{"path":"/reference/bb_var_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to generate a UMAP with colors mapped to colData variables — bb_var_umap","text":"","code":"bb_var_umap(   obj,   var,   assay = \"RNA\",   value_to_highlight = NULL,   foreground_alpha = 1,   legend_pos = \"right\",   cell_size = 0.5,   alt_stroke_color = NULL,   legend_title = NULL,   plot_title = NULL,   palette = NULL,   alt_dim_x = NULL,   alt_dim_y = NULL,   overwrite_labels = FALSE,   group_label_size = 3,   alt_label_col = NULL,   shape = 21,   nbin = 100,   facet_by = NULL,   sample_equally = FALSE,   rasterize = FALSE,   raster_dpi = 300,   show_trajectory_graph = FALSE,   trajectory_graph_color = \"grey28\",   trajectory_graph_segment_size = 0.75,   label_root_node = FALSE,   pseudotime_dim = var,   label_principal_points = FALSE,   graph_label_size = 2,   cds = NULL,   outline_cluster = FALSE,   outline_color = \"black\",   outline_size = 1,   outline_type = \"solid\",   outline_alpha = 1,   ...,   man_text_df = NULL,   text_geom = \"text\" )"},{"path":"/reference/bb_var_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to generate a UMAP with colors mapped to colData variables — bb_var_umap","text":"obj Seurat cell data set object var variable map colors .  Special exceptions \"density\", \"local_n\" \"log_local_n\" calculate 2 d kernel density estimate binned cell counts maps color scale. assay gene expression assay draw reduced dimensions .  Default \"RNA\".  anything cell_data_set objects. value_to_highlight Option highlight single value foreground_alpha Alpha value foreground points legend_pos Legend position cell_size Cell point size alt_stroke_color Alternative color data point stroke legend_title Title legend plot_title Main title plot palette Color palette use.  \"Rcolorbrewer\", \"Viridis\" builtin options.  Otherwise provide manual values. alt_dim_x Alternate/reference dimensions plot . alt_dim_y Alternate/reference dimensions plot . overwrite_labels Whether overwrite variable value labels group_label_size Size overwritten labels alt_label_col Alternate column label cells shape Shape data points nbin Number bins using var %% c(\"density\". \"local_n\", \"log_local_n\") facet_by Variable variables facet . sample_equally Whether downsample number cells plot.  Default FALSE . rasterize Whether render graphical layer raster image.  Default FALSE. raster_dpi rasterize DPI used.  Default = 300. show_trajectory_graph Whether render principal graph trajectory. Requires learn_graph() called cds. trajectory_graph_color color used plotting trajectory graph. trajectory_graph_segment_size size line segments used plotting trajectory graph. label_root_node Logical; whether label root node selected pseudotime trajectory.  function requires valid pseudotime column identified, usually value \"var\" argument form \"pseudotime_cluster_value\".  wish use var color cells way, pseudotime_dim argument needs supplied correct pseudotime dimension pick root node . pseudotime_dim alternative column pick pseudoetime root node , supplied var. label_principal_points Logical indicating whether label roots, leaves, branch points principal point names. useful order_cells choose_graph_segments non-interactive mode. graph_label_size large make branch, root, leaf labels. cds Provided backward compatibility prior versions.  value supplied, warning emitted value transferred obj argument, Default: NULL ... Additional params facetting. man_text_df data frame form text_x = numeric_vector, text_y = numeric_vector, label = character_vector manually placing text labels.","code":""},{"path":"/reference/bb_var_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to generate a UMAP with colors mapped to colData variables — bb_var_umap","text":"ggplot","code":""},{"path":"/reference/dMcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Casts or pivots a long data frame into a wide sparse matrix — dMcast","title":"Casts or pivots a long data frame into a wide sparse matrix — dMcast","text":"Similar function dcast, produces sparse Matrix output. Sparse matrices beneficial application outputs often wide sparse. Conceptually similar pivot operation.","code":""},{"path":"/reference/dMcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Casts or pivots a long data frame into a wide sparse matrix — dMcast","text":"","code":"dMcast(   data,   formula,   fun.aggregate = \"sum\",   value.var = NULL,   as.factors = FALSE,   factor.nas = TRUE,   drop.unused.levels = TRUE )"},{"path":"/reference/dMcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Casts or pivots a long data frame into a wide sparse matrix — dMcast","text":"data data frame formula casting formula, see details specifics. fun.aggregate name aggregation function.  Defaults 'sum' value.var name column stores values aggregated numerics .factors TRUE, treat columns factors, including factor.nas TRUE, treat factors NAs new levels.  Otherwise, rows NAs receive zeroes columns factor drop.unused.levels factors unused levels dropped? Defaults TRUE, contrast model.matrix","code":""},{"path":"/reference/dMcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Casts or pivots a long data frame into a wide sparse matrix — dMcast","text":"sparse Matrix","code":""},{"path":"/reference/dMcast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Casts or pivots a long data frame into a wide sparse matrix — dMcast","text":"Casting formulas slightly different dcast follow conventions model.matrix. See formula details.  Briefly, left hand side ~ used grouping criteria.  can either single variable, group variables linked using :.  right hand side specifies columns . Unlike dcast, using + operator append values variable additional columns.  useful things one-hot encoding.  Using : combine columns interactions.","code":""},{"path":[]},{"path":"/reference/data_median_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate median +/- se stat object for jitter ggplot — data_median_se","title":"Generate median +/- se stat object for jitter ggplot — data_median_se","text":"Generate median +/- se stat object jitter ggplot","code":""},{"path":"/reference/data_median_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate median +/- se stat object for jitter ggplot — data_median_se","text":"","code":"data_median_se(x)"},{"path":"/reference/data_median_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate median +/- se stat object for jitter ggplot — data_median_se","text":"x numeric vector","code":""},{"path":"/reference/data_summary_mean_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate mean +/- sd stat object for jitter ggplot — data_summary_mean_sd","title":"Generate mean +/- sd stat object for jitter ggplot — data_summary_mean_sd","text":"Generate mean +/- sd stat object jitter ggplot","code":""},{"path":"/reference/data_summary_mean_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate mean +/- sd stat object for jitter ggplot — data_summary_mean_sd","text":"","code":"data_summary_mean_sd(x)"},{"path":"/reference/data_summary_mean_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate mean +/- sd stat object for jitter ggplot — data_summary_mean_sd","text":"x numeric vector","code":""},{"path":"/reference/data_summary_mean_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate mean +/- se stat object for jitter ggplot — data_summary_mean_se","title":"Generate mean +/- se stat object for jitter ggplot — data_summary_mean_se","text":"Generate mean +/- se stat object jitter ggplot","code":""},{"path":"/reference/data_summary_mean_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate mean +/- se stat object for jitter ggplot — data_summary_mean_se","text":"","code":"data_summary_mean_se(x)"},{"path":"/reference/data_summary_mean_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate mean +/- se stat object for jitter ggplot — data_summary_mean_se","text":"x numeric vector","code":""},{"path":"/reference/data_summary_median_iqr.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate median +/- iqr stat object for jitter ggplot — data_summary_median_iqr","title":"Generate median +/- iqr stat object for jitter ggplot — data_summary_median_iqr","text":"Generate median +/- iqr stat object jitter ggplot","code":""},{"path":"/reference/data_summary_median_iqr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate median +/- iqr stat object for jitter ggplot — data_summary_median_iqr","text":"","code":"data_summary_median_iqr(x)"},{"path":"/reference/data_summary_median_iqr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate median +/- iqr stat object for jitter ggplot — data_summary_median_iqr","text":"x numeric vector","code":""},{"path":"/reference/data_summary_median_mad.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate median +/- mad stat object for jitter ggplot — data_summary_median_mad","title":"Generate median +/- mad stat object for jitter ggplot — data_summary_median_mad","text":"Generate median +/- mad stat object jitter ggplot","code":""},{"path":"/reference/data_summary_median_mad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate median +/- mad stat object for jitter ggplot — data_summary_median_mad","text":"","code":"data_summary_median_mad(x)"},{"path":"/reference/data_summary_median_mad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate median +/- mad stat object for jitter ggplot — data_summary_median_mad","text":"x numeric vector","code":""},{"path":"/reference/filter_cds.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a CDS — filter_cds","title":"Filter a CDS — filter_cds","text":"function provides pipe-friendly method filter cds objects.","code":""},{"path":"/reference/filter_cds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a CDS — filter_cds","text":"","code":"filter_cds(cds, cells = \"all\", genes = \"all\")"},{"path":"/reference/filter_cds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a CDS — filter_cds","text":"cds CDS filter. cells Optional:  tibble cell metadata cells wish keep.  Use bb_cellmeta(). Default: '' genes Optional:  tibble gene metadata genes wish keep.  Use bb_rowmeta().  Default: ''","code":""},{"path":"/reference/filter_cds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a CDS — filter_cds","text":"filtered CDS","code":""},{"path":"/reference/geom_split_violin.html","id":null,"dir":"Reference","previous_headings":"","what":"geom_split_violin — geom_split_violin","title":"geom_split_violin — geom_split_violin","text":"create split violin geom","code":""},{"path":"/reference/geom_split_violin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geom_split_violin — geom_split_violin","text":"","code":"geom_split_violin(   mapping = NULL,   data = NULL,   stat = \"ydensity\",   position = \"identity\",   ...,   draw_quantiles = NULL,   trim = TRUE,   scale = \"area\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_split_violin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geom_split_violin — geom_split_violin","text":"mapping Set aesthetitc mappings, Default: NULL data Data display, Default: NULL stat Statistic plot, Default: 'ydensity' position Position, Default: 'identity' draw_quantiles Quantiles draw, Default: NULL trim Trim ends?, Default: TRUE scale Analogous violin scale, Default: 'area' na.rm Default: FALSE show.legend Default: NA inherit.aes Default: TRUE","code":""},{"path":"/reference/granges_to_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a GRanges Object as a Character Vector For Inclusion in Genebank File — granges_to_features","title":"Format a GRanges Object as a Character Vector For Inclusion in Genebank File — granges_to_features","text":"function takes GRanges object returns character vector.  4 metadata fields GRanges object included:  locus_tag, type, fwdcolor revcolor.  Locus_tag must unique.  checked Ape constructor.  function mostly used internally construction FEATURE-setting instances Ape class.","code":""},{"path":"/reference/granges_to_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a GRanges Object as a Character Vector For Inclusion in Genebank File — granges_to_features","text":"","code":"granges_to_features(gr)"},{"path":"/reference/granges_to_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a GRanges Object as a Character Vector For Inclusion in Genebank File — granges_to_features","text":"gr GRanges object.","code":""},{"path":"/reference/granges_to_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a GRanges Object as a Character Vector For Inclusion in Genebank File — granges_to_features","text":"character vector.","code":""},{"path":"/reference/grapes-notin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Operators — %notin%","title":"Operators — %notin%","text":"Operators","code":""},{"path":"/reference/grapes-notin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Operators — %notin%","text":"","code":"... %notin% NA"},{"path":"/reference/merge.Matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Merges two Matrices or matrix-like objects — merge.Matrix","title":"Merges two Matrices or matrix-like objects — merge.Matrix","text":"Implementation merge Matrix.  explicitly calling merge.Matrix also work matrix, data.frame, vector objects much faster alternative built-merge.","code":""},{"path":"/reference/merge.Matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merges two Matrices or matrix-like objects — merge.Matrix","text":"","code":"merge.Matrix(   x,   y,   by.x,   by.y,   all.x = TRUE,   all.y = TRUE,   out.class = class(x)[1],   fill.x = ifelse(is(x, \"sparseMatrix\"), FALSE, NA),   fill.y = fill.x,   ... )  join.Matrix(   x,   y,   by.x,   by.y,   all.x = TRUE,   all.y = TRUE,   out.class = class(x)[1],   fill.x = ifelse(is(x, \"sparseMatrix\"), FALSE, NA),   fill.y = fill.x,   ... )"},{"path":"/reference/merge.Matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merges two Matrices or matrix-like objects — merge.Matrix","text":"x, y Matrix matrix-like object .x vector indicating names match Matrix x .y vector indicating names match Matrix y .x logical; TRUE, value x included even matching values y .y logical; TRUE, value y included even matching values x .class class output object.  Defaults class x. Note output classes possible due R coercion capabilities, converting character matrix Matrix. fill.x, fill.y value put merged columns match. Defaults 0/FALSE sparse matrices order preserve sparsity, NA classes ... arguments passed methods.  Currently ignored","code":""},{"path":"/reference/merge.Matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merges two Matrices or matrix-like objects — merge.Matrix","text":"#' .x/.y correspond four types database joins following way: left .x=TRUE, .y=FALSE right .x=FALSE, .y=TRUE inner .x=FALSE, .y=FALSE full .x=TRUE, .y=TRUE Note NA values match NA values.","code":""},{"path":"/reference/normalize_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Noramalize a Data Table by Group and Batch — normalize_batch","title":"Noramalize a Data Table by Group and Batch — normalize_batch","text":"Often data table repeats batches experiment.  effective way control batch effects normalize data batch control group present experiments.  use function, provide data table, identify column holding experimental group data, identity control group normalize , column holding batch data, column holding numerical data normalize.  Also select function average (mean median).  function return data table three new columns:  average control group batch, fold change observation relative batch average log2-transformed fold change.  function pipe-friendly.","code":""},{"path":"/reference/normalize_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Noramalize a Data Table by Group and Batch — normalize_batch","text":"","code":"normalize_batch(   data,   group_col,   norm_group,   batch_col,   data_col,   fun = c(\"mean\", \"median\") )"},{"path":"/reference/normalize_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Noramalize a Data Table by Group and Batch — normalize_batch","text":"data tibble group_col column containing experimental group identifier norm_group experimental group want normalize across batches batch_col column containing batch identifier data_col column data fun averaging function use, Default: c(\"mean\", \"median\")","code":""},{"path":"/reference/normalize_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Noramalize a Data Table by Group and Batch — normalize_batch","text":"tibble new columns indicating batch normalization group average, fold change observation relative batch average log2 fold change","code":""},{"path":[]},{"path":"/reference/rBind.fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine matrixes by row, fill in missing columns — rBind.fill","title":"Combine matrixes by row, fill in missing columns — rBind.fill","text":"rbinds list Matrix matrix like objects, filling missing columns.","code":""},{"path":"/reference/rBind.fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine matrixes by row, fill in missing columns — rBind.fill","text":"","code":"rBind.fill(x, ..., fill = NULL, out.class = class(rbind(x, x))[1])"},{"path":"/reference/rBind.fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine matrixes by row, fill in missing columns — rBind.fill","text":"x, ... Objects combine.  first argument list .. unpopulated, objects list combined. fill value fill unmatched columns .class class output object.  Defaults class x. Note output classes possible due R coercion capabilities, converting character matrix Matrix.","code":""},{"path":"/reference/rBind.fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine matrixes by row, fill in missing columns — rBind.fill","text":"single object class first input, class matrix first object one dimensional","code":""},{"path":"/reference/rBind.fill.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine matrixes by row, fill in missing columns — rBind.fill","text":"Similar rbind.fill.matrix, works Matrix well R objects.  completely agnostic class, produce object class first input (class matrix first object one dimensional). implementation recursive, can handle arbitrary number inputs, albeit inefficiently large numbers inputs. method still experimental, work cases.  data sets consist solely data frames, rbind.fill preferred.","code":""},{"path":[]},{"path":"/reference/se.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate standard error of the mean — se","title":"Calculate standard error of the mean — se","text":"Calculate standard error mean","code":""},{"path":"/reference/se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate standard error of the mean — se","text":"","code":"se(x)"},{"path":"/reference/se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate standard error of the mean — se","text":"x numeric vector","code":""},{"path":"/reference/show-Ape-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show an Ape Object — show,Ape-method","title":"Show an Ape Object — show,Ape-method","text":"Show Ape Object","code":""},{"path":"/reference/show-Ape-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show an Ape Object — show,Ape-method","text":"","code":"# S4 method for Ape show(object)"},{"path":"/reference/show-Trace-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a Trace Object — show,Trace-method","title":"Show a Trace Object — show,Trace-method","text":"Show Trace Object","code":""},{"path":"/reference/show-Trace-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a Trace Object — show,Trace-method","text":"","code":"# S4 method for Trace show(object)"},{"path":"/news/index.html","id":"blasertools-0009000","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9000","title":"blaseRtools 0.0.0.9000","text":"Made new gene dotplot function allow multifactorial plotting. Added function color cells local number bb_var_umap.","code":""},{"path":"/news/index.html","id":"blasertools-0009001","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9001","title":"blaseRtools 0.0.0.9001","text":"Made new function, bb_align, calculates aligned umap coordinates. inserted internal dimension slot CDS object. Prealignment coordinates added new cell metadata columns.","code":""},{"path":"/news/index.html","id":"blasertools-0009002","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9002","title":"blaseRtools 0.0.0.9002","text":"Fixed bug bb_var_umap local_n log_local_n plotting faceting 1 dimension.","code":""},{"path":"/news/index.html","id":"blasertools-0009003","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9003","title":"blaseRtools 0.0.0.9003","text":"Added option downsample faceted plots bb_var_umap function.","code":""},{"path":"/news/index.html","id":"blasertools-0009004","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9004","title":"blaseRtools 0.0.0.9004","text":"Fixed go term functions.","code":""},{"path":"/news/index.html","id":"blasertools-0009005","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9005","title":"blaseRtools 0.0.0.9005","text":"Made possible explicitly order axes bb_gene_dotplot","code":""},{"path":"/news/index.html","id":"blasertools-0009006-7","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9006-7","title":"blaseRtools 0.0.0.9006-7","text":"Edits violin plot allow automatic matching point violin.","code":""},{"path":"/news/index.html","id":"blasertools-0009008","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9008","title":"blaseRtools 0.0.0.9008","text":"reworked print stats report","code":""},{"path":"/news/index.html","id":"blasertools-0009009-10","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9009-10","title":"blaseRtools 0.0.0.9009-10","text":"changed bb_load_multi_counts compatible cellranger v6, changed qc allow pdx","code":""},{"path":"/news/index.html","id":"blasertools-0009011","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9011","title":"blaseRtools 0.0.0.9011","text":"added bb_renv_datapkg: function load binary data packages local sources","code":""},{"path":"/news/index.html","id":"blasertools-0009012","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9012","title":"blaseRtools 0.0.0.9012","text":"added bb_goenrichment back namespace; edited bb_renv_datapkg allow installation explicit binary packages","code":""},{"path":"/news/index.html","id":"blasertools-0009013---15","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9013 - 15","title":"blaseRtools 0.0.0.9013 - 15","text":"updated bb_renv_datapkg check install latest package version.","code":""},{"path":"/news/index.html","id":"blasertools-0009016-17","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9016-17","title":"blaseRtools 0.0.0.9016-17","text":"new function bb_load_cloud_counts compatibility 10X cloud preprocessing output.","code":""},{"path":"/news/index.html","id":"blasertools-0009018","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9018","title":"blaseRtools 0.0.0.9018","text":"added cell feature metadata functions.","code":""},{"path":"/news/index.html","id":"blasertools-0009019-20","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9019-20","title":"blaseRtools 0.0.0.9019-20","text":"added blind unblind functions","code":""},{"path":"/news/index.html","id":"blasertools-0009021-25","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9021-25","title":"blaseRtools 0.0.0.9021-25","text":"edited blind function tbl_to_coldata tbl_to_rowdata functions","code":""},{"path":"/news/index.html","id":"blasertools-0009026","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9026","title":"blaseRtools 0.0.0.9026","text":"add bb_plotfootprint function signac","code":""},{"path":"/news/index.html","id":"blasertools-0009027-32","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9027-32","title":"blaseRtools 0.0.0.9027-32","text":"added ape class functions","code":""},{"path":"/news/index.html","id":"blasertools-0009033","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9033","title":"blaseRtools 0.0.0.9033","text":"fixed glitch tbl coldata tbl rowdata","code":""},{"path":"/news/index.html","id":"blasertools-0009034-6","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9034-6","title":"blaseRtools 0.0.0.9034-6","text":"added hg38_ape","code":""},{"path":"/news/index.html","id":"blasertools-0009037","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9037","title":"blaseRtools 0.0.0.9037","text":"fixed plyranges namespace issue","code":""},{"path":"/news/index.html","id":"blasertools-0009038","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9038","title":"blaseRtools 0.0.0.9038","text":"fixed Ape.fimo color bug","code":""},{"path":"/news/index.html","id":"blasertools-0009039","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9039","title":"blaseRtools 0.0.0.9039","text":"Added trace class functions","code":""},{"path":"/news/index.html","id":"blasertools-0009040","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9040","title":"blaseRtools 0.0.0.9040","text":"Removed dependency plyranges since causing many conflicts difficult install. Changed importing functions DESeq2 DoubletFinder","code":""},{"path":"/news/index.html","id":"blasertools-0009041","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9041","title":"blaseRtools 0.0.0.9041","text":"Fixed load cloud counts err multi-genome samples. Now load genomes remove ones don’t want cds. Just easier way.","code":""},{"path":"/news/index.html","id":"blasertools-0009042","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9042","title":"blaseRtools 0.0.0.9042","text":"externalized data objects certain functions","code":""},{"path":"/news/index.html","id":"blasertools-0009045","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9045","title":"blaseRtools 0.0.0.9045","text":"added metafeature functions","code":""},{"path":"/news/index.html","id":"blasertools-0009046","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9046","title":"blaseRtools 0.0.0.9046","text":"added bb_load_tenx_targz removed 10X loading functions since confusing.","code":""},{"path":"/news/index.html","id":"blasertools-0009047","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9047","title":"blaseRtools 0.0.0.9047","text":"added bb_cluster_representation","code":""},{"path":"/news/index.html","id":"blasertools-0009048","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9048","title":"blaseRtools 0.0.0.9048","text":"added bb_pseudobulk_mf","code":""},{"path":"/news/index.html","id":"blasertools-0009049","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9049","title":"blaseRtools 0.0.0.9049","text":"added scRNA-seq vignette","code":""},{"path":"/news/index.html","id":"blasertools-0009050","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9050","title":"blaseRtools 0.0.0.9050","text":"added bb_extract_msig","code":""},{"path":"/news/index.html","id":"blasertools-0009051","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9051","title":"blaseRtools 0.0.0.9051","text":"fixed pseudobulk mf","code":""},{"path":"/news/index.html","id":"blasertools-0009052","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9052","title":"blaseRtools 0.0.0.9052","text":"Ape vignette, fixed bugs Ape functions bb_renv_datapkg.","code":""},{"path":"/news/index.html","id":"blasertools-0009053-4","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9053-4","title":"blaseRtools 0.0.0.9053-4","text":"Changes bb_gene_dotplot","code":""},{"path":"/news/index.html","id":"blasertools-0009055","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9055","title":"blaseRtools 0.0.0.9055","text":"Changed dependencies","code":""},{"path":"/news/index.html","id":"blasertools-0009056","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9056","title":"blaseRtools 0.0.0.9056","text":"Added filter_cds","code":""},{"path":"/news/index.html","id":"blasertools-0009057","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9057","title":"blaseRtools 0.0.0.9057","text":"edited dependencies","code":""},{"path":"/news/index.html","id":"blasertools-0009058","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9058","title":"blaseRtools 0.0.0.9058","text":"added bb_cds_anno bb_cds_heatmap functions","code":""},{"path":"/news/index.html","id":"blasertools-0009059---61","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9059 - 61","title":"blaseRtools 0.0.0.9059 - 61","text":"edited DESCRIPTION include ComplexHeatmap","code":""},{"path":"/news/index.html","id":"blasertools-0009064","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9064","title":"blaseRtools 0.0.0.9064","text":"edited dependencies include tidyverse depends","code":""},{"path":"/news/index.html","id":"blasertools-0009065","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9065","title":"blaseRtools 0.0.0.9065","text":"added citeseq functions","code":""},{"path":"/news/index.html","id":"blasertools-0009066","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9066","title":"blaseRtools 0.0.0.9066","text":"increased default brightness bb_gene_umap color scale","code":""},{"path":"/news/index.html","id":"blasertools-0009067","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9067","title":"blaseRtools 0.0.0.9067","text":"fixed bug citeseq functions object got converted wrong class","code":""},{"path":"/news/index.html","id":"blasertools-0009068","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9068","title":"blaseRtools 0.0.0.9068","text":"fixed spot pseudobulk converted sparse dense unnecessarily","code":""},{"path":"/news/index.html","id":"blasertools-0009069","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9069","title":"blaseRtools 0.0.0.9069","text":"added cellchat functions","code":""},{"path":"/news/index.html","id":"blasertools-0009075-9","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9075-9","title":"blaseRtools 0.0.0.9075-9","text":"edited pseudobulk mf choose vst large number samples added back cellchat silenced warnings bb_gene_umap bb_var_umap","code":""},{"path":"/news/index.html","id":"blasertools-0009080","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9080","title":"blaseRtools 0.0.0.9080","text":"edited dependencies","code":""},{"path":"/news/index.html","id":"blasertools-0009090---94","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9090 - 94","title":"blaseRtools 0.0.0.9090 - 94","text":"ported many essential functions take Seurat cds objects.","code":""},{"path":"/news/index.html","id":"blasertools-0009095","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9095","title":"blaseRtools 0.0.0.9095","text":"added max expression value parameter bb_gene_umap","code":""},{"path":"/news/index.html","id":"blasertools-0009096","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9096","title":"blaseRtools 0.0.0.9096","text":"added geom split violin","code":""},{"path":"/news/index.html","id":"blasertools-0009097","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9097","title":"blaseRtools 0.0.0.9097","text":"reversed order link plotting trace_funcs.R now highest scoring link plotted top","code":""},{"path":"/news/index.html","id":"blasertools-0009098-100","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9098-100","title":"blaseRtools 0.0.0.9098-100","text":"added rasterize option umap violin plot functions","code":""},{"path":"/news/index.html","id":"blasertools-0009101","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9101","title":"blaseRtools 0.0.0.9101","text":"added alt dims bb_gene_umap","code":""},{"path":"/news/index.html","id":"blasertools-0009102","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9102","title":"blaseRtools 0.0.0.9102","text":"added font face option plot trace model function","code":""},{"path":"/news/index.html","id":"blasertools-0009103","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9103","title":"blaseRtools 0.0.0.9103","text":"added split atac function new parameter bb_qc set alternate cutoffs","code":""},{"path":"/news/index.html","id":"blasertools-0009104","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9104","title":"blaseRtools 0.0.0.9104","text":"edited split citeseq withDimnames param","code":""},{"path":"/news/index.html","id":"blasertools-0009105","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9105","title":"blaseRtools 0.0.0.9105","text":"added label option bb_var_umap","code":""},{"path":"/news/index.html","id":"blasertools-0009106","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9106","title":"blaseRtools 0.0.0.9106","text":"added option show alt experiment bb_rowmeta debugged bb_cite_umap changed x, y labels bb_gene_umap","code":""},{"path":"/news/index.html","id":"blasertools-0009107-108","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9107-108","title":"blaseRtools 0.0.0.9107-108","text":"added option plot antibody capture gene bubbles made changes bb_aggregate support ","code":""},{"path":"/news/index.html","id":"blasertools-0009109","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9109","title":"blaseRtools 0.0.0.9109","text":"added expression_threshold genebubbles","code":""},{"path":"/news/index.html","id":"blasertools-0009110","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9110","title":"blaseRtools 0.0.0.9110","text":"debugged cite umap","code":""},{"path":"/news/index.html","id":"blasertools-0009111","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9111","title":"blaseRtools 0.0.0.9111","text":"debugged gene umap plotting aggregate genes","code":""},{"path":"/news/index.html","id":"blasertools-0009112-3","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9112-3","title":"blaseRtools 0.0.0.9112-3","text":"debugged bb_rowmeta bb_aggregate experiment names parameter","code":""},{"path":"/news/index.html","id":"blasertools-0009114","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9114","title":"blaseRtools 0.0.0.9114","text":"added normalize_batch()","code":""},{"path":"/news/index.html","id":"blasertools-0009115","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9115","title":"blaseRtools 0.0.0.9115","text":"edited bb_citeseq optionally order cells plot","code":""},{"path":"/news/index.html","id":"blasertools-0009116","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9116","title":"blaseRtools 0.0.0.9116","text":"removed matrix.utils dependency","code":""},{"path":"/news/index.html","id":"blasertools-0009117-24","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9117-24","title":"blaseRtools 0.0.0.9117-24","text":"removed seurat wrappers dependency removed renv dependency edited git ignore added vignettes buildignore removed examples","code":""},{"path":"/news/index.html","id":"blasertools-0009117-25","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9117-25","title":"blaseRtools 0.0.0.9117-25","text":"added assay option cite umap","code":""},{"path":"/news/index.html","id":"blasertools-0009126---30","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9126 - 30","title":"blaseRtools 0.0.0.9126 - 30","text":"major update ape functions refactored corrected bugs added transcriptome APE function","code":""},{"path":"/news/index.html","id":"blasertools-0009132","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9132","title":"blaseRtools 0.0.0.9132","text":"added bb_cluster_representation2","code":""},{"path":"/news/index.html","id":"blasertools-0009133-4","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9133-4","title":"blaseRtools 0.0.0.9133-4","text":"added bb_load_tensx_h5 edited bb_split_citeseq recalculate size factors removing antibody matrix","code":""},{"path":"/news/index.html","id":"blasertools-0009135-6","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9135-6","title":"blaseRtools 0.0.0.9135-6","text":"debugged seurat_anno","code":""},{"path":"/news/index.html","id":"blasertools-0009137-8","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9137-8","title":"blaseRtools 0.0.0.9137-8","text":"pseuodime functions","code":""},{"path":"/news/index.html","id":"blasertools-0009139","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9139","title":"blaseRtools 0.0.0.9139","text":"added plot geens pseudotime","code":""},{"path":"/news/index.html","id":"blasertools-0009140-1","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9140-1","title":"blaseRtools 0.0.0.9140-1","text":"fixed transcriptome ape function","code":""},{"path":"/news/index.html","id":"blasertools-0009142","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9142","title":"blaseRtools 0.0.0.9142","text":"added outline function bb_var_umap","code":""},{"path":"/news/index.html","id":"blasertools-0009143","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9143","title":"blaseRtools 0.0.0.9143","text":"fixed bug factors got lost bb_genebubbles","code":""},{"path":"/news/index.html","id":"blasertools-0009144","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9144","title":"blaseRtools 0.0.0.9144","text":"updated blind unblind functions use fs::path added blinding vignette","code":""},{"path":"/news/index.html","id":"blasertools-0009145-6","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9145-6","title":"blaseRtools 0.0.0.9145-6","text":"major updates trace functions","code":""},{"path":"/news/index.html","id":"blasertools-0009147","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9147","title":"blaseRtools 0.0.0.9147","text":"updated ape function put placeholder feature gbk files without features.","code":""},{"path":"/news/index.html","id":"blasertools-0009148","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9148","title":"blaseRtools 0.0.0.9148","text":"updated bb_doubletfinder work seurat v5","code":""},{"path":"/news/index.html","id":"blasertools-0009149","dir":"Changelog","previous_headings":"","what":"blaseRtools 0.0.0.9149","title":"blaseRtools 0.0.0.9149","text":"fixed bugs trace functions related trimming levels peaks slot.","code":""}]
